
<head>
<!--
////////////////////////////////////////////////////////////////////////////////
///////////////////////////[COMMENTS START]/////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Developed by IBM AVP Michael Paishon
// Template provides a means for running report stats accross sub agencies
// Requires Datatables, Bootstrap, bootstrap select
// Customer should not use IE with this report framework, 
// Webkit browsers prefered (Chrome,Fireforx,Safari)
// This code is not supported, use at your own risk and discretion
// Requires LIB2 Framework
////////////////////////////////////////////////////////////////////////////////
///////////////////////////[COMMENTS END]///////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//1.11 - 
* Added count of Item Selection for  group select within group tab 
* Added select depth count limiter global_select_box_depth_limit
* Added description render as a report option for a report type

-->

<!-- Generated by Datatables build Start-->
<link rel="stylesheet" type="text/css" href="/Custom/lib2/DataTables-1.10.9/css/jquery.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/AutoFill-2.0.0/css/autoFill.dataTables.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/Buttons-1.0.3/css/buttons.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/ColReorder-1.2.0/css/colReorder.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/FixedColumns-3.1.0/css/fixedColumns.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/FixedHeader-3.0.0/css/fixedHeader.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/Scroller-1.3.0/css/scroller.dataTables.min.css"/>
<link rel="stylesheet" type="text/css" href="/Custom/lib2/Select-1.0.1/css/select.dataTables.min.css"/>

<script type="text/javascript" src="/Custom/lib2/jQuery-2.1.4/jquery-2.1.4.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/JSZip-2.5.0/jszip.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/pdfmake-0.1.18/build/pdfmake.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/pdfmake-0.1.18/build/vfs_fonts.js"></script>
<script type="text/javascript" src="/Custom/lib2/DataTables-1.10.9/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/AutoFill-2.0.0/js/dataTables.autoFill.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Buttons-1.0.3/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Buttons-1.0.3/js/buttons.colVis.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Buttons-1.0.3/js/buttons.flash.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Buttons-1.0.3/js/buttons.html5.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Buttons-1.0.3/js/buttons.print.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/ColReorder-1.2.0/js/dataTables.colReorder.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/FixedColumns-3.1.0/js/dataTables.fixedColumns.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/FixedHeader-3.0.0/js/dataTables.fixedHeader.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Scroller-1.3.0/js/dataTables.scroller.min.js"></script>
<script type="text/javascript" src="/Custom/lib2/Select-1.0.1/js/dataTables.select.min.js"></script>
<!-- Generated by Datatables build End-->



<!-- Bootstrap Nav Bar Theme Start-->
	<link rel="stylesheet" type="text/css" href="/Custom/lib2/Bootstrap-3.3.5/css/bootstrap.min.css"/>
	<script type="text/javascript" src="/Custom/lib2/Bootstrap-3.3.5/js/bootstrap.min.js"></script>
<!-- Bootstrap Nav Bar Theme End-->


<!--Bootstrap Select Start-->
	<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="/Custom/lib2/bootstrap-select-1.10.0/dist/css/bootstrap-select.min.css">
	<!-- Latest compiled and minified JavaScript -->
<script src="/Custom/lib2/bootstrap-select-1.10.0/dist/js/bootstrap-select.min.js"></script>
	<!-- (Optional) Latest compiled and minified JavaScript translation files -->
<script src="/Custom/lib2/bootstrap-select-1.10.0/dist/js/i18n/defaults-en_US.js"></script>
<!--Bootstrap Select End-->

<script type="text/javascript" charset="utf-8">
/////////////////////////////////////////////////////////////////////////////////
///////////////////////////////[Start of Detect Browser]/////////////////////////
/////////////////////////////////////////////////////////////////////////////////
 // This code must prefix all code within the report...
 //	//These functions are here to detect if Jquery 2.0 will be supported, 
//https://jquery.com/browser-support/
var global_browser_detection = ''	

function js_detect_browser_unsupported(){
	//These functions are here to detect if Jquery 2.0 will be supported, 
	//https://jquery.com/browser-support/
	
var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
    // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)
var isFirefox = typeof InstallTrigger !== 'undefined';   // Firefox 1.0+
var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
    // At least Safari 3+: "[object HTMLElementConstructor]"
var isChrome = !!window.chrome && !isOpera;              // Chrome 1+
var isIE = /*@cc_on!@*/false || !!document.documentMode; // At least IE6

	if (isOpera) {
			global_browser_detection = 'Opera'
	}
	if (isFirefox) {
		global_browser_detection = 'Firefox'
	}
	if (isSafari) {
		global_browser_detection = 'Safari'
	}
	if (isChrome) {
			global_browser_detection = 'Chrome'
	}
	if (isIE) {
		
		var ie_ver = js_detect_browser_msieversion()
		global_browser_detection = 'IE ' &  ie_ver
		if (js_detect_browser_isint(ie_ver)){
			if (ie_ver  < 10){
				alert('This version of IE is not supported... The minimum IE version supported by this report framework is IE 10, \n \n Note: You may be using IE 10 or 11, however the native compatibility is set to 8 (IE 10 & 11 sets the default compatibility to 8). If you are using IE 11 or 10, check your document mode (press F12 / Emulation Tab / Document Mode) \n \n Javascript has detected IE version as: ' + ie_ver )
				document.execCommand("Stop"); 
			}
		}

	}
}

function js_detect_browser_msieversion(){

        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");
		var retstring

        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer, return version number
            retstring = (parseInt(ua.substring(msie + 5, ua.indexOf(".", msie))));
        else                 // If another browser, return 0
            retstring = 'otherbrowser';

  return retstring;
}

function js_detect_browser_isint(n){
   return n % 1 === 0;
}

js_detect_browser_unsupported()
/////////////////////////////////////////////////////////////////////////////////
///////////////////////////////[END of Detect Browser]///////////////////////////
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
////////////////////////////[START External File Loaders]////////////////////////
/////////////////////////////////////////////////////////////////////////////////
function js_load_ext_js_file(filename){
	//External JavaScript file
	js_debug('Loading External JS Reference: ' + filename + ' Start' )
	
	var fileref=document.createElement('script')
	fileref.setAttribute("type","text/javascript")
	fileref.setAttribute("src", filename)
	document.getElementsByTagName("head")[0].appendChild(fileref)	
	
	js_debug('Loading External JS Reference: ' + filename + ' Complete' )
}

function js_load_ext_css_file(filename){
	 // External CSS file
	 js_debug('Loading External CSS Reference: ' + filename + ' Start' )
	 
	var fileref=document.createElement("link")
	fileref.setAttribute("rel", "stylesheet")
	fileref.setAttribute("type", "text/css")
	fileref.setAttribute("href", filename)
	document.getElementsByTagName("head")[0].appendChild(fileref)			
	
	js_debug('Loading External CSS Reference: ' + filename + ' Complete' )
}

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////[END External File Loaders]/////////////////////////
/////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////[START FN Prototypes]///////////////////////////
/////////////////////////////////////////////////////////////////////////////////

//Fix for IE Trim
// Adding trim function to String object
if(typeof String.prototype.trim !== 'function') {
  String.prototype.trim = function() {
	return this.replace(/^\s+|\s+$/g, '');
  }
}



/////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////[END FN Prototypes]///////////////////////////
/////////////////////////////////////////////////////////////////////////////////


</script>	

</head>

<body>

		<div id='modal_report_running'class="modal fade" tabindex="-1" role="dialog">
		  <div class="modal-dialog">
			<div class="modal-content">
			  <div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title"><span class="glyphicon glyphicon-refresh"></span> Hold on for a bit... </h4>
			  </div>
			  <div class="modal-body">
				<p>A Query or Report is running in the background. Your browser may seem to be unresponsive while queries are running. This is normal until all queries have completed. Once all queries have completed, your browser will return responsive control. If you are asked to kill active running javascripts, select NO, and allow the scripts to continue to run. Forcing scripts to end will cause unpredictable behavior.</p>
			  </div>
			  <div class="modal-footer">
				<!--<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>-->
				
					<div class="progress">
					  <div  class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%">
							Query in progress
					  </div>
					</div>
				
				
			  </div>
			</div><!-- /.modal-content -->
		  </div><!-- /.modal-dialog -->
		</div><!-- /.modal -->

		<div class='tab1_container'>
			<div class="well">
				<div class="panel panel-primary">
					  
					<div class="panel-heading">
						<i class="fa fa-dashboard fa-fw"></i>
						<span class="panel-title"><font size="2"><b>Bigfix Report Factory</b></font><br><font size="1"> * Developed by: Bigfix AVP </font></span>
					</div>
					<div class="panel-body">
						<div class="row">
							<div class="col-lg-12">			
								<ul class="nav nav-tabs">
								  <li id='tab1'><a data-toggle="tab" href="#tab1target"><span class="glyphicon glyphicon-file"></span>Main Reports</a></li>
								  <li id='tab2'><a data-toggle="tab" href="#tab2target"><span class="glyphicon glyphicon-file"></span>Report by Group</a></li>
								  <li id='tab3'><a data-toggle="tab" href="#tab3target"><span class="glyphicon glyphicon-th-list"></span> Drilldowns</a></li>
								  <li id='tab4'><a data-toggle="tab" href="#tab4target" class="debugdivs"><span class="glyphicon glyphicon-cog"></span> Debug</a></li>
								</ul>

								<div class="tab-content">
								  <!--1st Tab Contents Start-->
								  <div id="tab1target" class="tab-pane fade in active">
									<!--<h4 align="center"><span class="glyphicon glyphicon-file"></span>Standard Reports</h4>-->
									<br>

									<div id="group_div">
										<div class="panel panel-default">
											<div class="panel-body">

												<form role="form">
													<div class="row">
															<div class="col-md-12 main_dril">
																<div class="thumbnail">
																   <br>
																   <fieldset align="center" class="form-group">
																	  <span class="glyphicon glyphicon-folder-open"></span>
																	  <label class="customtooltip_onload" data-original-title="Select a report type from the drop down.">Search Reports:  </label>
																	  <select id='ui_report_type'class="selectpicker" data-live-search="true" data-width="80%" data-actions-box="true" title="Search Reports..." data-size="7">
																	  </select>
																	  <span  class="customtooltip_onload" data-original-title="Number of reports loaded.">
																		<label class="badge animatenumber" id='lbl_report_cnt'></label><small> Reports</small>
																	  </span>
																	</fieldset>	
																	
																	<fieldset id="ui_reportype_cve_select_wrapper" align="center" class="form-group">
																		<span class="glyphicon glyphicon-filter"></span>
																		<label class="customtooltip_onload" data-original-title="Select one or several CVEs from the drop down.">Search CVE(s): </label>
																		<select id='ui_cve_select'  class="selectpicker" data-live-search="true" data-size="10" data-width="80%" data-actions-box="true" multiple title="Search CVE(s)..." data-selected-text-format="count">
																		</select>
																		<span  class="customtooltip_onload" data-original-title="Number of unique CVEs loaded.">
																			<label class="badge" id='lbl_cve_cnt'></label><small> CVEs</small>
																		</span>	
																	</fieldset>	
																	
																	<fieldset id="ui_reportype_property_select_wrapper" align="center" class="form-group">
																		<span class="glyphicon glyphicon-filter"></span>
																		<label class="customtooltip_onload" data-original-title="Select one or several properties from the drop down.">Search Properties: </label>
																		<select id='ui_property_select'  class="selectpicker" data-live-search="true" data-size="10" data-width="80%" data-actions-box="true".  multiple title="Search Properties..." data-selected-text-format="count">
																		</select>
																		<span class="customtooltip_onload" data-original-title="Number of unique properties loaded.">
																			<label class="badge" id='lbl_prop_cnt'></label><small> Properties</small>
																		</span>	
																	</fieldset>		
																	
																	<fieldset id="ui_reportype_msbull_select_wrapper" align="center" class="form-group">
																		<span class="glyphicon glyphicon-filter"></span>
																		<label class="customtooltip_onload" data-original-title="Select one or several msbulls from the drop down.">Search Microsoft bulletins: </label>
																		<select id='ui_msbull_select' class="selectpicker" data-live-search="true" data-size="10" data-width="80%" data-actions-box="true" multiple title="Search Microsoft bulletins..." data-selected-text-format="count"></select>
																		<span  class="customtooltip_onload" data-original-title="Number of unique Microsoft bulletins loaded.">
																			<label class="badge" id='lbl_msbull_cnt'></label><small> Bulletins</small>
																		</span>	
																	</fieldset>	

																</div>
												
															</div>
													</div>
													
													<div class="row">
														<div class="col-md-12 main_dril">																												
															<div id="ui_reportype_description">
															</div>
														</div>
													</div>
													
													<div class="row">
														<div class="col-md-12 main_dril">
															<div class="input-group">	
																<a id='run_dept_report_btn' class="btn btn-default report_launch_button" role="button"><span class="glyphicon glyphicon-play"></span> Run Report</a>
																 <span> </span>
															</div>	
														</div>
													</div>
												</form>				
											</div>
										</div>
									</div>

									<form role="form">
										<div class="form-group">
										
											<div id="dept_table_wrapper">
												<div id="div_result_dept_title" align="center"></div>
												<div id='div_result_dept'>
												</div>
											</div>		
											
										</div>
									</form>										
								  </div>
								  <!--1st Tab Contents end-->
								  
								  <!--2nd Tab Contents Start-->
								  <div id="tab2target" class="tab-pane fade">
									<h4 align="center"><span class="glyphicon glyphicon-file"></span> Report by Group</h4>
									<br>

									<div id="group_div">
										<div class="panel panel-default">
											<div class="panel-body">

												<form role="form">
													<div class="row">
														<div class="col-md-12 main_dril">														
															<div class="thumbnail">
															   <fieldset align="center" class="form-group">
															   <span class="glyphicon glyphicon-folder-open"></span>
															   <span><b> Report Definition Loaded:</b><span>
																<span id='rpt_type_grp' class="customtooltip_onload" data-original-title="The report definition is mirrored from the main report page">No Report Definition has been loaded</span>
																<br>

																<br>
																<label class="customtooltip_onload" data-original-title="Select computer groups from the drop down. Note: there is a live search functionality">Select Computer Groups: </label>
																  <select id='ui_input_computergrp'class="selectpicker" data-live-search="true" data-width="80%" data-actions-box="true" multiple multiple title="Search Groups..." data-size="7" data-selected-text-format="count">
																  </select>
																</fieldset>	
															</div>
														</div>
													</div>
													
													<div class="row">
														<div class="col-md-12 main_dril">
															<div class="input-group">	
																<a id='run_bureau_report_btn' class="btn btn-default report_launch_button" role="button"><span class="glyphicon glyphicon-play"></span> Run Report</a>
																 <span> </span>
															</div>	
														</div>
													</div>
												</form>				
											</div>
										</div>
									</div>

									<form role="form">
										<div class="form-group">
										
											<div id="bureau_table_wrapper">
												<div id="div_result_bureau_title" align="center"></div>
												<div id='div_result_bureau'>
												</div>
											</div>		
											
										</div>
									</form>		
								  </div>
								  <!--2nd Tab Contents End-->
								  
								  <!--3rd Tab Contents Start-->
								  <div id="tab3target" class="tab-pane fade">
									<h4 align="center"><span class="glyphicon glyphicon-th-list"></span> Drilldown Reports</h4>
									<br>
										
										<div id="subreport-frm-accordion" class="panel-group"></div>	
										
								  </div>
								  <!--3rd Tab Contents End-->
								  
								  <!--4th Tab Contents Start-->
								  <div id="tab4target" class="tab-pane fade debugdivs">
									<h4 align="center"><span class="glyphicon glyphicon-cog"></span> Debug Information</h4>
									<br>
										<div class="well">
											<div id='div_debug' style="height:400px;overflow:scroll;padding:5px;border:1px dashed #DEBB07;"></div>
											<br>
											<a id='run_test_report_btn' class="btn btn-default report_launch_button" role="button"><span class="glyphicon glyphicon-play"></span>Test Fn</a>
										</div>
								  <!--4th Tab Contents End-->	
								  
								</div><!--End tab contents-->
							</div><!--End Clm12-->
						</div><!--End Row-->					
					</div><!--Pannel Body End-->
				</div><!--Pannel End-->
			</div>	<!--Well End-->
		</div>	<!--Tab Container End-->
	</body>
	<script type="text/javascript" charset="utf-8">
//****************************************************************************************************
//***************************************[GLOBAL VARIABLES]*******************************************
//****************************************************************************************************
//****************************************************************************************************		

//Manipulating any of these variables is NOT supported, and may lead to unpredicatable behavior.

//global_show_debug, boolean value. When set to true, Debug menu will be shown, when set to false, it will be hidden
 var global_show_debug = true
//global_max_grp_select Max number of computer groups that can be selected at a given time. 
 var global_max_grp_select = 10
 //number of events to keep within js_debug Log before rolling
 var global_event_cnter_limit = 200
 //Select Dropdown elements number of rows limit 
 var global_select_box_depth_limit = 8
 //set the limit on the amount of CVE's the can be selected
 var global_cve_select_box_limit = 100 
  //set the limit on the amount of MSbulletiens the can be selected
 var global_msbull_select_box_limit = 50
 //set the limit on the amount of properties the can be selected
 var global_property_select_box_limit = 10
 
//These variables are globally managed by the report START
 var gbl_query_fixlet_whose = ''
 var gbl_report_main_render = ''
 var gbl_report_group_render = ''
 var gbl_report_def_object = ''
 var global_query_cnter = 0
 var global_query_aync_cnter = 0
 var global_event_cnter = 0
 var global_event_total_cnter = 0
 var global_report_type_cnter = 0
 //Flags for not reloading supporting selects
 var global_cve_dropdown_loaded = false
 var global_msbull_dropdown_loaded = false
 var global_besproperty_dropdown_loaded = false
 //These variables are globally managed by the report END	
//****************************************************************************************************
//***************************************[GLOBAL VARIABLES]*******************************************
//****************************************************************************************************
//****************************************************************************************************


function js_onload(){

	js_debug('FN Run Start js_onload')	
	//function is fired upon load
	//log revision
	js_debug("ver 1.24.a [Updated: 9-3-2016]")

			//Tie UI events to butttons
			  $('#run_bureau_report_btn').click(function(){ 
		  
					if (gbl_query_fixlet_whose == ''){
						alert('UI Validation Error\n\n Description: A Report Type Must be selected. \n\n Fixlet Whose Clause is Undefined')
						return;
					}		
					var itemselected = 0
				 
					//Checking how many Select Items have been Selected
					$('#ui_input_computergrp > option:selected').each(function() {
						itemselected++
					})
		  
					//if we have more than 0, and more less than the global max, continue down the normal code path
					if ((itemselected > 0) && (itemselected <= global_max_grp_select) ) {
						eval(gbl_report_group_render)();
					}
					//the number of item selected is greater than our max
					else if (itemselected > global_max_grp_select) {
						alert('UI Validation Error\n\n Description: To many Groups have been Selected... \n  The limit is set to: ' + global_max_grp_select + '\n  You have selected: ' + itemselected + '\n The Computer Group Select box will be reset')
						$('#ui_input_computergrp').selectpicker('deselectAll');
					}
					//this is an error trap in the case no groups were selected, or an uncaught error condition was caught...
					else {
						alert('UI Validation Error\n\n Description: No Groups have been Selected OR an untrapped error was encountered, you must select at least one group from the group selection dropdown...')
					}
				
			  })
			  //wire up main report button
			  $('#run_dept_report_btn').click(function(){ 
						if (gbl_query_fixlet_whose == ''){
							alert('UI Validation Error\n\n Description: A Report Type Must be selected. \n\n Fixlet Whose Clause is Undefined')
							return;
						}	
					eval(gbl_report_main_render)();	
			  })		
			  
			//set up modal and hide
			$('#modal_report_running').modal() 
			$('#modal_report_running').modal('hide') 

			//Wire up change report handler
			$( "#ui_report_type" ).change(function() {
				js_report_type_on_change_handler()
			});
			//Wire up Test button
			$('#run_test_report_btn').click(function(){ 
				js_test()
			})
			//Set default tab
			js_activetab('tab1target')
						 
					 
			//Set max group selection via JQuery
			$("#ui_input_computergrp").attr("data-max-options",global_max_grp_select);
			
			//Set the depth of the select box dropdowns   
			$("#ui_report_type").attr("data-size",global_select_box_depth_limit);
			$("#ui_input_computergrp").attr("data-size",global_select_box_depth_limit);
			$("#ui_cve_select").attr("data-size",global_select_box_depth_limit);
			$("#ui_property_select").attr("data-size",global_select_box_depth_limit);
			
			//Enable tooltips
			$('.customtooltip_onload').tooltip();	
			//Hide group tab by default (*we show it when the report type has been defined)
			$('#tab2').hide()
			//show or hide debug menu item and tab, based upon global var
			if (global_show_debug == true) {
				$('#div_debug').show()
				$('#tab4').show()
			}
			else {
				$('#div_debug').hide()
				$('#tab4').hide()
			}
			//load groups dropdown
			js_load_group_dropdown()

			
			//hide drilldown tab
			$('#tab3').hide()
			
			//hide CVE Select
			$('#ui_reportype_cve_select_wrapper').hide()
			//hide property select
			$('#ui_reportype_property_select_wrapper').hide()
			//hide MSbulletiens Select
			$('#ui_reportype_msbull_select_wrapper').hide()
			
			//set CVE Select Limit
			$("#ui_cve_select").attr("data-max-options",global_cve_select_box_limit);			
			//set property limit
			$("#ui_property_select").attr("data-max-options",global_property_select_box_limit);			
			//set MSbulletiens Select Limit
			$("#ui_msbull_select").attr("data-max-options",global_msbull_select_box_limit);		 
			//load report types	
			js_load_report_types()			
			//Loads group dropdown select list
			js_debug('FN Run Complete js_onload')	
			//Animaate badges


			js_animate_number()
}

function js_animate_number(){
	jQuery({ Counter: 0 }).animate({ Counter: $('.animatenumber').text() }, {
	  duration: 2000,
	  easing: 'swing',
	  step: function () {
		$('.animatenumber').text(Math.ceil(this.Counter));
	  }
	});
}

function js_report_type_on_change_handler(){

//this is called when the main report type changes
js_debug('FN Run Start js_report_type_on_change_handler')	
  //assign whose
   var tmp = $('#ui_report_type').find(":selected").val();
   var objrec = JSON.parse(tmp)

   
   //Set the global var for the report def...
   gbl_report_def_object = objrec
   
	if (typeof objrec.fn_whose !== "undefined"){
		//using function whose
		js_debug('FN whose invoked running: ' + objrec.fn_whose )
		if (typeof objrec.fn_whose_params !== "undefined"){
			js_debug('FN whose params are passed: ' + objrec.fn_whose_params)
			var arguments = objrec.fn_whose_params
			gbl_query_fixlet_whose = window[objrec.fn_whose](arguments)	
			
		}
		else{
			//this code branch was not actually tested
			js_debug('FN whose params NOT passed: ' + objrec.fn_whose_params)
			gbl_query_fixlet_whose = window[objrec.fn_whose]()	
		}
	}
	else {
		
		//js_debug('String whose invoked running: ' + objrec.whose )
		 gbl_query_fixlet_whose = objrec.whose
	}
   js_debug('Set whose=' + gbl_query_fixlet_whose)
  
	 //global
	 //set global report renders
	  var tmp1 = objrec.fn_main_report_render
	  js_debug('Set gbl_report_main_render=' + tmp1)
	  gbl_report_main_render = tmp1
	  
	  if (typeof objrec.fn_group_report_render !== "undefined"){
		var tmp2 = objrec.fn_group_report_render
		js_debug('Set gbl_report_group_render=' + tmp2)
		gbl_report_group_render = tmp2
		//show the group tab
		$('#tab2').show('slide')
		//set the span on the other report
		$('#rpt_type_grp').html($('#ui_report_type').find(":selected").text())
	  }
	  else {
		//hide the group selection tab
		  $('#tab2').hide('slide')
	  }	
	  
	  //Description hook
	  if (typeof objrec.description_html !== "undefined"){
		var html_append = objrec.description_html
			$('#ui_reportype_description').show('hide')
			$('#ui_reportype_description').html(html_append)
			$('#ui_reportype_description').show('slide')
	  }else {
		$('#ui_reportype_description').html('')
	  }
	  
	  //CVE select hook
	  if (typeof objrec.cve_select_params !== "undefined"){
			$('#ui_reportype_cve_select_wrapper').show('slide')
			//load cve data
			js_load_cve_dropdown()			
	  }else {
			$('#ui_reportype_cve_select_wrapper').hide()
	  }	  
	  
	  //Property select hook
	  if (typeof objrec.property_select_params !== "undefined"){
		  	//load property data 
			js_load_bes_properties_dropdown()
			$('#ui_reportype_property_select_wrapper').show('slide')
	  }else {
			$('#ui_reportype_property_select_wrapper').hide()
	  }	  

  	  //MSBull select hook
	  if (typeof objrec.msbull_select_params !== "undefined"){
			//load ms_bulletin dropdown
			js_load_ms_bull_dropdown()
			$('#ui_reportype_msbull_select_wrapper').show('slide')
	  }else {
			$('#ui_reportype_msbull_select_wrapper').hide()
	  }	  
  
js_debug('FN Run Complete js_report_type_on_change_handler')	
}
	


	
function js_load_report_types(){
		
	js_debug('FN Run Start js_load_report_types')	
	//*********************************************************************************************************************
	var load_test_reports = true					//when set to true this will load the testing reports
	var load_internal_reports = true 				//when set to true this will allow the default report types to load. This is like a master shutoff switch for ALL default reports
	var load_external_reports = true 				//when set to true this will allow external reports to load
	var load_top_patch =true						//show top patch 
	var load_top_vulnerabilities_for_windows =true 	//show top vuln for windows content
	var load_unix_patches =true						//show nix content
	var load_windows_patches =true					//show windows patches
	var load_update_for_windows_patches =true		//show updates for win content
	var load_disa_sites =true						//show Disa SCM content
	var load_usgcb_sites =true						//Show USGCB Content
	var load_cis_sites =true						//show CIS SCM Conntent 
	var load_bigfix_content =true					//show CIS SCM Conntent 
	var load_bigfix_operator =true					//show Bigfix Operator reports
	var load_property_reports =true					//show property reports
	var load_cve_reports =true						//show CVE reports
	var load_msbull_reports = true					//load MS bulletin Reports
	var load_bigfix_relay = true					//show Bigfix relay reports
	var load_bigfix_scorecard = true				//show Bigfix scorecard
	//*********************************************************************************************************************
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                      		//External Report Loads[START]                                                ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		//Note: when testing a reference that is external... You must reload your browser to ensure the codepage is up to date. 
		//Block to load up external Reports
		
		if ((load_external_reports == true) && (typeof(js_run_external_report_types) !== "undefined")){
			/*
			This is the reference entry function for external report type loading.
			The external Script must be added as a reference at the end of the page after the body tag
			This section of code will call the entry function js_run_external_report_types(), so that must be defined within the external reference. 
			*/
			js_run_external_report_types()
		}	
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                      		//External Report Loads[END]                                                ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************		

	if (load_internal_reports == true){
		var query =  '(exists (bes site whose (display name of it = "Patches for Windows")));'
		query += '(exists (bes site whose (display name of it = "Vulnerabilities to Windows Systems" and ((number of subscribed computers of it) > 0))));'
		query += '(exists (bes site whose (display name of it = "Updates for Windows Applications" and ((number of subscribed computers of it) > 0))));'
		query += '(exists (bes site whose (display name of it contains "DISA" and ((number of subscribed computers of it) > 0))));'
		query += '(exists (bes site whose (display name of it contains "USGCB" and ((number of subscribed computers of it) > 0))));'
		query += '(exists (bes site whose (display name of it contains "CIS" and ((number of subscribed computers of it) > 0))));'
		query += '(exists (bes site whose (display name of it contains "Patches for" and ((number of subscribed computers of it) > 0) and display name of it does not contain "Windows")));'
		query += '(exists (bes fixlet whose (exist cve id list of it)))'
		
		js_debug('Report Types to load Query Start')
		var ret = js_relevance(query)
		js_debug('Report Types to load Query Complete')
		
		//note this returns a string not a boolean at this point
		var site_patches_for_win = ret[0]
		var site_vuln_for_win = ret[1]
		var site_update_for_win = ret[2]
		var site_scm_disa = ret[3]
		var site_scm_usgcb = ret[4]
		var site_scm_cis = ret[5]
		var site_unix_patch_site = ret[6]
		var cve_fixlets = ret[7]

		var tmpobjreporttype=new Array()			
	}
	
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//Scorecard REPORTS[START]                                                ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************	
	if (load_bigfix_scorecard == true && load_internal_reports == true) {
		var report_def = new Object()
		report_def.details = ' (Risk Scorecard Beta 2)'			
		report_def.whose = 'replaced'
		report_def.name = '[Bigfix Scorecard] - Risk Score Card Beta Report v2'
		report_def.fn_main_report_render = "js_scorestats_v2_main_report_init"				
		tmpobjreporttype.push(report_def)
	}	
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//Property REPORTS[START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		if (load_property_reports == true && load_internal_reports == true) {
			var report_def = new Object()
			report_def.details = ' (Review results of bes properties data)'
			report_def.whose = 'replace'
			report_def.name = '[TEST Inventory] Analysis Property Search'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"	
			report_def.property_select_params = 'True'		
			tmpobjreporttype.push(report_def)	
		}
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//Operator REPORTS[START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		if (load_bigfix_operator == true && load_internal_reports == true) {
			var report_def = new Object()
			report_def.details = ' (Review all bes console operators account attributes)'
			report_def.whose = 'whose (true = true)'
			report_def.name = '[BigFix Operator] All Operators'
			report_def.fn_main_report_render = "js_run_ops_main_report"				
			tmpobjreporttype.push(report_def)	
			
			var report_def = new Object()
			report_def.details = ' (Review console operators who have logged in within the last 24 hours)'
			report_def.whose = ' whose (( exist last login time of it) and (  last login time of it >= (now - 24 * hour) ))'
			report_def.name = '[BigFix Operator] Operators logged in within the last 24 hours'
			report_def.fn_main_report_render = "js_run_ops_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have actively logged in within the last 24 hours. This does not account for cached sessions that may have been open longer. If no operators have authenticated within the last 24 hours the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)				

			var report_def = new Object()
			report_def.details = ' (Review console operators who have logged in within the last 7 days)'
			report_def.whose = ' whose (( exist last login time of it) and (  last login time of it >= (now - 7 * day) ))'
			report_def.name = '[BigFix Operator] Operators logged in within the last 7 days'
			report_def.fn_main_report_render = "js_run_ops_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have actively logged in within the last 7 days. This does not account for cached sessions that may have been open longer. If no operators have authenticated within the last 7 days the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)				
			
			var report_def = new Object()
			report_def.details = ' (Review all master operator accounts)'
			report_def.whose = ' whose (master flag of it)  '
			report_def.name = '[BigFix Operator] All Master Operators'
			report_def.fn_main_report_render = "js_run_ops_main_report"				
			tmpobjreporttype.push(report_def)		
			
			var report_def = new Object()
			report_def.details = ' (Review console operator that have not logged in since account creation)'
			report_def.whose = '  whose ( not exist last login time of it )    '
			report_def.name = '[BigFix Operator] Operators that have never logged in since account creation'
			report_def.fn_main_report_render = "js_run_ops_main_report"					
			tmpobjreporttype.push(report_def)		

			var report_def = new Object()
			report_def.details = ' (Review console operator accouts created within the last 24 hours)'
			report_def.whose = ' whose (( exist creation time of it) and (  creation time of it >= (now - 24*hour) ))'
			report_def.name = '[BigFix Operator] Operators created within the last 24 hours'
			report_def.fn_main_report_render = "js_run_ops_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have been created within the last 24 hours. If no operators have been created within the last 24 hours the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)		

			var report_def = new Object()
			report_def.details = ' (Review console operator accounts created within the last 7 days)'
			report_def.whose = ' whose (( exist creation time of it) and (  creation time of it >= (now - 7*day) ))'
			report_def.name = '[BigFix Operator] Operators created within the last 7 days'
			report_def.fn_main_report_render = "js_run_ops_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have been created within the last 7 days. If no operators have been created within the last 7 days the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)		
	
			var report_def = new Object()
			report_def.details = ' (Review all bes console operator accounts created within the last 30 days)'
			report_def.whose = ' whose (( exist creation time of it) and (  creation time of it >= (now - 30 * day) ))'
			report_def.name = '[BigFix Operator] Operators created within the last 30 days'
			report_def.fn_main_report_render = "js_run_ops_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have been created within the last 30 days. If no operators have been created within the last 30 days the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)		

			var report_def = new Object()
			report_def.details = ' (Review all non LDAP bes console operator accounts)'
			report_def.whose = ' whose (not (exist (distinguished name of it)))'
			report_def.name = '[BigFix Operator] All local operators'
			report_def.fn_main_report_render = "js_run_ops_main_report"					
			tmpobjreporttype.push(report_def)		
			
			var report_def = new Object()
			report_def.details = ' (Review all LDAP bes console operator accounts)'
			report_def.whose = ' whose (exist (distinguished name of it))'
			report_def.name = '[BigFix Operator] LDAP Operators'
			report_def.fn_main_report_render = "js_run_ops_main_report"					
			tmpobjreporttype.push(report_def)					
			
			var report_def = new Object()
			report_def.details = ' (Review all bes console operator that have not logged in for over 90 days)'
			report_def.whose = '   whose ( (exist last login time of it and last login time of it <= (now - 90*day)) and exist last login time of it )      '
			report_def.name = '[BigFix Operator] Operators that have never logged in over 90 days'
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report accounts that have actively logged in within the last 90 days. This does not account for cached sessions that may have been open longer. If all operators have authenticated within the last 90 days the report will return a blank table below'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description			
			report_def.fn_main_report_render = "js_run_ops_main_report"				
			tmpobjreporttype.push(report_def)				
		}
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//RELAY REPORTS[START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		if (load_bigfix_relay == true && load_internal_reports == true) {
			js_debug('Loading Internal Testing Report Types')
			var report_def = new Object()
			report_def.details = ' (Review the total number of machines reporting to relays)'
			report_def.whose = 'whose (relay server flag of it OR root server flag of it) '
			report_def.name = '[Relay] Total number of clients and relays reporting to a relay'
			report_def.fn_main_report_render = "js_run_relay_number_of_children_main_report"		
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will report the number of direct report clients reporting to a relay. This coorelation is done by first querying all clients within the system for there parent relay name, and then coorelating that result to a relay computer within the system by same name. If the name of the relay parent of the client does not match the name of any relays within the system, this situation will not be caught within the table immediately below. If this situateion is detected an additional report section and table will be rendered below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)	
			
			var report_def = new Object()
			report_def.details = ' (Based upon last report time of the relay)'
			report_def.whose = 'whose (((relay server flag of it) OR (root server flag of it)) and (last report time of it < (now - (1 * day)))) '
			report_def.name = '[Relay] Review relays that have not reported within the last day'
			report_def.fn_main_report_render = "js_run_relay_main_report"				
			tmpobjreporttype.push(report_def)				
			
			var report_def = new Object()
			report_def.details = ' (Based upon last report time of the relay)'
			report_def.whose = 'whose (((relay server flag of it) OR (root server flag of it)) and (last report time of it < (now - (7 * day)))) '
			report_def.name = '[Relay] Review relays that have not reported within the last 7 days'
			report_def.fn_main_report_render = "js_run_relay_main_report"				
			tmpobjreporttype.push(report_def)		

			var report_def = new Object()
			report_def.details = ' (Based upon last report time of the relay)'
			report_def.whose = 'whose (((relay server flag of it) OR (root server flag of it)) and (last report time of it < (now - (30 * day)))) '
			report_def.name = '[Relay] Review relays that have not reported within the last 30 days'
			report_def.fn_main_report_render = "js_run_relay_main_report"				
			tmpobjreporttype.push(report_def)
			
		}	
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//CVE REPORTS[START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		if (cve_fixlets == 'True' && load_internal_reports == true && load_cve_reports==true) {
			var report_def = new Object()
			report_def.details = ' (Search for one or several CVE(s) within the bigfix system)'
			report_def.whose = 'replace'
			report_def.name = '[CVE] Common Vulnerability Enumeration Search (Show All)'
			report_def.fn_main_report_render = "js_run_cve_shim_main_report"		
			report_def.fn_group_report_render = "js_run_cve_shim_std_group_report"
			report_def.cve_select_params = 'True'
			report_def.cve_whose_param = '  and ( external site flag of site of it) '			
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report on external site content, so custom content will not be shown within the results of this report. All content will be shown including superseeded and corrupt patch fixlets as well'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description	
			tmpobjreporttype.push(report_def)	
			
			var report_def = new Object()
			report_def.details = ' (Search for one or several CVE(s) within the bigfix system, this will only return applicable content)'
			report_def.whose = 'replace'
			report_def.name = '[CVE] Common Vulnerability Enumeration Search (Only Applicable Content)'
			report_def.fn_main_report_render = "js_run_cve_shim_main_report"		
			report_def.fn_group_report_render = "js_run_cve_shim_std_group_report"
			report_def.cve_select_params = 'True'
			report_def.cve_whose_param = ' and ((applicable computer count of it > 0) and ( external site flag of site of it)) '
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. CVE(s) can be associated to multiple fixlets. This report only evaluates the CVE(s) once the run report button has been clicked. This means if you only select CVE(s) which have no applicable fixlets within your enviornment, no results will be reutrned in the resulting table below. This report will only report on external site content, so custom content will not be shown within the results of this report.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description		
			tmpobjreporttype.push(report_def)		

			var report_def = new Object()
			report_def.details = ' (Search for one or several CVE(s) within the bigfix system, this will exclude corrupt and superseeded content)'
			report_def.whose = 'replace'
			report_def.name = '[CVE] Common Vulnerability Enumeration Search (Excluding Superseeded)'
			report_def.fn_main_report_render = "js_run_cve_shim_main_report"		
			report_def.fn_group_report_render = "js_run_cve_shim_std_group_report"
			report_def.cve_select_params = 'True'
			report_def.cve_whose_param = ' and ((name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (external site flag of site of it)) '
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. A CVE can be associated to multiple fixlets. This report only evaluates the superseeded status of fixlets once the run report button has been clicked. This means if you select only CVE(s) that are associated to fixlets that have been superseeded, no results will be reutrned in the resulting table below. This report will only report on external site content, so custom content will not be shown within the results of this report.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description	
			tmpobjreporttype.push(report_def)		
			
			var report_def = new Object()		
			report_def.details = ' (Search for one or several CVE(s) within the bigfix system, except those within the Vulnerabilities for Windows Site)'
			report_def.whose = 'replace'
			report_def.name = '[CVE] Common Vulnerability Enumeration Search (Excluding Vulnerabilities for Windows Site)'
			report_def.fn_main_report_render = "js_run_cve_shim_main_report"		
			report_def.fn_group_report_render = "js_run_cve_shim_std_group_report"
			report_def.cve_select_params = 'True'
			report_def.cve_whose_param = '  and (( external site flag of site of it) and ( name of site of it is not "Vulnerabilities for Windows"))'			
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report on external site content, so custom content will not be shown within the results of this report. All content will be shown including superseeded and corrupt patch fixlets as well. The CVE dropdown represents all CVE(s) within the system, inclusive of those within the Vulnerabilities for Windows Site. CVE(s) may show up within the CVE selection criteria that have no conent within other sites. If you only choose CVE(s) that do not have fixlets within other external sites, no results will be shown within the resulting table.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description	
			tmpobjreporttype.push(report_def)	
		}

		
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//MS Bull REPORTS[START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
		if (site_update_for_win == 'True' && load_internal_reports == true  && load_msbull_reports==true) {
			var report_def = new Object()
			report_def.details = ' (Search for one or several Microsoft Bulletins within the bigfix system, this will exclude corrupt and superseeded patches)'
			report_def.whose = 'replace'
			report_def.name = '[MS Bulletins] Microsoft Bulletins Search (Excluding Superseeded)'
			report_def.fn_main_report_render = "js_run_msbull_shim_main_report"		
			report_def.fn_group_report_render = "js_run_msbull_shim_std_group_report"
			report_def.msbull_select_params = 'True'		
			report_def.msbull_whose_param = ' and ((name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (external site flag of site of it)) '					
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. A Microsoft Bulletin can be associated to multiple fixlets. This report only evaluates the superseeded status of fixlets once the run report button has been clicked. This means if you select only bulletiens that are associated to fixlets that have been superseeded, no results will be reutrned in the resulting table below. This report will only report on external site content, so custom content will not be shown within the results of this report.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description
			tmpobjreporttype.push(report_def)	

			var report_def = new Object()
			report_def.details = ' (Search for one or several Microsoft Bulletins within the bigfix system, this will only return applicable patches)'
			report_def.whose = 'replace'
			report_def.name = '[MS Bulletins] Microsoft Bulletins Search (Only Applicable Content)'
			report_def.fn_main_report_render = "js_run_msbull_shim_main_report"		
			report_def.fn_group_report_render = "js_run_msbull_shim_std_group_report"
			report_def.msbull_select_params = 'True'		
			report_def.msbull_whose_param = ' and ((applicable computer count of it > 0) and ( external site flag of site of it)) '					
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. A Microsoft Bulletin can be associated to multiple fixlets. This report only evaluates the selected bulletiens once the run report button has been clicked. This means if you only select bulletiens which have no applicable fixlets within your enviornment, no results will be reutrned in the resulting table below. This report will only report on external site content, so custom content will not be shown within the results of this report.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description			
			tmpobjreporttype.push(report_def)	
			
			var report_def = new Object()
			report_def.details = ' (Search for one or several Microsoft Bulletins within the bigfix system)'
			report_def.whose = 'replace'
			report_def.name = '[MS Bulletins] Microsoft Bulletins Search (Show All)'
			report_def.fn_main_report_render = "js_run_msbull_shim_main_report"		
			report_def.fn_group_report_render = "js_run_msbull_shim_std_group_report"
			report_def.msbull_select_params = 'True'		
			report_def.msbull_whose_param = ' and ( external site flag of site of it) '				
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will only report on external site content, so custom content will not be shown within the results of this report. All content will be shown including superseeded and corrupt patch fixlets as well'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
			tmpobjreporttype.push(report_def)				
		}
			
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//TESTING REPORTS[START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
	if (load_test_reports == true && load_internal_reports == true){
		js_debug('Loading Internal Testing Report Types')
		var report_def = new Object()
		report_def.details = ' (Load all external content applicable Fixlets - Load Test)'
		report_def.whose = 'whose ( exist (applicable computer count whose (it > 0) of it) and (exist display name of site of it) and (exist id of it) and (exist name of it) and (exist id of site of it)) '
		report_def.name = '[TEST] All applicable external content'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		tmpobjreporttype.push(report_def)
		
		var report_def = new Object()
		report_def.details = ' (Load all External content Fixlets - Load Test)'
		report_def.whose = 'whose ( (exist display name of site of it) and (exist id of it) and (exist name of it) and (exist id of site of it)) '
		report_def.name = '[TEST] Load all external content'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		tmpobjreporttype.push(report_def)	
		
		var report_def = new Object()
		report_def.details = ' (Load all custom  content Fixlets - Load Test)'
		report_def.whose = 'whose ( (exist display name of site of it) and (exist id of it) and (exist name of it) and NOT (exist id of site of it)) '
		report_def.name = '[TEST] Load all custom content'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		tmpobjreporttype.push(report_def)	
		
		//No Group Rendered
		//Test no group rendered
		var report_def = new Object()
		report_def.details = ' (Dont Show the Group Tab, report_def.fn_group_report_render tweak)'
		report_def.whose = 'whose ( exist (applicable computer count whose (it > 0) of it) and (exist display name of site of it) and (exist id of it) and (exist name of it) and (exist id of site of it)) '
		report_def.name = '[TEST] No Group Renderer'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		//report_def.fn_group_report_render = "js_run_std_group_report"			
		tmpobjreporttype.push(report_def)	
		
		
		//No Group Rendered \ Description Rendered
		//Test no group rendered
		var report_def = new Object()
		report_def.details = ' (Dont Show the Group Tab, Description shown)'
		report_def.whose = 'whose ( exist (applicable computer count whose (it > 0) of it) and (exist display name of site of it) and (exist id of it) and (exist name of it) and (exist id of site of it)) '
		report_def.name = '[TEST] No Group Renderer and Description Rendered'
		report_def.description_html = '<div class="alert alert-warning"><span><b>Important Note:</b> <br>You have selected the:'+ report_def.name +' Report. This report has a known issues, explanation goes here </span></div>'
		report_def.fn_main_report_render = "js_run_std_main_report"					
		tmpobjreporttype.push(report_def)			
	}
	
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//BES Content [START]  			                                            ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************	
	if (load_internal_reports == true && load_bigfix_content==true) {
		js_debug('Loading Internal BES Content Report Types')
		var report_def = new Object()
		report_def.details = ' (External Content initially released within the last day or has been modified within the last day)'
		report_def.whose = 'whose ((not custom flag of it) AND ((exist modification time of it and modification time of it > (now - (1 * day))) OR (date (local time zone) of (mime field "x-fixlet-first-propagation" of it as time) > (current date - 1 * day))))'
		report_def.name = '[Bigfix Content] Content released or modified within the last 1 day'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"	
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query external content that has been published within that last day. If no external content has been modified and gathered by the core server within the last day, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description		
		tmpobjreporttype.push(report_def)

		var report_def = new Object()
		report_def.details = ' (External Content initially released within the last 2 days or has been modified within the last 2 days)'
		report_def.whose = 'whose ((not custom flag of it) AND ((exist modification time of it and modification time of it > (now - (2 * day))) OR (date (local time zone) of (mime field "x-fixlet-first-propagation" of it as time) > (current date - 2 * day))))'
		report_def.name = '[Bigfix Content] Content released or modified within the last 2 days'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"	
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query external content that has been published within that two days. If no external content has been modified and gathered by the core server within the last two days, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
		tmpobjreporttype.push(report_def)
		
		var report_def = new Object()
		report_def.details = ' (External Content initially released within the 7 days or has been modified within the last 7 days)'
		report_def.whose = 'whose ((not custom flag of it) AND ((exist modification time of it and modification time of it > (now - (7 * day))) OR (date (local time zone) of (mime field "x-fixlet-first-propagation" of it as time) > (current date - 7 * day))))'
		report_def.name = '[Bigfix Content] Content released or modified within the last 7 days'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"	
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query external content that has been published within the last seven days. If no external content has been modified and gathered by the core server within the seven days, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
		tmpobjreporttype.push(report_def)
		
		var report_def = new Object()
		report_def.details = ' (Custom Content published or modified within the last day)'
		report_def.whose = 'whose (custom flag of it AND ((exist (modification time whose (it > (now - (1 * day))) of it)) OR (exist (creation time whose (it > (now - (1 * day))) of it))))'
		report_def.name = '[Bigfix Content] Custom content released or modified within the last 1 day'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"	
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query custom content that has been published within the last day. If no custom content has been modified within the last day, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description				
		tmpobjreporttype.push(report_def)		

		var report_def = new Object()
		report_def.details = ' (Custom Content published or modified within the last 2 days)'
		report_def.whose = 'whose (custom flag of it AND ((exist (modification time whose (it > (now - (2 * day))) of it)) OR (exist (creation time whose (it > (now - (2 * day))) of it))))'
		report_def.name = '[Bigfix Content] Custom content released or modified within the last 2 days'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query custom content that has been published within the last two days. If no custom content has been modified within the last two days, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description			
		tmpobjreporttype.push(report_def)		

		var report_def = new Object()
		report_def.details = ' (Custom Content published or modified within the last 7 days)'
		report_def.whose = 'whose (custom flag of it AND ((exist (modification time whose (it > (now - (7 * day))) of it)) OR (exist (creation time whose (it > (now - (7 * day))) of it))))'
		report_def.name = '[Bigfix Content] Custom content released or modified within the last 7 days'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"	
		var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>This Report has a known Limitation:</b>'
			description += '       <br>You have selected the:'+ report_def.name +' Report. This report has a known limitation. This report will query custom content that has been published within the last seven days. If no custom content has been modified within the last seven days, no results will be reutrned in the resulting table below.'
			description += '      </span>'
			description += '    </div>'
			report_def.description_html = description			
		tmpobjreporttype.push(report_def)		

		var report_def = new Object()
		report_def.details = ' (Metadata about bigfix external sites)'
		report_def.whose = ' whose (external site flag of it )'
		report_def.name = '[Bigfix Content] Review Bigfix External Site Versions'
		report_def.fn_main_report_render = "js_run_sites_main_report"			
		tmpobjreporttype.push(report_def)		
		
		var report_def = new Object()
		report_def.details = ' (Metadata about bigfix custom sites)'
		report_def.whose = ' whose (custom site flag of it)'
		report_def.name = '[Bigfix Content] Review Bigfix Custom Site Versions'
		report_def.fn_main_report_render = "js_run_sites_main_report"			
		tmpobjreporttype.push(report_def)		
	}	
		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//TOP Patch Items [START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
	if ((site_unix_patch_site == 'True' || site_update_for_win == 'True') && load_internal_reports == true && load_top_patch==true) {
		js_debug('Loading Internal Top Patch Report Types')
		var report_def = new Object()
		report_def.details = ' (Top 10 High, Security or Critical Patches within all patch sites, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Patch] Top 10 Patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		report_def.fn_whose = "js_return_top_x_high_crit_patch_whose"
		report_def.fn_whose_params = 10
		tmpobjreporttype.push(report_def)

		var report_def = new Object()
		report_def.details = ' (Top 25 High, Security or Critical Patches within all patch sites, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Patch] Top 25 Patches'		
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		report_def.fn_whose = 'js_return_top_x_high_crit_patch_whose'
		report_def.fn_whose_params = 25
		tmpobjreporttype.push(report_def)
		
		var report_def = new Object()
		report_def.details = ' (Top 50 High, Security or Critical Patches within all patch sites, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Patch] Top 50 Patches'		
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		report_def.fn_whose = 'js_return_top_x_high_crit_patch_whose'
		report_def.fn_whose_params = 50
		tmpobjreporttype.push(report_def)		

		var report_def = new Object()
		report_def.details = ' (Top 100 High, Security or Critical Patches within all patch sites, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Patch] Top 100 Patches'		
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		report_def.fn_whose = 'js_return_top_x_high_crit_patch_whose'
		report_def.fn_whose_params = 100
		tmpobjreporttype.push(report_def)
	}
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                        		//TOP Vuln for Windows [START]                                             	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************	
	if (site_vuln_for_win == 'True' && load_internal_reports == true && load_top_vulnerabilities_for_windows==true) {
		js_debug('Loading Internal Top Vulns Report Types')

		var report_def = new Object()
		report_def.details = ' (Top 10 Vulnerabilities within the Vulnerabilities to Windows System Site, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Vulnerability] Top 10 Vulnerabilities'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		report_def.fn_whose = 'js_return_top_x_high_crit_vuln_whose'
		report_def.fn_whose_params = 10
		tmpobjreporttype.push(report_def)		

		var report_def = new Object()
		report_def.details = ' (Top 25 Vulnerabilities within the Vulnerabilities to Windows System Site, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Vulnerability] Top 25 Vulnerabilities'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		report_def.fn_whose = 'js_return_top_x_high_crit_vuln_whose'
		report_def.fn_whose_params = 25
		tmpobjreporttype.push(report_def)

		var report_def = new Object()
		report_def.details = ' (Top 50 Vulnerabilities within the Vulnerabilities to Windows System Site, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Vulnerability] Top 50 Vulnerabilities'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		report_def.fn_whose = 'js_return_top_x_high_crit_vuln_whose'
		report_def.fn_whose_params = 50
		tmpobjreporttype.push(report_def)
		
		var report_def = new Object()
		report_def.details = ' (Top 100 Vulnerabilities within the Vulnerabilities to Windows System Site, ranked by number of applicable machines)'
		report_def.whose = ''
		report_def.name = '[Vulnerability] Top 100 Vulnerabilities'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		report_def.fn_whose = 'js_return_top_x_high_crit_vuln_whose'
		report_def.fn_whose_params = 100
		tmpobjreporttype.push(report_def)				
	}	
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         	//UNIX Patch Items [START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
	if ((site_unix_patch_site == 'True') && load_internal_reports == true && load_unix_patches==true) {
		js_debug('Loading Internal Unix Patch Report Types')
		js_debug('Report Type Unix Patches Sites Query Start')
		var query = 'Display names of bes sites whose ((display name of it contains "Patches for") and (display name of it does  not contain "Windows")  and ((number of subscribed computers of it) > 0) and (number of fixlets of it > 0))'
		//testing query
		//var query = 'Display names of bes sites whose ((display name of it contains "Patches for") and (display name of it does not contain "Windows")  and (true) and ( number of fixlets of it > 0))'
		
		var ret = js_relevance(query)
		js_debug('Report Type Unix Patches Sites Query Complete')
		
		//Automatic Stuff
		for (var i=0; i <ret.length; i++){
			var sitename = ret[i]
			var strippedsitename = js_replaceall(sitename,'Patches for ', '')
			
			var report_def = new Object()
			report_def.details = ' (All applicable non-superseeded and non-corrupt patches within the ' + sitename.toLowerCase() + ' site )'
			report_def.whose = 'whose ((display name of site of it = "' + sitename + '") and applicable computer count of it > 0 and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) AND (not analysis flag of it))'
			report_def.name = '[Unix Patching] All ' + strippedsitename + ' patches'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"
			tmpobjreporttype.push(report_def)
			
			var report_def = new Object()
			report_def.details = ' (All applicable critical security patches for from the '+ sitename.toLowerCase() + ' site)'
			report_def.whose = ' whose ((display name of site of it contains "' + sitename + '" ) and applicable computer count of it > 0 and ((exist source severity whose (it contains "Critical" or it contains "High" or it contains "Security") of it) or (exist category whose (it contains "Critical" or it contains "Security") of it)) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false))'
			report_def.name = '[Unix Patching] All Critical ' + strippedsitename + ' patches'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"
			tmpobjreporttype.push(report_def)
			
			var report_def = new Object()
			report_def.details = ' (All applicable patches released within the last 30 days from the '+ sitename.toLowerCase() + ' site)'
			report_def.whose =  ' whose ((display name of site of it = "' + sitename + '") and applicable computer count of it > 0 and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) AND (not analysis flag of it) and (exist (source release date of it)) and (current date - source release date of it < 30 * day))'
			report_def.name = '[Unix Patching] All ' + strippedsitename + ' patches less than 30 days old'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"
			tmpobjreporttype.push(report_def)			
	
			var report_def = new Object()
			report_def.details = ' (All applicable patches older than 30 days from the '+ sitename.toLowerCase() + ' site)'
			report_def.whose =  ' whose ((display name of site of it = "' + sitename + '") and applicable computer count of it > 0 and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) AND (not analysis flag of it) and (exist (source release date of it)) and (current date - source release date of it > 30 * day))'
			report_def.name = '[Unix Patching] All ' + strippedsitename + ' patches older than 30 days'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"
			tmpobjreporttype.push(report_def)		
			
			var report_def = new Object()
			report_def.details = ' (All applicable patches older than 90 days from the '+ sitename.toLowerCase() + ' site)'
			report_def.whose =  ' whose ((display name of site of it = "' + sitename + '") and applicable computer count of it > 0 and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) AND (not analysis flag of it) and (exist (source release date of it)) and (current date - source release date of it > 90 * day))'
			report_def.name = '[Unix Patching] All ' + strippedsitename + ' patches older than 90 days'
			report_def.fn_main_report_render = "js_run_std_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"
			tmpobjreporttype.push(report_def)		
			
		}		
	}
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                         		//MS Patch Items [START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************
	if (site_patches_for_win == 'True' && load_internal_reports == true && load_windows_patches==true) {
		js_debug('Loading Internal Win Patch Report Types')
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt patches within the patches for windows site)'
		report_def.whose = 'whose ((display name of site of it = "Patches for Windows") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") )'
		report_def.name = '[Windows Patching] All MS patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"			
		tmpobjreporttype.push(report_def)
		
		
		var report_def = new Object()
		report_def.details = ' (All applicable fixlets with category ms unsupported from the patches for windows site)'
		report_def.whose = 'whose ((display name of site of it = "Patches for Windows") and applicable computer count of it > 0 and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) AND (not analysis flag of it)  and (category of it as lowercase contains ("Microsoft Unsupported" as lowercase) ))'
		report_def.name = '[Unsupported Software] MS unsupported'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)

		var report_def = new Object()
		report_def.details = ' (All applicable critical security patches for from the patches for windows site)'
		report_def.whose = ' whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and ((exist source severity whose (it contains "Critical" or it contains "High" or it contains "Security") of it) or (exist category whose (it contains "Critical" or it contains "Security") of it)) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false))'
		report_def.name = '[Windows Patching] Critical MS patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)

		var report_def = new Object()
		report_def.details = ' (All Critical security patches older then 90 days from the patches for windows site)'
		report_def.whose = ' whose ((display name of site of it contains "Patches for Windows" )and applicable computer count of it > 0 and ((exist source severity whose (it contains "Critical" or it contains "High" or it contains "Security") of it) or (exist category whose (it contains "Critical" or it contains "Security") of it)) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) and (exist (source release date of it)) and (current date - source release date of it > 90 * day))'
		report_def.name = '[Windows Patching] Critical MS patches older than 90 days'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)			

		var report_def = new Object()
		report_def.details = ' (All Critical security patches less then 90 days old from the patches for windows site)'
		report_def.whose = ' whose ((display name of site of it contains "Patches for Windows" )and applicable computer count of it > 0 and ((exist source severity whose (it contains "Critical" or it contains "High" or it contains "Security") of it) or (exist category whose (it contains "Critical" or it contains "Security") of it)) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) and (exist (source release date of it)) and (current date - source release date of it < 90 * day))'
		report_def.name = '[Windows Patching] Critical MS patches less than 90 days old'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)			
		
		var report_def = new Object()
		report_def.details = ' (All Critical security patches older then 30 days from the patches for windows site)'
		report_def.whose = ' whose ((display name of site of it contains "Patches for Windows" )and applicable computer count of it > 0 and ((exist source severity whose (it contains "Critical" or it contains "High" or it contains "Security") of it) or (exist category whose (it contains "Critical" or it contains "Security") of it)) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false) and (exist (source release date of it)) and (current date - source release date of it < 30 * day))'
		report_def.name = '[Windows Patching] Critical MS patches less than 30 days old'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)	
		
		var report_def = new Object()
		report_def.details = ' (All superseeded content from the patches for windows site)'
		report_def.whose = ' whose ((display name of site of it contains "Patches for Windows" ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase contains "superseded") and (analysis flag of it = false))'
		report_def.name = '[Windows Patching] Superseded patch content'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)			
		
	}
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[            		//Updates for Windows Patch Items [START]                                              	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************

	if (site_update_for_win	 == 'True' && load_internal_reports == true && load_update_for_windows_patches==true) {
		js_debug('Loading Internal Updates for Windows Report Types')
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") )'
		report_def.name = '[Updates for Win Apps] All Applicable Windows Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)	

		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Adobe patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "adobe" )'
		report_def.name = '[Updates for Win Apps] All Applicable Adobe Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)	
		
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Java patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "java" )'
		report_def.name = '[Updates for Win Apps] All Applicable Java Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)	
		
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Google Chrome patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "google chrome" )'
		report_def.name = '[Updates for Win Apps] All Applicable Google Chrome Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)				
		
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Apple iTunes patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "apple itunes" )'
		report_def.name = '[Updates for Win Apps] All Applicable Apple iTunes Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)				
		
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Winzip patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "winzip" )'
		report_def.name = '[Updates for Win Apps] All Applicable WinZip Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)			
		
		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Adobe Flash patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "flash player" )'
		report_def.name = '[Updates for Win Apps] All Applicable Adobe Flash Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)			

		var report_def = new Object()
		report_def.details = ' (All applicable non-superseeded and non-corrupt Mozilla patches from the updates for windows applications site)'
		report_def.whose = ' whose ((display name of site of it = "Updates for Windows Applications") AND (applicable computer count of it > 0  ) AND (not analysis flag of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and name of it as lowercase contains "mozilla" )'
		report_def.name = '[Updates for Win Apps] All Applicable Mozilla Application patches'
		report_def.fn_main_report_render = "js_run_std_main_report"			
		report_def.fn_group_report_render = "js_run_std_group_report"
		tmpobjreporttype.push(report_def)
	}


	//*********************************************************************************************************************		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[          				 			//USING SCM RENDERR [START]                                        	  ]]]]]
	//*********************************************************************************************************************	
	//*********************************************************************************************************************		

	//*********************************************************************************************************************		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                        				 	//DISA [START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************		
	if (site_scm_disa == 'True' && load_internal_reports == true && load_disa_sites==true) {
		js_debug('Loading Internal DISA Report Types')		
		js_debug('Report Type SCM Sites Query Start')
		var query = 'Display names of bes sites whose ( (display name of it contains "DISA" and display name of it contains "Checklist for") and ((number of subscribed computers of it) > 0) and number of fixlets of it > 0)'
		var ret = js_relevance(query)
		js_debug('Report Type SCM Sites Query Complete')
		
		//STIG Stuff
		for (var i=0; i <ret.length; i++){
			var sitename = ret[i]
			
			//All Stig Content
			var report_def = new Object()
			report_def.details = ' (All content within this DISA STIG)'
			report_def.whose = ' whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "'+ sitename +'"))'
			report_def.name = '[SCM] DISA STIG Checklist: '+sitename +' (All Controls) '
			report_def.scm_checklist_site_name = sitename
			report_def.fn_main_report_render = "js_run_scm_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"			
			tmpobjreporttype.push(report_def)

			//All high Sev STIG
			var report_def = new Object()
			report_def.details = ' (All High Sev content within this DISA STIG)'
			report_def.whose = ' whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "high" or it as lowercase contains "cat i" or it as lowercase = "critical") of it and (analysis flag of it = false) and (display name of site of it = "'+ sitename +'"))'
			report_def.name = '[SCM] DISA STIG Checklist: '+sitename +' (High Sev Controls) '
			report_def.scm_checklist_site_name = sitename
			report_def.fn_main_report_render = "js_run_scm_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"			
			tmpobjreporttype.push(report_def)
		}
	}	
	
	//*********************************************************************************************************************		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                        				 	//USGCB [START]                                               	  ]]]]]
	//*********************************************************************************************************************
	//*********************************************************************************************************************		
	if (site_scm_usgcb == 'True' && load_internal_reports == true && load_usgcb_sites==true) {
		js_debug('Loading Internal USGCB Report Types')				

		var query = 'Display names of bes sites whose ( (display name of it contains "USGCB" and display name of it contains "Checklist for") and ((number of subscribed computers of it) > 0) and number of fixlets of it > 0)'
		js_debug('Report Type USGCB Sites Query Start')
		var ret = js_relevance(query)
		js_debug('Report Type USGCB Sites Query Complete')		
		
		for (var i=0; i <ret.length; i++){
			var sitename = ret[i]

			var report_def = new Object()
			report_def.details = ' (All content within this USGCB Checklist)'
			report_def.whose = ' whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "'+ sitename +'"))'
			report_def.name = '[SCM] USGCB Checklist: '+sitename +' (All Controls) '
			report_def.scm_checklist_site_name = sitename
			report_def.fn_main_report_render = "js_run_scm_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"			
			tmpobjreporttype.push(report_def)
		}
	}

	//*********************************************************************************************************************		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[                        				 	//CIS [START]                                               	  ]]]]]
	//*********************************************************************************************************************	
	//*********************************************************************************************************************	
	if (site_scm_cis == 'True' && load_internal_reports == true && load_cis_sites==true) {	
		js_debug('Loading Internal CIS Report Types')				
	
		var query = 'Display names of bes sites whose ( (display name of it contains "CIS" and display name of it contains "Checklist for") and ((number of subscribed computers of it) > 0) and number of fixlets of it > 0)'
		js_debug('Report Type CIS Sites Query Start')
		var ret = js_relevance(query)
		js_debug('Report Type CIS Sites Query Complete')			
		
		for (var i=0; i <ret.length; i++){
			var sitename = ret[i]

			var report_def = new Object()
			report_def.details = ' (All content within this CIS Checklist)'
			report_def.whose = ' whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "'+ sitename +'"))'
			report_def.name = '[SCM] CIS Checklist: '+sitename +' (All Controls) '
			report_def.scm_checklist_site_name = sitename
			report_def.fn_main_report_render = "js_run_scm_main_report"			
			report_def.fn_group_report_render = "js_run_std_group_report"			
			tmpobjreporttype.push(report_def)
		}
	}	
	//*********************************************************************************************************************		
	//*********************************************************************************************************************	
	//*********************************************************************************************************************
	//[[[[[          				 			//USING SCM RENDERR [END]                                        	  ]]]]]
	//*********************************************************************************************************************	
	//*********************************************************************************************************************		
		
	if (load_internal_reports == true){
		js_report_importer(tmpobjreporttype)
		js_debug('load_internal_reports = True, Loading Internal Reports ')
	} 
	else {
		js_debug('load_internal_reports = False, Skipping Internal Reports ')
	}
	
	js_debug('FN Run Complete js_load_report_types')	
}

function js_report_importer(tmpobjreporttype){

	js_debug('FN Run Start js_report_importer')

		global_report_type_cnter = tmpobjreporttype.length + global_report_type_cnter
		

		js_debug('Loading Report Types into Select Start')	
		 for(var i = 0; i < tmpobjreporttype.length; i++) {
				var rec = tmpobjreporttype[i]
				var val = JSON.stringify(rec)
						$('#ui_report_type').append("<option data-icon='glyphicon-file' data-subtext='" + rec.details + "' value='" + val + "'>"+rec.name+"</option>")
		 }
		js_debug('Loading Report Types into Select End')
		
		 //populate report type count
		 $('#lbl_report_cnt').html(global_report_type_cnter)
		  
		  
		//Order select object start	
		//js_debug('Order Select Start')
		var my_options = $("#ui_report_type option");
		var selected = $("#ui_report_type").val();

		my_options.sort(function(a,b) {
			if (a.text > b.text) return 1;
			if (a.text < b.text) return -1;
			return 0
		})
		//js_debug('Order Select End')
		//Order select object end	
		$("#ui_report_type").empty().append( my_options );
		$("#ui_report_type").val(selected);
		$('#ui_report_type').selectpicker('refresh');	
		
		js_debug('FN Run Complete js_report_importer')

}
	
function js_return_top_x_high_crit_patch_whose(x_var){
	js_debug('FN Run Start js_return_top_x_high_crit_patch_whose')
	$('#modal_report_running').modal('show')
	
			var query=''
			query += '(((id of it) as string) & "!!!!" &  name of site of it & "!!!!" & name of it & "!!!!" & ((applicable computer count of it) as string) & "!!!!" & ((id of site of it) as string)) of bes fixlets whose ( true '
			query += 'AND '
			query += '      (applicable computer count of it > 0 )'
			query += 'AND  ( '
			query += '       (exist (Source Severity of it as string as lowercase starts with "crit")) '
			query += '        OR '
			query += '       (exist (Source Severity of it as string as lowercase starts with "high")) '
			query += '     ) '
			query += 'AND '
			query += '     ( '
			query += '        Display name of site of it starts with "Updates for " '
			query += '        OR '
			query += '        Display name of site of it starts with "Patches for " '
			query += '      ) '
			query += 'AND  '
			query += '      ( '
			query += '       ((name of it) as lowercase) does not contain "(superseded)" '
			query += '       and ((name of it) as lowercase) does not contain "corrupt" '
			query += '       ) '
			query += ' ) '

			js_debug('js_return_top_x_high_crit_patch_whose Query Start')
			var ret = js_relevance(query)
			js_debug('js_return_top_x_high_crit_patch_whose Query Complete')
			
			var arrtmp =new Array()
			for (var i=0; i <ret.length; i++){
			
				var record = ret[i]
				var json_obj = new Object()
					json_obj.fix_id = record.split("!!!!")[0]
					json_obj.fix_site = record.split("!!!!")[1]
					json_obj.fix_name = record.split("!!!!")[2]
					json_obj.count = record.split("!!!!")[3]
					json_obj.fix_site_id = record.split("!!!!")[4]
					arrtmp.push(json_obj)
			}
			
			var sort_arr = arrtmp.sort(js_return_top_x_high_crit_patch_whose_custom_sort);
			
			var limiter = x_var
			var whose_string = ' whose ( 2=1'
			for (var i=0; i < sort_arr.length; i++){
				var rec = sort_arr[i]
				//js_debug(JSON.stringify(rec))
				if ((limiter -1) < i)
					{ break; }
				else 
				{whose_string += ' OR ((id of it = '+ rec.fix_id +' ) and ((id of site of it) = '+ rec.fix_site_id +'))'}	
			}
			whose_string += ')'
			js_debug('Whose String=' + whose_string)
			js_debug('FN Run Completed js_return_top_x_high_crit_patch_whose')
			
	
		setTimeout(function(){$('#modal_report_running').modal('hide')},100)
		return whose_string;
}
	
function js_return_top_x_high_crit_patch_whose_custom_sort(a,b){
	return b.count - a.count;
}

function js_return_top_x_high_crit_vuln_whose(x_var){
		js_debug('FN Run Start js_return_top_x_high_crit_vuln_whose')
		$('#modal_report_running').modal('show')
		
			var query=''
			query += '(((id of it) as string) & "!!!!" &  name of site of it & "!!!!" & name of it & "!!!!" & ((applicable computer count of it) as string) & "!!!!" & ((id of site of it) as string)) of bes fixlets whose ( true '
			query += 'AND '
			query += '      (applicable computer count of it > 0 )'
			query += 'AND  ( '
			query += '       (exist (Source Severity of it as string as lowercase starts with "crit")) '
			query += '        OR '
			query += '       (exist (Source Severity of it as string as lowercase starts with "high")) '
			query += '     ) '
			query += 'AND '
			query += '     ( '
			query += '        Display name of site of it starts with "Vulnerabilities to " '
			query += '      ) '
			query += 'AND  '
			query += '      ( '
			query += '       name of it does not contain "(Superseded)" '
			query += '       and name of it does not contain "Corrupt" '
			query += '       ) '
			query += ' ) '
		
			js_debug('js_return_top_x_high_crit_vuln_whose Query Start')
			var ret = js_relevance(query)
			js_debug('js_return_top_x_high_crit_vuln_whose Query Complete')	
			
			var arrtmp =new Array()
			for (var i=0; i <ret.length; i++){
			
				var record = ret[i]
				var json_obj = new Object()
					json_obj.fix_id = record.split("!!!!")[0]
					json_obj.fix_site = record.split("!!!!")[1]
					json_obj.fix_name = record.split("!!!!")[2]
					json_obj.count = record.split("!!!!")[3]
					json_obj.fix_site_id = record.split("!!!!")[4]
					arrtmp.push(json_obj)
			}
			
			var sort_arr = arrtmp.sort(js_return_top_x_high_crit_vuln_whose_custom_sort);
			
			var limiter = x_var
			var whose_string = ' whose ( 2=1'
			for (var i=0; i < sort_arr.length; i++){
				var rec = sort_arr[i]
				//js_debug(JSON.stringify(rec))
				if ((limiter -1) < i)
					{ break; }
				else 
				{whose_string += ' OR ((id of it = '+ rec.fix_id +' ) and ((id of site of it) = '+ rec.fix_site_id +'))'}	
			}
			whose_string += ')'
			js_debug('Whose String=' + whose_string)
			js_debug('FN Run Completed js_return_top_x_high_crit_vuln_whose')

			

		setTimeout(function(){$('#modal_report_running').modal('hide')},100)
		return whose_string;
}
	
function js_return_top_x_high_crit_vuln_whose_custom_sort(a,b){
	return b.count - a.count;
}


function js_scorestats_v2_main_report_init(){

	js_debug('FN Run Start js_run_scorestats_main_report')

				//clear 
				$('#div_result_dept').html('')
				var reportname = gbl_report_def_object.name
				$('#div_result_dept_title').html('<h4>' + reportname + '</h4><br>')
				
				var query =  ''
				query += '(exists (bes site whose (external site flag of it and display name of it = "Patches for Windows" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 7" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 8" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2012 DC" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2012 MS" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2008 DC" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2008 MS" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2008 R2 DC" and ((number of subscribed computers of it) > 0))));'
				query += '(exists (bes site whose (external site flag of it and display name of it contains "DISA STIG Checklist for Windows 2008 R2 MS" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2008 DC" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2008 MS" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2008 R2 DC" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2008 R2 MS" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2012 DC" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2012 MS" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 7" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 8" and ((number of subscribed computers of it) > 0))));'				
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 10" and ((number of subscribed computers of it) > 0))));'					
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2012 R2 DC" and ((number of subscribed computers of it) > 0))));'	
				query += '(exists (bes site whose (external site flag of it and display name of it contains "CIS Checklist for Windows 2012 R2 MS" and ((number of subscribed computers of it) > 0))))'	
				
				
		
				js_debug('Scorecard to load Query Start')
				var ret = js_relevance(query)
				js_debug('Scorecard to load Query Complete')
				
				//note this returns a string not a boolean at this point
				var site_patches_for_win = ret[0]
				var site_disa_win_7 = ret[1]
				var site_disa_win_8 = ret[2]
				var site_disa_win_2k12_dc = ret[3]
				var site_disa_win_2k12_ms = ret[4]
				var site_disa_win_2k8_dc = ret[5]
				var site_disa_win_2k8_ms = ret[6]
				var site_disa_win_2k8r2_dc = ret[7]
				var site_disa_win_2k8r2_ms = ret[8]
				
				var site_cis_win_2k8_dc = ret[9]
				var site_cis_win_2k8_ms = ret[10]
				var site_cis_win_2k8r2_dc = ret[11]
				var site_cis_win_2k8r2_ms = ret[12]
				var site_cis_win_2k12_dc = ret[13]
				var site_cis_win_2k12_ms = ret[14]
				var site_cis_win_7 = ret[15]	
				var site_cis_win_8 = ret[16]	
				var site_cis_win_10 = ret[17]	
				var site_cis_win_2k12r2_ms = ret[18]	
				var site_cis_win_2k12r2_dc = ret[19]	
				
				//CIS STUFF
				var cis_array_type_1 =new Array()
				if (site_cis_win_2k8_dc == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2008 DC'
					cisdef.descname = "CIS Windows 2008 DC Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}

				if (site_cis_win_2k8_ms == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2008 MS'
					cisdef.descname = "CIS Windows 2008 MS Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}
				
				if (site_cis_win_2k8r2_dc == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2008 R2 DC'
					cisdef.descname = "CIS Windows 2008 R2 DC Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}

				if (site_cis_win_2k8r2_ms == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2008 R2 MS'
					cisdef.descname = "CIS Windows 2008 R2 MS Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}				
	
				if (site_cis_win_2k12_dc == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2012 DC'
					cisdef.descname = "CIS Windows 2012 DC Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}

				if (site_cis_win_2k12_ms == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2012 MS'
					cisdef.descname = "CIS Windows 2012 MS Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}	
			
				if (site_cis_win_7 == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 7'
					cisdef.descname = "CIS Windows 7 Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}	
				
				if (site_cis_win_8 == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 8'
					cisdef.descname = "CIS Windows 8 Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}	

				if (site_cis_win_10 == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 10'
					cisdef.descname = "CIS Windows 10 Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}	

				if (site_cis_win_2k12r2_dc == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2012 R2 DC'
					cisdef.descname = "CIS Windows 2012 R2 DC Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}

				if (site_cis_win_2k12r2_ms == 'True') {
					var cisdef = new Object()
					cisdef.fullname = 'CIS Checklist for Windows 2012 R2 MS'
					cisdef.descname = "CIS Windows 2012 R2 MS Checklist"
					cisdef.main_div = 'div_' + js_replaceall(cisdef.fullname, " ", "_" ) + '_main'
					cis_array_type_1.push(cisdef)										
				}	
				
				//DISA STUFF
				var disa_array_type_1 =new Array()
				if (site_disa_win_7 == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 7'
					disadef.descname = "DISA Windows 7 STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}
				if (site_disa_win_8 == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 8'
					disadef.descname = "DISA Windows 8 STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}	
				if (site_disa_win_2k12_dc == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2012 DC'
					disadef.descname = "DISA Windows 2012 DC STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}	
				if (site_disa_win_2k12_ms == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2012 MS'
					disadef.descname = "DISA Windows 2012 MS STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}	
				if (site_disa_win_2k8_dc == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2008 DC'
					disadef.descname = "DISA Windows 2008 DC STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}	
				if (site_disa_win_2k8_ms == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2008 MS'
					disadef.descname = "DISA Windows 2008 MS STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}					
				if (site_disa_win_2k8r2_dc == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2008 R2 DC'
					disadef.descname = "DISA Windows 2008 R2 DC STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}	
				if (site_disa_win_2k8r2_ms == 'True') {
					var disadef = new Object()
					disadef.fullname = 'DISA STIG Checklist for Windows 2008 R2 MS'
					disadef.descname = "DISA Windows 2008 MS STIG"
					disadef.main_div = 'div_' + js_replaceall(disadef.fullname, " ", "_" ) + '_main'
					disa_array_type_1.push(disadef)										
				}		
				//Adding in Overall Scorecard
				
				var headerrow = ''
			headerrow += '<th width="90%"></th>'
			headerrow += '<th width="10%"></th>'
				
				var htmltoappend = ''
				htmltoappend += '<div id="div_overall_scorecard">'
				htmltoappend += '		<div class="panel panel-primary">'
				htmltoappend += '			<div class="panel-heading"> Score Summary </div>'
				htmltoappend += '			<div class="panel-body">'
				htmltoappend += '				<ul class="list-group">'
				htmltoappend += '					<div id="div_disa_scores"></div>'					
				htmltoappend += '				</ul>'
				htmltoappend += '				<ul class="list-group">'
				htmltoappend += '					<div id="div_cis_scores"></div>'					
				htmltoappend += '				</ul>'				
				htmltoappend += '				<ul class="list-group">'
				htmltoappend += '					<div id="div_win_patch_scores"></div>'					
				htmltoappend += '				</ul>'
				htmltoappend += '			</div>'
				htmltoappend += '		</div>'
				htmltoappend += '</div>'
				$('#div_result_dept').append(htmltoappend)					
				
				var htmltoappend = ''
				var  prgressframe = ''
				
				prgressframe = 'Asset Query in Progress...'
				var title = 'Asset Inventory '
				htmltoappend += '<div>'
				htmltoappend += '		<div class="panel panel-primary">'
				htmltoappend += '			<div class="panel-heading">'+ title +'</div>'
				htmltoappend += '			<div class="panel-body">'
				htmltoappend += '				<div id="div_scorestat_asset">' +prgressframe +'</div>'
				htmltoappend += '			</div>'
				htmltoappend += '		</div>'
				htmltoappend += '</div>'
				$('#div_result_dept').append(htmltoappend)	
				
				var htmltoappend = ''
				var  prgressframe = ''
				prgressframe = 'Report Time Query in Progress...'
				var title = 'Last Report Time Statistics '
				htmltoappend += '<div>'
				htmltoappend += '		<div class="panel panel-primary">'
				htmltoappend += '			<div class="panel-heading">' + title +'</div>'
				htmltoappend += '			<div class="panel-body">'
				htmltoappend += '				<div id="div_scorestat_report_time">'+prgressframe+'</div>'
				htmltoappend += '			</div>'
				htmltoappend += '		</div>'
				htmltoappend += '</div>'
				$('#div_result_dept').append(htmltoappend)	
				
				var htmltoappend = ''
				var  prgressframe = ''						
				prgressframe = 'OS Query in Progress...'
				var title = 'Operating System Statistics'
				htmltoappend += '<div>'
				htmltoappend += '		<div class="panel panel-primary">'
				htmltoappend += '			<div class="panel-heading">' + title +'</div>'
				htmltoappend += '			<div class="panel-body">'
				htmltoappend += '				<div id="div_scorestat_os">'+prgressframe+'</div>'
				htmltoappend += '			</div>'
				htmltoappend += '		</div>'
				htmltoappend += '</div>'
				$('#div_result_dept').append(htmltoappend)								
						

				//Patches for Windows Table Setup
				if (site_patches_for_win == 'True'){
				
					var htmltoappend = ''
					var  prgressframe = ''						
					prgressframe = 'MS Patch Query in Progress...'
					var title = 'Microsoft Patching Statistics'
					htmltoappend += '<div>'
					htmltoappend += '		<div class="panel panel-primary">'
					htmltoappend += '			<div class="panel-heading">' + title +'</div>'
					htmltoappend += '			<div class="panel-body">'
					htmltoappend += '				<div id="div_scorestat_patch">'+prgressframe+'</div>'
					htmltoappend += '			</div>'
					htmltoappend += '		</div>'
					htmltoappend += '</div>'
					$('#div_result_dept').append(htmltoappend)
					//Load up MS Patch via supporting FN
					js_scorestats_win_patches()
				}	
				
				//Disa Framer
				if (disa_array_type_1.length > 0) { //We got DISA Sites
				
				var htmltoappend = ''
				htmltoappend += '<div id="div_scorestat_disa_sites"></div>'
				$('#div_result_dept').append(htmltoappend)		
				
					for (var i=0; i < disa_array_type_1.length; i++){
						var disadef = disa_array_type_1[i]
								
						var htmltoappend = ''
						var  prgressframe = ''						
						prgressframe = disadef.fullname + ' Query in Progress...'
						var title = disadef.descname + ' Statistics'
						htmltoappend += '<div>'
						htmltoappend += '		<div class="panel panel-primary">'
						htmltoappend += '			<div class="panel-heading">' + title +'</div>'
						htmltoappend += '			<div class="panel-body">'
						htmltoappend += '<div id="'+ disadef.main_div +'">'+prgressframe+'</div>'
						htmltoappend += '			</div>'
						htmltoappend += '		</div>'
						htmltoappend += '</div>'			
						$('#div_scorestat_disa_sites').append(htmltoappend)	
						js_scorestats_scm_disa(disadef)							
					}
				}		
				
				//CIS Framer
				if (cis_array_type_1.length > 0) { //We got DISA Sites
				
					var htmltoappend = ''
					htmltoappend += '<div id="div_scorestat_cis_sites"></div>'
					$('#div_result_dept').append(htmltoappend)		
				
					for (var i=0; i < cis_array_type_1.length; i++){						
						var cisdef = cis_array_type_1[i]	

						var htmltoappend = ''
						var  prgressframe = ''						
						prgressframe = disadef.fullname + ' Query in Progress...'
						var title = cisdef.descname + ' Statistics'
						
						htmltoappend += '<div>'
						htmltoappend += '		<div class="panel panel-primary">'
						htmltoappend += '			<div class="panel-heading">' + title +'</div>'
						htmltoappend += '			<div class="panel-body">'
						htmltoappend += '			<div id="'+ cisdef.main_div +'">'+prgressframe+'</div>'
						htmltoappend += '			</div>'
						htmltoappend += '		</div>'
						htmltoappend += '</div>'
					
						$('#div_scorestat_cis_sites').append(htmltoappend)	
						js_scorestats_scm_cis(cisdef)							
					}
				}					
				
				//*****************************************************************************************************
				//Asset Report Time information Query and load
				var query = ''
				query = 'number of bes computers whose (Last Report time of it > (now - (15 * minute)));'
				query += 'number of bes computers whose (Last Report time of it > (now - (1 * hour)));'
				query += 'number of bes computers whose (Last Report time of it > (now - (2 * hour)));'
				query += 'number of bes computers whose (Last Report time of it > (now - (4 * hour)));'
				query += 'number of bes computers whose (Last Report time of it > (now - (1 * day)));'
				query += 'number of bes computers whose (Last Report time of it > (now - (7 * day)));'
				query += 'number of bes computers whose (Last Report time of it < (now - (7 * day)));'
				query += 'number of bes computers'
				
				//var ret = js_relevance(query)
				var callback =function(ret){
					js_debug('Scorecard Asset Report Times Query Complete')
					//Asset Report Time information Table Setup
					//set header row
					var headerrow = ''
					headerrow += '<th width="90%"></th>'
					headerrow += '<th width="10%"></th>'
					
					var htmltoappend = ''
					htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl1" width="100%">'
					htmltoappend += '<thead>'
					htmltoappend += headerrow								
					htmltoappend += '</thead>'
					htmltoappend += '<tbody id="div_scorestat_report_time_tbody">'
					htmltoappend += '</tbody>'
					htmltoappend += '<tfoot>'
					htmltoappend += '<tr>'
					htmltoappend += headerrow								
					htmltoappend += '</tr>'
					htmltoappend += '</tfoot>'
					htmltoappend += '</table>'										
					$('#div_scorestat_report_time').html(htmltoappend)	
					
					//Loding data
					var lr_leessthan15 = ret[0]
					var lr_leessthan1hr = ret[1]
					var lr_leessthan2hr = ret[2]
					var lr_leessthan4hr = ret[3]
					var lr_leessthan1day = ret[4]
					var lr_leessthan7day = ret[5]
					var lr_greaterthan7day = ret[6]
					var lr_total = ret[7]
					
					var htmltoappend = ''
					htmltoappend += '<tr><td>1. Number of computers reported in within last 15 minutes</td><td>'+ lr_leessthan15 +'</td></tr>'
					htmltoappend += '<tr><td>2. Number of computers reported in within last 1 hour</td><td>'+ lr_leessthan1hr +'</td></tr>'
					htmltoappend += '<tr><td>3. Number of computers reported in within last 2 hours</td><td>'+ lr_leessthan2hr +'</td></tr>'
					htmltoappend += '<tr><td>4. Number of computers reported in within last 4 hours</td><td>'+ lr_leessthan4hr +'</td></tr>'
					htmltoappend += '<tr><td>5. Number of computers reported in within last 1 day</td><td>'+ lr_leessthan1day +'</td></tr>'
					htmltoappend += '<tr><td>6. Number of computers reported in within last 7 days</td><td>'+ lr_leessthan7day +'</td></tr>'
					htmltoappend += '<tr><td>7. Number of computers that have not reported in for over 7 days</td><td>'+ lr_greaterthan7day +'</td></tr>'		
					htmltoappend += '<tr><td>8. Total number of machines ever reported</td><td>'+ lr_total +'</td></tr>'		
					$('#div_scorestat_report_time_tbody').html(htmltoappend)
				}
				js_async_queue(query,callback)	
				//*****************************************************************************************************
				
				//*****************************************************************************************************
				//Asset Inventory Query and load
				var query = ''
				query += 'number of bes computers whose (exist device type whose (it contains "Server")of it);'
				query += 'number of bes computers whose (exist device type whose (it contains "Desktop")of it);'
				query += 'number of bes computers whose (exist device type whose (it contains "Laptop")of it);'
				query += 'number of bes computers whose (relay server flag of it);'
				query += 'number of bes computers whose (not (relay server flag of it));'
				query += 'number of bes computers;'
				query += 'number of bes computers whose (not exist device type of it);'
				query += 'number of bes computers whose (not exist (relay server flag of it))'

				//var ret = js_relevance(query)
				var callback =function(ret){
					js_debug('Scorecard Asset Query Complete')

					//set header row
					var headerrow = ''
						headerrow += '<th width="90%"></th>'
						headerrow += '<th width="10%"></th>'
				
					//Asset Inventory Table Setup
					var htmltoappend = ''
					htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl2" width="100%">'
					htmltoappend += '<thead>'
					htmltoappend += headerrow								
					htmltoappend += '</thead>'
					htmltoappend += '<tbody id="div_scorestat_asset_tbody">'
					htmltoappend += '</tbody>'
					htmltoappend += '<tfoot>'
					htmltoappend += '<tr>'
					htmltoappend += headerrow								
					htmltoappend += '</tr>'
					htmltoappend += '</tfoot>'
					htmltoappend += '</table>'						
					$('#div_scorestat_asset').html(htmltoappend)		
					
					//Loding data
					var a_server = ret[0]
					var a_desktop = ret[1]
					var a_laptop = ret[2]
					var a_relay = ret[3]
					var a_notrelay = ret[4]
					var a_all = ret[5]
					var a_nodevice_type = ret[6]
					var a_nodrelayflag = ret[7]
					
					var htmltoappend = ''
					htmltoappend += '<tr><td colspan="2"><b>Device Type Statistics</b></td></tr>'
					htmltoappend += '<tr><td>1. Number of managed server device types</td><td>'+ a_server +'</td></tr>'
					htmltoappend += '<tr><td>2. Number of managed desktop device types</td><td>'+ a_desktop +'</td></tr>'
					htmltoappend += '<tr><td>3. Number of managed laptop device types</td><td>'+ a_laptop +'</td></tr>'
					htmltoappend += '<tr><td>4. Number of managed endpoints unable to deteremine device type <span class="customtooltip_std_scorecard glyphicon glyphicon-info-sign glyphicon-align-right" data-original-title="This is the number of machines that have not yet reported completly, the most likely cause of this anomoly is either the version of the agent is not supported upon the installed platform or the machine has just been installed"></span></td><td><span>'+ a_nodevice_type +' </span></td></tr>'
					htmltoappend += '<tr><td colspan="2"><b>Bigfix Asset Type Statistics</b></td></tr>'
					htmltoappend += '<tr><td>1. Number of managed relays</td><td>'+ a_relay +'</td></tr>'
					htmltoappend += '<tr><td>2. Number of managed non-relays</td><td>'+ a_notrelay +'</td></tr>'		
					htmltoappend += '<tr><td>3. Number of managed endpoints unable to determine relay or non-relays <span class="customtooltip_std_scorecard glyphicon glyphicon-info-sign glyphicon-align-right" data-original-title="This is the number of machines that have not yet reported completly, the most likely cause of this anomoly is either the version of the agent is not supported upon the installed platform or the machine has just been installed"></span></td><td><span>'+ a_nodrelayflag +' </span></td></tr>'	
					htmltoappend += '<tr><td>4. Total Number of Assets</td><td>'+ a_all +'</td></tr>'		
					$('#div_scorestat_asset_tbody').html(htmltoappend)
					
					//Enable Tooltips
					$('.customtooltip_std_scorecard').tooltip()						
				}
				js_async_queue(query,callback)	
				//*****************************************************************************************************
				
				//*****************************************************************************************************
				//Operating System Inventory Query and load
				var query = ''
				query += '(concatenation of concatenations of trs of (td of item 0 of it'
				query +='& td of item 1 of it'
				query +=') of '
				query +='((it as string, ((multiplicity of it) as string)) of unique values of  operating systems of bes computers whose (exist operating system of it)'
				query +=';("Unable to Determine",((number of bes computers whose (not exist operating system of it)) as string))))'

				//var ret = js_relevance(query)
				var callback =function(ret){
					js_debug('Scorecard OS  Query Complete')

					//set header row
					var headerrow = ''
					headerrow += '<th width="90%"></th>'
					headerrow += '<th width="10%"></th>'
					
					//OS Inventory Table Setup
					var htmltoappend = ''
					htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl3" width="100%">'
					htmltoappend += '<thead>'
					htmltoappend += headerrow								
					htmltoappend += '</thead>'
					htmltoappend += '<tbody id="div_scorestat_os_tbody">'
					htmltoappend += '</tbody>'
					htmltoappend += '<tfoot>'
					htmltoappend += '<tr>'
					htmltoappend += headerrow								
					htmltoappend += '</tr>'
					htmltoappend += '</tfoot>'
					htmltoappend += '</table>'				
					
					$('#div_scorestat_os').html(htmltoappend)	
					$('#div_scorestat_os_tbody').html(ret)					
					
				}
				js_async_queue(query,callback)
				//*****************************************************************************************************
				js_debug('FN Run Complete js_run_scorestats_main_report')			
		
}	
function js_scorestats_win_patches(){
		//MS Patching Weights
		var score_win_patch_critical_weight = 100
		var score_win_patch_moderate_weight = 30
		var score_win_patch_important_weight = 10
		var score_win_patch_machine_cnt_5_or_more_weight = 500
		var score_win_patch_machine_cnt_10_or_more_weight = 1000
		
		//QUERY MAP MS PATCH
		// 0 - Number of critical win patches / applicable 
		// 1 - Number of win patches Moderate / applicable 
		// 2 - Number of win patches Important / applicable 
		// 3 - Number of win patches Low / applicable 
		// 4 - Number of win patches Unspecified / applicable 
		// 5 - Number of win patches high / critical / applicable Exposures
		// 6 - Number of win patches Moderate / applicable  Exposures
		// 7 - Number of win patches Important / applicable    Exposures
		// 8 - Number of win patches Low / applicable   Exposures
		// 9 - Number of win patches Unspecified / applicable   Exposures
		// 10 - Number of win patches high / critical / applicable unique machines
		// 11 - Number of win patches Moderate / applicable  unique machines
		// 12 - Number of win patches Important / applicable  unique machines
		// 13 - Number of win patches Low / applicable  unique machines
		// 14 - Number of win patches Unspecified / applicable  unique machines
		// 15 - Number of computers subscribed to site
		// 16 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -critical of machines reported within last 7 days
		// 17 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -moderate of machines reported within last 7 days
		// 18 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -important of machines reported within last 7 days
		// 19 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -low of machines reported within last 7 days
		// 20 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -unspec of machines reported within last 7 days
		// 20 - Accumulated Average of open patches [(Sum all for category ((now - mod time of fixlet / days) *  get applicable count... ) -unspec of machines reported within last 7 days
		// 21 - Number of machines with 10 or more critical patches over 30 days old 
		// 22 - Number of machines with 5 or more critical patches over 30 days old
		// 23 - Number of machines checked in within last 7 dayse with 10 or more critical patches applicable over 30 days old
		// 24 - Number of machines checked in within last 7 dayse with 5 or more critical patches applicable over 30 days old	
		// 25 - Number of machines checked in within last 7 days that are subscribed to patches for windows site
		
		var query = ''
		query += 'number of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)); '
		query += 'number of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Moderate") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'number of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Important") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)); '
		query += 'number of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Low") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and ((exist source severity whose (it contains "Unspecified") of it) OR (exist source severity whose (it contains "Unspecified")of it) ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)); '
		query += 'sums of applicable computer counts of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'sums of applicable computer counts of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Moderate") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'sums of applicable computer counts of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Important") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'sums of applicable computer counts of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Low") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'sums of applicable computer counts  of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and ((exist source severity whose (it contains "Unspecified") of it) OR (exist source severity whose (it contains "Unspecified")of it) ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of unique values of (ids of applicable computers whose (exist id of it) of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of unique values of (ids of applicable computers whose (exist id of it) of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Moderate") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of unique values of (ids of applicable computers whose (exist id of it) of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Important") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of unique values of (ids of applicable computers whose (exist id of it) of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it contains "Low") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)) ;'
		query += 'number of unique values of (ids of applicable computers whose (exist id of it) of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and ((exist source severity whose (it contains "Unspecified") of it) OR (exist source severity whose (it contains "Unspecified")of it) ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false)); '
		query += 'number of subscribed computers of bes site whose (display name of it = "Patches for Windows");'
		query += 'sum of (((( now - (modification time of it )) / day) * (number of applicable computers whose (last report time of it > (now - (7 * day))) of it))) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it = "Critical") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'sum of (((( now - (modification time of it )) / day) * (number of applicable computers whose (last report time of it > (now - (7 * day))) of it))) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it = "Moderate") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'sum of (((( now - (modification time of it )) / day) * (number of applicable computers whose (last report time of it > (now - (7 * day))) of it))) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it = "Important") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'sum of (((( now - (modification time of it )) / day) * (number of applicable computers whose (last report time of it > (now - (7 * day))) of it))) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it = "Low") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'sum of (((( now - (modification time of it )) / day) * (number of applicable computers whose (last report time of it > (now - (7 * day))) of it))) of bes fixlets whose ((display name of site of it contains "Patches for Windows" ) and applicable computer count of it > 0 and (exist source severity whose (it = "Unspecified") of it ) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (analysis flag of it = false));'
		query += 'number of item 1 whose (it >= 10 ) of ((it, multiplicity of it) of unique values of ids of applicable computers whose (exist id of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows") and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (exist modification time  whose (it > (now - (30 * day))) of it) and (analysis flag of it = false)));'
		query += 'number of item 1 whose ((it >= 5) AND (it < 10)) of ((it, multiplicity of it) of unique values of ids of applicable computers whose (exist id of it) of bes fixlets whose ((display name of site of it contains "Patches for Windows") and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (exist modification time  whose (it > (now - (30 * day))) of it) and (analysis flag of it = false)));'
		query += 'number of item 1 whose (it >= 10) of ((it, multiplicity of it) of unique values of ids of applicable computers whose (exist id of it AND last report time of it > (now - (7 * day))) of bes fixlets whose ((display name of site of it contains "Patches for Windows") and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (exist modification time  whose (it > (now - (30 * day))) of it) and (analysis flag of it = false)));'
		query += 'number of item 1 whose ((it >= 5) AND (it < 10)) of ((it, multiplicity of it) of unique values of ids of applicable computers whose (exist id of it AND last report time of it > (now - (7 * day))) of bes fixlets whose ((display name of site of it contains "Patches for Windows") and applicable computer count of it > 0 and (exist source severity whose (it contains "Critical") of it) and (name of it as lowercase does not contain "corrupt") and (name of it as lowercase does not contain "superseded") and (exist modification time  whose (it > (now - (30 * day))) of it) and (analysis flag of it = false)));'
		query += 'number of subscribed computers whose (last report time of it > (now - (7 * day)))of bes site whose (display name of it = "Patches for Windows")'
		//var ret = js_relevance(query)
		var callback =function(ret){
			
			js_debug('Scorecard MS Patch Query Complete')
			var p0 = ret[0]
			var p1 = ret[1]
			var p2 = ret[2]
			var p3 = ret[3]
			var p4 = ret[4]
			var p5 = ret[5]
			var p6 = ret[6]
			var p7 = ret[7]
			var p8 = ret[8]
			var p9 = ret[9]
			var p10 = ret[10]
			var p11 = ret[11]				
			var p12 = ret[12]				
			var p13 = ret[13]
			var p14 = ret[14]
			var p15 = ret[15]
			var p16 = ret[16]				
			var p17 = ret[17]				
			var p18 = ret[18]
			var p19 = ret[19]
			var p20 = ret[20]	
			var p21 = ret[21]	
			var p22 = ret[22]	
			var p23 = ret[23]	
			var p24 = ret[24]	
			var p25 = ret[25]	
			var total_machines = p15
			var total_machines_in_last_7_days = p25
			
			//Frame out table
			//set header row
			var headerrow = ''
			headerrow += '<th width="90%"></th>'
			headerrow += '<th width="10%"></th>'
			
			var htmltoappend = ''
			htmltoappend += '<h4 align="center">Microsoft Windows Patching by Severity Statistics</h4>'
			htmltoappend += '<div id="div_scorecard_win_patch_score1"></div>'
			htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl4" width="100%">'
			htmltoappend += '<thead>'
			htmltoappend += headerrow								
			htmltoappend += '</thead>'
			htmltoappend += '<tbody id="tbl_body_dept_patch1">'
			htmltoappend += '</tbody>'
			htmltoappend += '<tfoot>'
			htmltoappend += '<tr>'
			htmltoappend += headerrow								
			htmltoappend += '</tr>'
			htmltoappend += '</tfoot>'
			htmltoappend += '</table>'	
			$('#div_scorestat_patch').html(htmltoappend)
			
			//populate data
			var htmltoappend = ''
			htmltoappend += '<tr><td colspan="2" align=left><b>Critical Severity Patch Statisics</b></td></tr>'
			htmltoappend += '<tr><td>1. Number of unique applicable critical severity microsoft windows patches</td><td><font color="red">'+ p0 +'</font></td></tr>'
			htmltoappend += '<tr><td>2. Number of unique exposures for assets with critical severity microsoft windows patches <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="Unique instances of a critical severity patch accross all machines. This is the total amount of exposed vectors for a critical severity  microsoft patch"></span></td><td><span><font color="red">'+ p5 +' </font></span><span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_win_patch_critical_weight +' points"></span></td></tr>'				
			htmltoappend += '<tr><td>3. Number of unique machines with at least 1 critical severity microsoft windows patch applicable</td><td><font color="red">'+ p10 +'</font></td></tr>'
			htmltoappend += '<tr><td colspan=2>Critical severity patches summary: There are<font color="red"> '+p0+'</font> unique critical severity patches applicable accross a unique<font color="red"> '+ p10 +'</font> machines, resulting in <font color="red">'+ p5+'</font> unique critical severity exposures. </td></tr>'				
			
			htmltoappend += '<tr><td colspan="2" align=left><b>Moderate Severity Patch Statistics</b></td></tr>'
			htmltoappend += '<tr><td>1. Number of unique applicable moderate severity microsoft windows patches</td><td>'+ p1 +'</td></tr>'
			htmltoappend += '<tr><td>2. Number of unique exposures for assets with moderate severity microsoft windows patches <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="Unique instances of a moderate severity patch accross all machines. This is the total amount of exposed vectors for a moderate severity microsoft patch"></span></td><td><span>'+ p6 +' </span><span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_win_patch_moderate_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td>3. Number of unique machines with at least 1 moderate severity microsoft windows patch applicable</td><td>'+ p11 +'</td></tr>'
			htmltoappend += '<tr><td colspan="2">Moderate severity patches summary: There are '+p1+' unique moderate severity patches applicable accross a unique '+ p11 +' machines, resulting in '+ p6+'</font> unique moderate severity exposures. </td></tr>'
			
			htmltoappend += '<tr><td colspan="2" align=left><b>Important Severity Patch Statistics</b></td></tr>'					
			htmltoappend += '<tr><td>1. Number of unique applicable important severity microsoft windows patches</td><td>'+ p2 +'</td></tr>'
			htmltoappend += '<tr><td>2. Number of unique exposures for assets with important severity microsoft windows patches <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="Unique instances of a important severity patch accross all machines. This is the total amount of exposed vectors for a important severity microsoft patch"></span></td><td><span>'+ p7 +' </span><span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_win_patch_important_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td>3. Number of unique machines with at least 1 important severity microsoft windows patch applicable</td><td>'+ p12 +'</td></tr>'			
			htmltoappend += '<tr><td colspan="2">Important severity patches summary: There are '+p2+' unique important severity patches applicable accross a unique '+ p12 +' machines, resulting in '+ p7+'</font> unique important severity exposures. </td></tr>'				
			
			htmltoappend += '<tr><td colspan="2" align=left><b>Low Severity Patch Statistics</b></td></tr>'
			htmltoappend += '<tr><td>1. Number of unique applicable low severity windows microsoft patches</td><td>'+ p3 +'</td></tr>'
			htmltoappend += '<tr><td>2. Number of unique exposures for assets with low severity microsoft windows patches <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="Unique instances of a low severity patch accross all machines. This is the total amount of exposed vectors for a low severity microsoft patch"></span></td><td><span>'+ p8 +' </span></td></tr>'
			htmltoappend += '<tr><td>3. Number of unique machines with at least 1 low severity microsoft windows patch applicable</td><td>'+ p13 +'</td></tr>'
			htmltoappend += '<tr><td colspan="2">Low severity patches summary: There are '+p3+' unique low severity patches applicable accross a unique '+ p13 +' machines, resulting in '+ p8+'</font> unique low severity exposures. </td></tr>'
			
			htmltoappend += '<tr><td colspan="2" align=left><b>Unspecified Severity Patch Statistics</b></td></tr>'
			htmltoappend += '<tr><td>1. Number of unique applicable unspecified severity microsoft windows patches</td><td>'+ p4 +'</td></tr>'
			htmltoappend += '<tr><td>2. Number of unique exposures for assets with low severity microsoft windows patches <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="Unique instances of a unspecified severity patch accross all machines. This is the total amount of exposed vectors for a unspecified severity microsoft patch"></span></td><td><span>'+ p9 +' </span></td></tr>'
			htmltoappend += '<tr><td>3. Number of unique machines with at least 1 unspecified severity microsoft windows patch applicable</td><td>'+ p14 +'</td></tr>'
			htmltoappend += '<tr><td colspan="2">Unspecified severity patches summary: There are '+p4+' unique unspecified severity patches applicable accross a unique '+ p14 +' machines, resulting in '+ p9+'</font> unique unsepcified severity exposures </td></tr>'
			$('#tbl_body_dept_patch1').append(htmltoappend)
			
			//populate score 1
			var patch_score_high = p5 * score_win_patch_critical_weight//CRITICAL patch exposure
			var patch_score_mod = p6 * score_win_patch_moderate_weight  //MODERATE patch exposure
			var patch_score_imp = p7 * score_win_patch_important_weight  //IMPORTANT patch exposure
			
			var patch_score1= (patch_score_high + patch_score_mod + patch_score_imp) / total_machines
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>Microsoft patch severity score calculated: </b><font size="4">' + patch_score1.toFixed(2) + '</font>'
			description += '       <br><b>Score calculation description</b>: The Microsoft patch severity score is calucluated based upon the number of critical moderate and important exposures. Critical exposures are given '+score_win_patch_critical_weight+' points each, moderate exposures are given '+score_win_patch_moderate_weight+' points each and important exposures are given '+score_win_patch_important_weight+' points each. This is then collectively divided accross the entire number of endpoints evaluated within the report. '
			description += '       <br>Score Formula: (('+ p5 + ' * '+score_win_patch_critical_weight+' pnts) + (' + p6 + ' * '+score_win_patch_moderate_weight+' pnts) + (' + p7 + '* '+score_win_patch_important_weight+' pnts)) / ' +  total_machines  + ''
			description += '      </span>'
			description += '    </div>'	
			$('#div_scorecard_win_patch_score1').html(description)
			
			var scorerow_desc = 'Microsoft patch severity score'
			var scorerow = '<li class="list-group-item">' + scorerow_desc + ' <span class="badge">' +  patch_score1.toFixed(2) + '</span></li>'
			$('#div_win_patch_scores').append(scorerow)
			
			//Frame out table
			//set header row
			var headerrow = ''
			headerrow += '<th width="90%"></th>'
			headerrow += '<th width="10%"></th>'
			
			var htmltoappend = ''
			htmltoappend += '<h4 align="center">Microsoft Windows Patching Exposure Statistics</h4>'
			htmltoappend += '<div id="div_scorecard_win_patch_score2"></div>'
			htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl4" width="100%">'
			htmltoappend += '<thead>'
			htmltoappend += headerrow								
			htmltoappend += '</thead>'
			htmltoappend += '<tbody id="tbl_body_dept_patch2">'
			htmltoappend += '</tbody>'
			htmltoappend += '<tfoot>'
			htmltoappend += '<tr>'
			htmltoappend += headerrow								
			htmltoappend += '</tr>'
			htmltoappend += '</tfoot>'
			htmltoappend += '</table>'	
			$('#div_scorestat_patch').append(htmltoappend)
			
			//populate data
			var htmltoappend = ''
			htmltoappend += '<tr><td colspan="2" align=left><b>Microsoft Patch Latency Statistics</b></td></tr>'
			
			var critavglatency = 0 
			var modavglatency = 0
			var impavglatency =	0
			var lowavglatency =	0
			var unavglatency =	0 
			
			if (p5 > 0 ) {critavglatency = (p16 / p5).toFixed(2)}
			if (p6 > 0 ) {modavglatency = (p17 / p6).toFixed(2)} 
			if (p7 > 0 ) {impavglatency = (p18 / p7).toFixed(2)} 
			if (p8 > 0 ) {lowavglatency = (p19 / p8).toFixed(2)} 
			if (p9 > 0 ) {unavglatency = (p20 / p9).toFixed(2)} 
			
			htmltoappend += '<tr><td colspan="2" align=left><b>Microsft Patch latency statistics (for machines reported within last 7 days).</b> <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="This metric represents the average latency accross computers that have reported in within the last 7 days, by a given severity. Calculation is: (Sum of ((now - mod time of fixlet/days) * applicable count of fixlet) accross all fixlets with scoped severity) / amount of exposures at severity."></SPAN></td></tr>'
			htmltoappend += '<tr><td>1. Average latency of critical severity patch exposure for machines that have reported within last 7 days</td><td><font color="red">'+ critavglatency +' days </font></td></tr>'
			htmltoappend += '<tr><td>2. Average latency of moderate severity patch exposure for machines that have reported within last 7 days</td><td>'+ modavglatency +' days </td></tr>'
			htmltoappend += '<tr><td>3. Average latency of important severity patch exposure for machines that have reported within last 7 days</td><td>'+ impavglatency +' days </td></tr>'
			htmltoappend += '<tr><td>4. Average latency of low severity patch exposure for machines that have reported within last 7 days</td><td>'+ lowavglatency  +' days </td></tr>'
			htmltoappend += '<tr><td>5. Average latency of unspecified severity patch exposure for machines that have reported within last 7 days</td><td>'+ unavglatency +' days </td></tr>'

			htmltoappend += '<tr><td colspan="2" align=left><b>Number of machines within excessive critical patch exposures older than 30 days .</b> <span class="glyphicon glyphicon-info-sign glyphicon-align-right customtooltip_std_scorecard" data-original-title="This metric represents the number of machines that have a high number of critical patches applicable. Calculation is: (number of critical Microsoft patch fixlets applicable per machine over threshold) / amount of exposures at severity."></SPAN></td></tr>'
			htmltoappend += '<tr><td>1. Number of machines with 10 or more critical patches released over 30 days ago applicable. (not limited to machines reported within given timeframe)</td><td><font color="red"> '+ p21 +'</font></td></tr>'
			htmltoappend += '<tr><td>2. Number of machines with 5 or more critical patches released over 30 days ago applicable. (not limited to machines reported within given timeframe)</td><td><font color="red"> '+ p22 +'</font></td></tr>'
			htmltoappend += '<tr><td>3. Number of machines with 10 or more critical patches released over 30 days ago applicable. (limited to machines reported within the last 7 days)</td><td><font color="red"> '+ p23 +'</font> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_win_patch_machine_cnt_10_or_more_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td>4. Number of machines with 5 or more critical patches released over 30 days ago applicable. (limited to machines reported within the last 7 days)</td><td><font color="red"> '+ p24 +'</font> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_win_patch_machine_cnt_5_or_more_weight +' points"></span></td></tr>'
			$('#tbl_body_dept_patch2').append(htmltoappend)

			var patch_score2= ((p23 * score_win_patch_machine_cnt_5_or_more_weight) + (p24 * score_win_patch_machine_cnt_10_or_more_weight)) / total_machines_in_last_7_days
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>Microsoft critical patch excesive exposure score: </b><font size="4">' + patch_score2.toFixed(2) + '</font>'
			description += '       <br><b>Score calculation description</b>: Microsoft critical patch excesive exposure score is calucluated based upon the number of machines reported within the last 7 days and Microsoft citical patch content released or modified over 30 days ago. If the machine is applicable to 10 or more critical patches released over 30 days ago applicable, the machine is scored at '+ score_win_patch_machine_cnt_10_or_more_weight +' points. If the machine is applicable to 5 or more critical patches released over 30 days ago applicable, the machine is scored at '+ score_win_patch_machine_cnt_5_or_more_weight +' points. This is then collectively divided accross the number of endpoints reported within the last 7 days. '
			description += '       <br>Score Formula: (('+ p23 + ' * '+score_win_patch_machine_cnt_5_or_more_weight+' pnts) + (' + p24 + ' * '+score_win_patch_machine_cnt_10_or_more_weight+' pnts)) / ' +  total_machines_in_last_7_days  + ''
			description += '      </span>'
			description += '    </div>'	
			
			$('#div_scorecard_win_patch_score2').html(description)
			
			var scorerow_desc = 'Microsoft critical patch excesive exposure score'
			var scorerow = '<li class="list-group-item">' + scorerow_desc + ' <span class="badge">' +  patch_score2.toFixed(2) + '</span></li>'
			$('#div_win_patch_scores').append(scorerow)	
			
			//Enable Tooltips
			$('.customtooltip_std_scorecard').tooltip()				
		}		
		js_async_queue(query,callback)	
}

function js_scorestats_scm_disa(disadef){

		//DISA SCORING WEIGHTS 
		var score_disa_high_weight = 15
		var score_disa_med_weight = 7
		var score_disa_low_weight = 3
	
		js_debug('Test for '+disadef.fullname+' Site = True. Scoring Stats now')
		
		//QUERY MAP DISA
		// 0 - number of fixlets that are high sev 
		// 1 - number of exposures to high sev 
		// 2  - number of unique machines to high sev
		// 3 - number of fixlets that are med sev 
		// 4 - number of exposures to med sev 
		// 5 - number of unique machines to med sev
		// 6 - number of fixlets that are low sev 
		// 7 - number of exposures to low sev 
		// 8 - number of unique machines to low sev	
		// 9 - number of subscribed systems to site
		// 10 - total number of fixlets in site
		// 11 - total number of exposures to any control within site
		// 12 - total unique machines relevant with more than 1 relevant control
		
		query=''
		query += 'number of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "high" ) of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'sums of applicable computer counts of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "high") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'number of unique values of (ids of applicable computers of it) of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "high") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		
		query += 'number of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "medium") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'sums of applicable computer counts of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "medium" ) of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'number of unique values of (ids of applicable computers of it) of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "medium") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		
		query += 'number of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "low") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'sums of applicable computer counts of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "low" ) of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'number of unique values of (ids of applicable computers of it) of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and exist source severity whose (it as lowercase contains "low") of it and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		
		query += 'number of unique values of ids of subscribed computers of (bes sites;bes custom sites) whose (display name of it = "' + disadef.fullname + '");'
		query += 'number of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'sums of applicable computer counts of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (display name of site of it = "' + disadef.fullname + '"));'
		query += 'number of unique values of (ids of applicable computers of it) of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "' + disadef.fullname + '"))'
		
		//var ret = js_relevance(query)
		var callback =function(ret){
			js_debug('Stig Query Complete')
			
			var n0 = ret[0]
			var n1 = ret[1]
			var n2 = ret[2]
			var n3 = ret[3]
			var n4 = ret[4]
			var n5 = ret[5]
			var n6 = ret[6]
			var n7 = ret[7]
			var n8 = ret[8]
			var n9 = ret[9]
			var n10 = ret[10]
			var n11 = ret[11]
			var n12 = ret[12]

			//DO NOT MODIFY THESE THIS SETS TABLE AND ARE REFERNCED IN THE SETUP OF THE DISA TABLES
			//set header row
			var headerrow = ''
			headerrow += '<th width="90%"></th>'
			headerrow += '<th width="10%"></th>'
			
			var scoreid = js_replaceall(disadef.fullname, " ", "_" ) + '_score_div'
			var tblid = js_replaceall(disadef.fullname, " ", "_" ) + '_tbl'
			var tbodyid = js_replaceall(disadef.fullname, " ", "_" ) + '_tbody'
			
			var htmltoappend = ''
			//htmltoappend += '<h4 align="center">' + disadef.fullname + ' Statistics</h4>'
			htmltoappend += '<div id="'+scoreid+'"></div>'
			htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="'+tblid+'" width="100%">'
			htmltoappend += '<thead>'
			htmltoappend += headerrow								
			htmltoappend += '</thead>'
			htmltoappend += '<tbody id="'+ tbodyid +'">'
			htmltoappend += '</tbody>'
			htmltoappend += '<tfoot>'
			htmltoappend += '<tr>'
			htmltoappend += headerrow								
			htmltoappend += '</tr>'
			htmltoappend += '</tfoot>'
			htmltoappend += '</table>'			
			$('#' + disadef.main_div).html(htmltoappend)
			
			var htmltoappend = ''
			htmltoappend += '<tr><td colspan="2" align=left><b>'+disadef.descname+' High Severity Controls Compliance</b></td></tr>'	
			htmltoappend += '<tr><td><span>1. Number of '+disadef.descname+' checks designated high severity</span></td><td><span><font color="red">'+ n0 +'</font></span></td></tr>'
			htmltoappend += '<tr><td><span>2. Number of unique deviations to '+disadef.descname+' checks designated high severity</span></td><td><span><font color="red">'+ n1 +'</font></span> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_disa_high_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td><span>3. Number of unique machines deviating from at least 1 '+disadef.descname+' check designated high severity</span></td><td><span><font color="red">'+ n2 +'</font></span></td></tr>'
			
			htmltoappend += '<tr><td colspan="2" align=left><b>'+disadef.descname+' Medium Severity Controls Compliance</b></td></tr>'	
			htmltoappend += '<tr><td><span>1. Number of '+disadef.descname+' checks designated medium severity</span></td><td><span>'+ n3 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>2. Number of unique deviations to '+disadef.descname+' checks designated medium severity</span></td><td><span>'+ n4 +'</span> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_disa_med_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td><span>3. Number of unique machines deviating from at least 1 '+disadef.descname+' check designated medium severity</span></td><td><span>'+ n5 +'</span></td></tr>'	

			htmltoappend += '<tr><td colspan="2" align=left><b>'+disadef.descname+' Low Severity Controls Compliance</b></td></tr>'	
			htmltoappend += '<tr><td><span>1. Number of '+disadef.descname+' checks designated low severity</span></td><td><span>'+ n6 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>2. Number of unique deviations to '+disadef.descname+' checks designated low severity</span></td><td><span>'+ n7 +'</span> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_disa_low_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td><span>3. Number of unique machines deviating from at least 1 '+disadef.descname+' check designated low severity</span></td><td><span>'+ n8 +'</span></td></tr>'	
			
			htmltoappend += '<tr><td colspan="2" align=left><b>'+disadef.descname+' Overall Compliance</b></td></tr>'	
			htmltoappend += '<tr><td><span>1. Total number of machines assessed for the '+disadef.descname+'</span></td><td><span>'+ n9 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>2. Total number of '+disadef.descname+' checks</span></td><td><span>'+ n10 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>3. Total number of unique deviations to '+disadef.descname+' checks</span></td><td><span>'+ n11 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>4. Total Number of unique machines deviating from at least 1 '+disadef.descname+' check</span></td><td><span>'+ n12 +'</span></td></tr>'				
			$('#' + tbodyid).append(htmltoappend)	
			
			var score = ((score_disa_high_weight * n1) + (score_disa_med_weight * n4) + (score_disa_low_weight * n7)) / n9
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>'+disadef.descname+' score calculated: </b><font size="4">' + score.toFixed(2) + '</font>'
			description += '       <br><b>Score calculation description</b>: The '+disadef.descname+' score is calucluated based upon the number of high,medium and low check deviations. High severity check deviations are weighted '+score_disa_high_weight+' points per deviation. Medium severity check deviations are weighted '+score_disa_med_weight+' points per deviation. Low severity check deviations are weighted '+score_disa_low_weight+' points per deviation. This is then collectively divided accross the entire number of endpoints evaluated for the '+disadef.descname+'.'
			description += '       <br>Score Formula: (('+ n1 + ' * '+score_disa_high_weight+' pnts) + (' + n4 + ' * '+score_disa_med_weight+' pnts) + (' + n7 + ' * '+score_disa_low_weight+' pnts)) / ' +  n9  + ' [Total Systems Assesed]'
			description += '      </span>'
			description += '    </div>'	
			$('#' + scoreid).html(description)

			var scorerow_desc = disadef.descname + ' score'
			var scorerow = '<li class="list-group-item">' + scorerow_desc + ' <span class="badge">' +  score.toFixed(2) + '</span></li>'
			$('#div_disa_scores').append(scorerow)				
			
			//Enable Tooltips
			$('.customtooltip_std_scorecard').tooltip()					
		}
	js_async_queue(query,callback)		
}

function js_scorestats_scm_cis(cisdef){

		//cis SCORING WEIGHTS 
		var score_cis_all_weight = 5
	
		js_debug('Test for '+cisdef.fullname+' Site = True. Scoring Stats now')
		
		//QUERY MAP CIS

		// 0 - number of subscribed systems to site
		// 1 - total number of fixlets in site
		// 2 - total number of exposures to any control within site
		// 3 - total unique machines relevant with more than 1 relevant control
		
		query=''

		query += 'number of unique values of ids of subscribed computers of (bes sites;bes custom sites) whose (display name of it = "' + cisdef.fullname + '");'
		query += 'number of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "' + cisdef.fullname + '"));'
		query += 'sums of applicable computer counts of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (display name of site of it = "' + cisdef.fullname + '"));'
		query += 'number of unique values of (ids of applicable computers of it) of bes fixlets whose ( (not(name of it starts with "Applicability - ")) and (analysis flag of it = false) and (display name of site of it = "' + cisdef.fullname + '"))'
		
		//var ret = js_relevance(query)
		var callback =function(ret){
			js_debug('Stig Query Complete')
			

			var n0 = ret[0]
			var n1 = ret[1]
			var n2 = ret[2]
			var n3 = ret[3]

			//DO NOT MODIFY THESE THIS SETS TABLE AND ARE REFERNCED IN THE SETUP OF THE cis TABLES
			//set header row
			var headerrow = ''
			headerrow += '<th width="90%"></th>'
			headerrow += '<th width="10%"></th>'
			
			var scoreid = js_replaceall(cisdef.fullname, " ", "_" ) + '_score_div'
			var tblid = js_replaceall(cisdef.fullname, " ", "_" ) + '_tbl'
			var tbodyid = js_replaceall(cisdef.fullname, " ", "_" ) + '_tbody'
			
			var htmltoappend = ''
			//htmltoappend += '<h4 align="center">' + cisdef.fullname + ' Statistics</h4>'
			htmltoappend += '<div id="'+scoreid+'"></div>'
			htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="'+tblid+'" width="100%">'
			htmltoappend += '<thead>'
			htmltoappend += headerrow								
			htmltoappend += '</thead>'
			htmltoappend += '<tbody id="'+ tbodyid +'">'
			htmltoappend += '</tbody>'
			htmltoappend += '<tfoot>'
			htmltoappend += '<tr>'
			htmltoappend += headerrow								
			htmltoappend += '</tr>'
			htmltoappend += '</tfoot>'
			htmltoappend += '</table>'			
			$('#' + cisdef.main_div).html(htmltoappend)
			
			var htmltoappend = ''
			
			htmltoappend += '<tr><td colspan="2" align=left><b>'+cisdef.descname+' Overall Compliance</b></td></tr>'	
			htmltoappend += '<tr><td><span>1. Total number of machines assessed for the '+cisdef.descname+'</span></td><td><span>'+ n0 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>2. Total number of '+cisdef.descname+' checks</span></td><td><span>'+ n1 +'</span></td></tr>'
			htmltoappend += '<tr><td><span>3. Total number of unique deviations to '+cisdef.descname+' checks</span></td><td><span>'+ n2 +'</span> <span class="glyphicon glyphicon-screenshot glyphicon-align-right customtooltip_std_scorecard" data-original-title="This ia a scored component, and is assessed: '+score_cis_all_weight +' points"></span></td></tr>'
			htmltoappend += '<tr><td><span>4. Total Number of unique machines deviating from at least 1 '+cisdef.descname+' check</span></td><td><span>'+ n3 +'</span></td></tr>'				
			$('#' + tbodyid).append(htmltoappend)	
			
			var score = (score_cis_all_weight * n2)/ n0
			var description = '<div class="alert alert-info">'
			description += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
			description += '      <span><b>'+cisdef.descname+' score calculated: </b><font size="4">' + score.toFixed(2) + '</font>'
			description += '       <br><b>Score calculation description</b>: The '+cisdef.descname+' score is calucluated based upon the number of check deviations. A check deviation is weighted '+score_cis_all_weight+' points per deviation.  This is then collectively divided accross the entire number of endpoints evaluated for the '+cisdef.descname+'.'
			description += '       <br>Score Formula: ('+ n2 + ' * '+score_cis_all_weight+' pnts)  / ' +  n0  + ' [Total Systems Assesed]'
			description += '      </span>'
			description += '    </div>'	
			$('#' + scoreid).html(description)

			var scorerow_desc = cisdef.descname + ' score'
			var scorerow = '<li class="list-group-item">' + scorerow_desc + ' <span class="badge">' +  score.toFixed(2) + '</span></li>'
			$('#div_cis_scores').append(scorerow)				
			
			//Enable Tooltips
			$('.customtooltip_std_scorecard').tooltip()					
		}
	js_async_queue(query,callback)		
}


function js_run_sites_main_report(){
	js_debug('FN Run Start js_run_sites_main_report')
			//throw up the modal
			$('#modal_report_running').modal('show') 

				//clear 
				$('#div_result_dept').html('')

				//set header row
				var headerrow = ''
					headerrow += "<th>Site Display Name</th>"
					headerrow += "<th>Site URL</th>"
					headerrow += "<th># of Fixlets and Tasks</th>"
					headerrow += "<th># of Computer Groups</th>"
					headerrow += "<th># of Baselines</th>"
					headerrow += "<th># of Analysis</th>"
					headerrow += "<th>Total Content Items</th>"
					headerrow += "<th>Number of subscribed computers</th>"
					headerrow += "<th>Site Version</th>"
					headerrow += "<th>Site Last Updated</th>"
					
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl_site" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_site">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = '('
				query  += '(if exist (id of it) then ((id of it) as string) else ("No Value"))  & "|!#$|" '
				query  += ' &  display name of it  & "|!#$|"'
				query  += ' &  name of it  & "|!#$|"'
				query  += ' &  url of it  & "|!#$|" '
				query  += ' &  (if (exist (fixlets of it)) then ((number of fixlets of it) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (exist (subscribed computer set of it)) then ((size of (subscribed computer set of it)) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (exist version of it) then (version of it as string) else ("No Version" )) & "|!#$|"'
				query  += ' & (((maximum of (modification time of it)  of fixlets whose (exist modification time of it) of it) as string) | "No Value")& "|!#$|"'
				query  += ' &  (if (exist (fixlets of it)) then ((number of fixlets whose (group flag of it) of it) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (exist (fixlets of it)) then ((number of fixlets whose (task flag of it OR fixlet flag of it) of it) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (exist (fixlets of it)) then ((number of fixlets whose (baseline flag of it) of it) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (exist (fixlets of it)) then ((number of fixlets whose (analysis flag of it) of it) as string) else  ("0"))   & "|!#$|"'
				query  += ' &  (if (custom site flag of it) then ((custom site flag of it) as string) else ("False" )) & "|!#$|"'
				query  += '	) of (bes sites;bes custom sites)'
				query += gbl_query_fixlet_whose
				
						var callback =function(ret){
						js_debug('js_run_sites_main_report Query Start')
						//var ret = js_relevance(query)
					
						
						//set report title
						var reportname = gbl_report_def_object.name
						$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
						
						//loop through result
						var htmltoappend = ''
						for ( var i = 0; i < ret.length; i++ ) {
							var record = ret[i]
							var id = record.split("|!#$|")[0]
							var displayname = record.split("|!#$|")[1]
							var name = record.split("|!#$|")[2]
							var url = record.split("|!#$|")[3]
							var total_fix_cnt = record.split("|!#$|")[4]
							var subscribed_computer_cnt = record.split("|!#$|")[5]
							var ver = record.split("|!#$|")[6]
							var most_recent_fix_time = record.split("|!#$|")[7]
							var group_flag_cnt = record.split("|!#$|")[8]
							var task_or_fix_flag_cnt = record.split("|!#$|")[9]
							var baseline_flag_cnt = record.split("|!#$|")[10]
							var analysis_flag_cnt = record.split("|!#$|")[11]
							var custom_site_flag = record.split("|!#$|")[12]
							
							var esacpedurl = "'"+ url +"','targetWindow'"
							htmltoappend += '<tr>'
							
							if (custom_site_flag == 'False'){
								htmltoappend += '<td><span class="customtooltip_std_site" data-original-title="Site ID: ' + id +'">' + displayname + '</span></td>'
							}
							else {
								htmltoappend += '<td>' + displayname + '</span></td>'
							}
							htmltoappend += '<td><a><span onclick="window.open('+ esacpedurl+');" class="customtooltip_std_site" data-original-title="Click here to open an external window to the site URL">' + url + '</span></a></td>'
							htmltoappend += '<td>' + task_or_fix_flag_cnt + '</td>'
							htmltoappend += '<td>' + group_flag_cnt + '</td>'
							htmltoappend += '<td>' + baseline_flag_cnt + '</td>'
							htmltoappend += '<td>' + analysis_flag_cnt + '</td>'
							htmltoappend += '<td>' + total_fix_cnt + '</td>'
							htmltoappend += '<td>' + subscribed_computer_cnt + '</td>'
							
							if (custom_site_flag == 'True'){
								htmltoappend += '<td><span class="customtooltip_std_site" data-original-title="Note: Custom Sites do not have a version">' + ver + '</span</td>'	
							}
							else {
								htmltoappend += '<td><span class="customtooltip_std_site" data-original-title="This is the hosted site version on this Bigfix Server">' + ver + '</span</td>'	
							}
							if (total_fix_cnt > 0) {
								htmltoappend += '<td><span class="customtooltip_std_site" data-original-title="This information is based upon the max modification time of fixlets within the site">' + most_recent_fix_time + '</span></td>'	
							}
							else {
								htmltoappend += '<td><span class="customtooltip_std_site" data-original-title="This data is based upon the max modification time of fixlets within the site. Looks like there are no fixlets within the site. No fixlets means no value">' + most_recent_fix_time + '</span></td>'
							}
							
							htmltoappend += '</tr>'
						}
						$('#tbl_body_site').append(htmltoappend)
						
						
						//enable datatables on resulting table
						$('#returned_tbl_site').dataTable( {
						"order": [[ 0, "asc" ]],
						 "iDisplayLength": 50,
						"sDom": 'Blfrtip',		
							 "bPaginate": true,
							 "bAutoWidth": true,
							 "bFilter": true,
							 "bSort": true, 
							 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']

						} );	
						
						//Enable Tooltips
						$('.customtooltip_std_site').tooltip()	
						
						//hide modal
						$('#modal_report_running').modal('hide') 					
					js_debug('FN Run Complete js_run_sites_main_report')		
				}
				js_async_queue(query,callback)	
				js_debug('js_run_sites_main_report Query Complete')
}	

function js_run_ops_main_report(){
	js_debug('FN Run Start js_run_ops_main_report')
			//throw up the modal
			$('#modal_report_running').modal('show') 


				//clear 
				$('#div_result_dept').html('')

				//set header row
				var headerrow = ''
				
				headerrow += "<th>User Name</th>"
				headerrow += "<th>Roles Assigned</th>"
				headerrow += "<th>Master Operator Flag</th>"
				headerrow += "<th>Custom Content Flag</th>"
				headerrow += "<th>Creation Time</th>"
				headerrow += "<th>Last Login Time</th>"
				headerrow += "<th>Time Since Last Login</th>"
				headerrow += "<th>LDAP CN</th>"
				headerrow += "<th># of issued Actions</th>"
				headerrow += "<th># of Published Fixlets</th>"
				
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_dept">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = ''

					query +='('
					query +='name of it & "!!!!" &  '
					query +=' (if exists (roles of it) then (concatenation of (concatenations "<br>;" of names of roles of it)) else ("No-Role")) & "!!!!" & '
					query +='((master flag of it) as string ) & "!!!!" & '
					query +='((custom content flag of it)  as string) & "!!!!" & '
					query +='((creation time of it) as string) & "!!!!" & '
					query +='(if exist (last login time of it) then ((last login time of it) as string) else ("Never-Logged-On")) & "!!!!" & '
					query +='(if exist (distinguished name of it) then ((distinguished name  of it) as string) else ("Non-LDAP-Account"))& "!!!!" & '
					query +='(if exist (issued action set of it) then ((size of issued action set of it) as string) else ("No-Actions")) & "!!!!" & '
					query +='(if exist (issued fixlet set of it) then ((size of issued fixlet set of it) as string) else ("No-Fixlets")) & "!!!!" & '
					query +='(if exist (last login time of it) then ( (now - last login time of it) as string) else ("Never-Logged-On"))'
					query +=')  of bes users '
					query += gbl_query_fixlet_whose
				
				
				var callback = function(ret){
				//log whose clause
				//js_debug('Dept Query Whose=' + gbl_query_fixlet_whose)
				//log the query 
				//var ret = js_relevance(query)
				//set report title
				//var reportname = $('#ui_report_type').find(":selected").text()
				var reportname = gbl_report_def_object.name
				$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
				js_debug('js_run_std_main_report Query Complete')
				//loop through result
				var htmltoappend = ''

				for (var i=0; i <ret.length; i++){
					var record = ret[i]
					var name = record.split("!!!!")[0]
					var roles = record.split("!!!!")[1]
					var mo_flag = record.split("!!!!")[2]
					var custom_content_flag = record.split("!!!!")[3]
					var creation_time = record.split("!!!!")[4]
					var last_login_time = record.split("!!!!")[5]
					var ad_name = record.split("!!!!")[6]     
					var action_count= record.split("!!!!")[7]     
					var fixlet_count= record.split("!!!!")[8]     
					var last_login_diff= record.split("!!!!")[9] 

					
							htmltoappend += '<tr>'
							//var anc = '<a href="javascript:void(0);" onclick="js_run_drill_fixlet_description(\''+ site_display_name + '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_std_main" data-original-title="Click here to view details about this Fixlet as a drilldown report">' + vuln_name + '</span></a>'
							htmltoappend += '<td>' + name + '</td>'
							htmltoappend += '<td>' + roles + '</td>'
							htmltoappend += '<td>' +  mo_flag + '</td>'
							htmltoappend += '<td>' + custom_content_flag + '</td>'
							htmltoappend += '<td>' + creation_time + '</td>'
							htmltoappend += '<td>' + last_login_time + '</td>'
							htmltoappend += '<td>' + last_login_diff + '</td>'
							htmltoappend += '<td>' + ad_name + '</td>'
							htmltoappend += '<td>' + action_count + '</td>'
							htmltoappend += '<td>' + fixlet_count + '</td>'
							htmltoappend += '</tr>'
				}

				$('#tbl_body_dept').append(htmltoappend)
				//enable datatables on resulting table
				
				$('#returned_tbl').dataTable( {
				"order": [[ 5, "desc" ]],
				"iDisplayLength": 25,
				"sDom": 'Blfrtip',		
					 "bPaginate": true,
					 "bAutoWidth": true,
					 "bFilter": true,
					 "bSort": true, 
					 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
				} );	
				
				//Enable Tooltips
				//$('.customtooltip_std_main').tooltip()	
				
				//hide modal
				$('#modal_report_running').modal('hide') 					
				js_debug('FN Run Complete js_run_ops_main_report')		
			}

			js_async_queue(query,callback)
}


function js_run_relay_main_report(){
	js_debug('FN Run Start js_run_relay_health_main_report')
			//throw up the modal
			$('#modal_report_running').modal('show') 

				//clear 
				$('#div_result_dept').html('')	
				
				//set header row
				var headerrow = ''
				
				headerrow += "<th>Name</th>"
				headerrow += "<th>DNS Name</th>"
				headerrow += "<th>Last Report Time</th>"
				headerrow += "<th>IP</th>"
				headerrow += "<th>Status</th>"
				headerrow += "<th>Actionsite Version</th>"
				headerrow += "<th>Relay Download Cache Limit</th>"
				headerrow += "<th>Relay Drive Disk Space</th>"
				headerrow += "<th>Relay Version</th>"
				
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_dept">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = '('
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "DNS Name") of it | "")& "!!!!" & '
				query += '   (if (exist (ip addresses of it))then (concatenation "<br>;" of ( (ip addresses of it) as string)) else ("No-Value")) & "!!!!" &  '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Relay Installed Status") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Health Checks::Actionsite Version") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes property whose (id of it = ( 1, 227, 1 ))) of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Health Checks::BES Relay Free Disk Space") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Relay Version") of it | "No-Value") & "!!!!" & '
				query += '   (if (exist name of it) then (name of it) else ("No-Value")) & "!!!!" & '
				query += '   (if (exist last report time of it) then ((last report time of it) as string) else ("No-Value"))'
				query += ' ) '
				query += ' of bes computers '
				query += gbl_query_fixlet_whose
				
							
				//var ret = js_relevance(query)
				 
				var callback = function(ret){

						var reportname = gbl_report_def_object.name
						$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
						js_debug('js_run_std_main_report Query Complete')
						//loop through result
						var htmltoappend = ''

						for (var i=0; i <ret.length; i++){
							var record = ret[i]
							var dns_name= record.split("!!!!")[0]
							var ip= record.split("!!!!")[1]
							var stat = record.split("!!!!")[2]
							var as_ver = record.split("!!!!")[3]
							var relay_drive_limit = record.split("!!!!")[4]
							var relay_drive_free = record.split("!!!!")[5]
							var relay_version = record.split("!!!!")[6]     
							var name = record.split("!!!!")[7]     
							var last_report_time = record.split("!!!!")[8]     

							htmltoappend += '<tr>'	
							htmltoappend += '<td>' + name + '</td>'
							htmltoappend += '<td>' + dns_name + '</td>'
							htmltoappend += '<td>' + last_report_time + '</td>'
							htmltoappend += '<td>' + ip + '</td>'
							htmltoappend += '<td>' + stat + '</td>'
							htmltoappend += '<td>' + as_ver + '</td>'
							htmltoappend += '<td>' + relay_drive_limit + '</td>'
							htmltoappend += '<td>' + relay_drive_free + '</td>'
							htmltoappend += '<td>' + relay_version + '</td>'
							htmltoappend += '</tr>'		
						}
						
						$('#tbl_body_dept').append(htmltoappend)
						//enable datatables on resulting table
					
						$('#returned_tbl').dataTable( {
						"order": [[ 0, "desc" ]],
						"iDisplayLength": 10,
						"sDom": 'Blfrtip',		
							 "bPaginate": true,
							 "bAutoWidth": true,
							 "bFilter": true,
							 "bSort": true, 
							 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
						} );		
				
						
						//Enable Tooltips
						//$('.customtooltip_std_main').tooltip()	
						//hide modal
						$('#modal_report_running').modal('hide') 					
						js_debug('FN Run Complete js_run_relay_health_main_report')		
			}
			js_async_queue(query,callback)
}		


function js_run_relay_number_of_children_main_report(){
	js_debug('FN Run Start js_run_relay_health_main_report')
			//throw up the modal
			$('#modal_report_running').modal('show') 

				//clear 
				$('#div_result_dept').html('')	
				
				var query = ''
				query += ' ((item 0 of it) as uppercase, item 1 of it) '
				query += ' of '
				query += ' ((it, multiplicity of it) of unique values of (relay server of it) of bes computers whose (exist relay server of it))'
					
				var ret = js_relevance(query)
				var ret_array = new Array()
				for (var r=0; r < ret.length; r++){
					var record = ret[r]
				
					var tmp = record.split(",")[0]
					var name = tmp.split(":")[0]
					var cnt = record.split(",")[1]
					var rec_to_push = new Object()
						rec_to_push.name = name
						rec_to_push.cnt = cnt	
					ret_array.push(rec_to_push)
				}	
				
				//set header row
				var headerrow = ''
				
				headerrow += "<th>Name</th>"
				headerrow += "<th>DNS Name</th>"
				headerrow += "<th>Last Report Time</th>"
				headerrow += "<th>IP</th>"
				headerrow += "<th>Status</th>"
				headerrow += "<th>Actionsite Version</th>"
				headerrow += "<th>Relay Download Cache Limit</th>"
				headerrow += "<th>Relay Drive Disk Space</th>"
				headerrow += "<th>Relay Version</th>"
				headerrow += "<th># of Clients reporting to this relay</th>"
				
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_dept">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = '('
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "DNS Name") of it | "")& "!!!!" & '
				query += '   (if (exist (ip addresses of it))then (concatenation "<br>;" of ( (ip addresses of it) as string)) else ("No-Value")) & "!!!!" &  '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Relay Installed Status") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Health Checks::Actionsite Version") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes property whose (id of it = ( 1, 227, 1 ))) of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Health Checks::BES Relay Free Disk Space") of it | "No-Value") & "!!!!" & '
				query += '   ((if it equals "N/A" then "N\A" else it) of value of results from (bes properties "BES Relay Version") of it | "No-Value") & "!!!!" & '
				query += '   (if (exist name of it) then (name of it) else ("No-Value")) & "!!!!" & '
				query += '   (if (exist last report time of it) then ((last report time of it) as string) else ("No-Value"))'
				query += ' ) '
				query += ' of bes computers '
				query += gbl_query_fixlet_whose
				
							
				//var ret = js_relevance(query)
				 
				var callback = function(ret){

						var reportname = gbl_report_def_object.name
						$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
						js_debug('js_run_std_main_report Query Complete')
						//loop through result
						var htmltoappend = ''

						for (var i=0; i <ret.length; i++){
							var record = ret[i]
							var dns_name= record.split("!!!!")[0]
							var ip= record.split("!!!!")[1]
							var stat = record.split("!!!!")[2]
							var as_ver = record.split("!!!!")[3]
							var relay_drive_limit = record.split("!!!!")[4]
							var relay_drive_free = record.split("!!!!")[5]
							var relay_version = record.split("!!!!")[6]     
							var name = record.split("!!!!")[7]     
							var last_report_time = record.split("!!!!")[8]     

							htmltoappend += '<tr>'	
							htmltoappend += '<td>' + name + '</td>'
							htmltoappend += '<td>' + dns_name + '</td>'
							htmltoappend += '<td>' + last_report_time + '</td>'
							htmltoappend += '<td>' + ip + '</td>'
							htmltoappend += '<td>' + stat + '</td>'
							htmltoappend += '<td>' + as_ver + '</td>'
							htmltoappend += '<td>' + relay_drive_limit + '</td>'
							htmltoappend += '<td>' + relay_drive_free + '</td>'
							htmltoappend += '<td>' + relay_version + '</td>'

							var flg_hit = false
							for (var r=0; r < ret_array.length; r++){
								//dnsnamelookup had a trailing space
								var arry_name = ret_array[r].name.toString().toUpperCase().trim()
								var dns_name_lookup = dns_name.toString().toUpperCase().trim()
								if (arry_name == dns_name_lookup) {
									htmltoappend += '<td><span  class="customtooltip_std_main" data-original-title="Number of machines (including relays and clients) that are reported to this server by DNS name">' + ret_array[r].cnt  + '</span></td>'
									//set our flag
									flg_hit = true
									ret_array.splice(r, 1);
									//break out of for loop...
									break;
								}
							}
							//we never got a hit within the for loop
							if (flg_hit == false) {
								htmltoappend += '<td>0</td>'
							}
							htmltoappend += '</tr>'		
						}
						
						$('#tbl_body_dept').append(htmltoappend)
						//enable datatables on resulting table
					
						$('#returned_tbl').dataTable( {
						"order": [[ 9, "desc" ]],
						"iDisplayLength": 10,
						"sDom": 'Blfrtip',		
							 "bPaginate": true,
							 "bAutoWidth": true,
							 "bFilter": true,
							 "bSort": true, 
							 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
						} );		
						
						//////////////////////////////////////////////////////////////////////////////////////////
						if (ret_array.length > 0){
							//define table 2
							//Setting up HTML Frame for table 2
							var htmltoappend = ''
							htmltoappend += '<br>'
							htmltoappend += '<div align="center">'
							htmltoappend += '	<h4>Machines Reporting to DNS Alias or Core Server</h4>'
							htmltoappend += '</div>'
							htmltoappend += '<br>'
							
							htmltoappend += '  <div class="alert alert-info">'
							htmltoappend += '    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
							htmltoappend += '      <span><b>The report below requires some explanation:</b>'
							htmltoappend += '       <br>The data within the table below identifies client machines are likely reporting to relays through a DNS Alias or the root server directly. The table above does not coorelate DNS Alias resolution to a relay. The data below is sourceed by first querying all clients relay names. That list is then compared to a list of relays within the enviornment, if a name exists within the clients relay list, and does not exist as a relay within the system by the same name. That difference will be shown within the table below. In most cases this condition reflects the use of a DNS alias.'
							htmltoappend += '      </span>'
							htmltoappend += '   </div>'
							htmltoappend += '<br>'
							
							$('#div_result_dept').append(htmltoappend)

							//set header row
							var headerrow = ''
							headerrow += "<th>Relay DNS Alias</th>"
							headerrow += "<th># of Machines Reporting</th>"				
							
							var htmltoappend = ''
							htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl2" width="100%">'
							htmltoappend += '<thead>'
							htmltoappend += headerrow								
							htmltoappend += '</thead>'
							htmltoappend += '<tbody id="tbl_body_dept2">'
							htmltoappend += '</tbody>'
							htmltoappend += '<tfoot>'
							htmltoappend += '<tr>'
							htmltoappend += headerrow								
							htmltoappend += '</tr>'
							htmltoappend += '</tfoot>'
							htmltoappend += '</table>'
							$('#div_result_dept').append(htmltoappend)
							
							var htmltoappend = ''
							for (var r=0; r < ret_array.length; r++){

								htmltoappend += '<tr>'
								htmltoappend += '	<td>' + ret_array[r].name.trim() + '</td>'
								htmltoappend += '	<td>' + ret_array[r].cnt.trim()  +'</td>'
								htmltoappend += '</tr>'
							}
							$('#tbl_body_dept2').append(htmltoappend)
							
							$('#returned_tbl2').dataTable( {
							"order": [[ 1, "desc" ]],
							"iDisplayLength": 10,
							"sDom": 'Blfrtip',		
								 "bPaginate": true,
								 "bAutoWidth": true,
								 "bFilter": true,
								 "bSort": true, 
								 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
							} );					
						}
						
						//Enable Tooltips
						$('.customtooltip_std_main').tooltip()	
						//hide modal
						$('#modal_report_running').modal('hide') 					
						js_debug('FN Run Complete js_run_relay_health_main_report')		
			}
			js_async_queue(query,callback)
}	



function js_run_std_main_report(){
	js_debug('FN Run Start js_run_std_main_report')
			//throw up the modal
			$('#modal_report_running').modal('show') 


				//clear 
				$('#div_result_dept').html('')

				//set header row
				var headerrow = ''
				
				headerrow += "<th>Vulnerability Name</th>"
				headerrow += "<th>CVE Associated</th>"
				headerrow += "<th>Category</th>"
				headerrow += "<th>Source Severity</th>"
				headerrow += "<th>Source Release Date</th>"
				headerrow += "<th>Total Machines Vulnerable</th>"
				headerrow += "<th>Content Location</th>"
				
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_dept">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = ''

				query += ' ( '
				query += '    (name of it) & "!!!!" & '
				query += '    (if (exists CVE ID List of it) then (CVE ID List of it as string) else ("none"))& "!!!!" & '
				query += '    (if (exists Category of it) then (Category of it as string) else ("none"))& "!!!!" & '
				query += '    (if (exists Source Severity of it) then (Source Severity of it as string) else ("none")) & "!!!!" & '
				query += '    (if (exists source release date of it) then ((Source Release date of it) as string) else ("none")) & "!!!!" & '
				query += '	  ((applicable computer count of it) as string) & "!!!!" & '
				query += '    (concatenation "-" of ((Display name of site of it); ("Fixlet ID:" & ((id of it) as string))))  & "!!!!" & '
				query += '	  ((id of it) as string) & "!!!!" & '
				query += '	  ((display name of site of it) as string) '
				query += '  ) '
				query += ' of bes fixlets '
				query += gbl_query_fixlet_whose
				
				
				var callback = function(ret){
				//log whose clause
				//js_debug('Dept Query Whose=' + gbl_query_fixlet_whose)
				//log the query 
				//var ret = js_relevance(query)
				//set report title
				//var reportname = $('#ui_report_type').find(":selected").text()
				var reportname = gbl_report_def_object.name
				$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
				js_debug('js_run_std_main_report Query Complete')
				//loop through result
				for (var i=0; i <ret.length; i++){
					var record = ret[i]
					var vuln_name = record.split("!!!!")[0]
					var cve = record.split("!!!!")[1]
					var category = record.split("!!!!")[2]
					var source_sev = record.split("!!!!")[3]
					var source_release_date= record.split("!!!!")[4]
					var applicable_count = record.split("!!!!")[5]
					var content = record.split("!!!!")[6]     
					var fix_id = record.split("!!!!")[7]     
					var site_display_name = record.split("!!!!")[8]     
					
					var htmltoappend = ''
							htmltoappend = '<tr>'
							var anc = '<a href="javascript:void(0);" onclick="js_run_drill_fixlet_description(\''+ site_display_name + '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_std_main" data-original-title="Click here to view details about this Fixlet as a drilldown report">' + vuln_name + '</span></a>'
							htmltoappend += '<td>' + anc + '</td>'
							htmltoappend += '<td>' + cve + '</td>'
							htmltoappend += '<td>' + category + '</td>'
							htmltoappend += '<td>' + source_sev + '</td>'
							htmltoappend += '<td>' + source_release_date + '</td>'
							if (applicable_count > 0) {
								var anc = '<a href="javascript:void(0);" onclick="js_run_drill_applicable_computers(\''+ site_display_name + '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_std_main" data-original-title="Click here to view the ['+applicable_count+'] vulnerable machines as a drilldown report">' + applicable_count + '</span></a>'
								htmltoappend += '<td>' + anc + '</td>'
							}
							else {
								htmltoappend += '<td>0</td>'
							}
							htmltoappend += '<td>' + content + '</td>'
							htmltoappend += '</tr>'
						$('#tbl_body_dept').append(htmltoappend)
				}
				
				//enable datatables on resulting table
				$('#returned_tbl').dataTable( {
				"order": [[ 5, "desc" ]],
				"iDisplayLength": 25,
				"sDom": 'Blfrtip',		
					 "bPaginate": true,
					 "bAutoWidth": true,
					 "bFilter": true,
					 "bSort": true, 
					 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']

				} );	
				
				//Enable Tooltips
				$('.customtooltip_std_main').tooltip()	
				
				//hide modal
				$('#modal_report_running').modal('hide') 					
			js_debug('FN Run Complete js_run_std_main_report')		
			}
		
			js_async_queue(query,callback)
}	





function js_run_scm_main_report(){
	js_debug('FN Run Start js_run_scm_main_report')	
			//throw up the modal
			$('#modal_report_running').modal('show') 
			
				//clear 
				$('#div_result_dept').html('')

				var relquery_num_of_machines_subscribed = ''
					relquery_num_of_machines_subscribed += 'size of subscribed computer set of (bes sites;bes custom sites) whose (display name of it as lowercase = "' + gbl_report_def_object.scm_checklist_site_name.toLowerCase()+ '")'
				js_debug('SCM Number of subscribed systems Query Start')
				var ret_num_of_systems = js_relevance(relquery_num_of_machines_subscribed)
				js_debug('SCM Number of subscribed systems Query Complete')
				
				//set header row
				var headerrow = ''
				headerrow += "<th>Check Name</th>"
				headerrow += "<th>Category</th>"
				headerrow += "<th>Source Severity</th>"
				headerrow += "<th>Source</th>"
				headerrow += "<th>Source id</th>"
				headerrow += "<th>Source Release Date</th>"
				headerrow += "<th># Not Compliant</th>"
				headerrow += "<th># of machines subscribed to site</th>"
				headerrow += "<th>Content Location</th>"
				
				//define table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="returned_tbl" width="100%">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_dept">'
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				$('#div_result_dept').html(htmltoappend)
				
				//define query we are going to fire
				var query = ''

				query += ' ( '
				query += '    (name of it) & "!!!!" & '
				query += '    (if (exists category of it) then (category of it as string) else ("none"))& "!!!!" & '
				query += '    (if (exists Source Severity of it) then (Source Severity of it as string) else ("none")) & "!!!!" & '
				query += '    (if (exists Source of it) then (Source of it as string) else ("none")) & "!!!!" & '
				query += '    (if (exists Source id of it) then (Source id of it as string) else ("none")) & "!!!!" & '
				query += '    (if (exists source release date of it) then ((Source Release date of it) as string) else ("none")) & "!!!!" & '
				query += '	  ((applicable computer count of it) as string) & "!!!!" & '
				query += '    (concatenation "-" of ((Display name of site of it); ("Fixlet ID:" & ((id of it) as string)))) & "!!!!" &  '
				query += '	  ((id of it) as string) & "!!!!" & '
				query += '	  ((display name of site of it) as string) '					
				query += '  ) '
				query += ' of bes fixlets '
				query += gbl_query_fixlet_whose

				//log whose clause
				//js_debug('Dept Query Whose=' + gbl_query_fixlet_whose)
				//log the query 
				//js_debug('js_run_scm_main_report Query=' + query)

				//fire the query
				js_debug('js_run_scm_main_report Query Start')
				//var ret = js_relevance(query)
				var callback = function (ret){
					
				js_debug('js_run_scm_main_report Query Complete')
				
				//loop through result
				for (var i=0; i <ret.length; i++){
					var record = ret[i]
					var rec0 = record.split("!!!!")[0]
					var rec1 = record.split("!!!!")[1]
					var rec2 = record.split("!!!!")[2]
					var rec3 = record.split("!!!!")[3]
					var rec4 = record.split("!!!!")[4]
					var rec5 = record.split("!!!!")[5]     
					var applicable_count = record.split("!!!!")[6]
					var rec7 = record.split("!!!!")[7]
					var fix_id = record.split("!!!!")[8]     
					var site_display_name = record.split("!!!!")[9]     						
					
					
							var htmltoappend = ''
							htmltoappend = '<tr>'
							var anc = '<a href="javascript:void(0);" onclick="js_run_drill_fixlet_description(\''+ site_display_name + '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_scm_main" data-original-title="Click here to view details about this Fixlet as a drilldown report">' + rec0 + '</span></a>'
							htmltoappend += '<td>' + anc + '</td>'
							htmltoappend += '<td>' + rec1+ '</td>'
							htmltoappend += '<td>' + rec2 + '</td>'
							htmltoappend += '<td>' + rec3 + '</td>'
							htmltoappend += '<td>' + rec4 + '</td>'
							htmltoappend += '<td>' + rec5 + '</td>'
							if (applicable_count > 0) {
								var anc = '<a href="javascript:void(0);" onclick="js_run_drill_applicable_computers(\''+ site_display_name + '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_scm_main" data-original-title="Click here to view the ['+applicable_count+'] non-compliant machines as a drilldown report">' + applicable_count + '</span></a>'
								htmltoappend += '<td>' + anc + '</td>'
							}
							else {
								htmltoappend += '<td>0</td>'
							}
							htmltoappend += '<td>' + ret_num_of_systems + '</td>'
							htmltoappend += '<td>' + rec7 + '</td>'
							htmltoappend += '</tr>'
						$('#tbl_body_dept').append(htmltoappend)
				}
				
				//enable datatables on resulting table
				$('#returned_tbl').dataTable( {
				"order": [[ 6, "desc" ]],
				"iDisplayLength": 25,
				"sDom": 'Blfrtip',		
					 "bPaginate": true,
					 "bAutoWidth": true,
					 "bFilter": true,
					 "bSort": true, 
					 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
				} );		
				
				//set report title
				var reportname = gbl_report_def_object.name
				$('#div_result_dept_title').html('<h4>' + reportname + '</h4>')
				
				//Enable Tooltips
				$('.customtooltip_scm_main').tooltip()	
				
				//hide modal
				$('#modal_report_running').modal('hide') 
					js_debug('FN Run Complete js_run_scm_main_report')				
				}

				js_async_queue(query,callback)
	
}
	
	
function js_run_std_group_report(){
js_debug('FN Run Start js_run_std_group_report')	
	//wrapper function for bureau report
		$('#modal_report_running').modal('show') 
		
			//clear table div
			$('#div_result_bureau').html('')
			
			//add our column heading/ column and adjust query
			var headerrow = ''
				headerrow += "<th>Vulnerability Name</th>"	
			var group_string = ''
			var td_string = ''
			
			td_string = '"<td>" & ("<a class=%22customtooltip_std_grp%22 data-original-title=%22Click here to view details about this Fixlet as a drilldown report%22" & " onclick=js_run_drill_fixlet_description(" & ((item 2 of item 0 of it) as string) & "," & ((item 1 of item 0 of it) as string) & ")>" & (item 0 of item 0 of it) & "</a>" ) & "</td>"'

			//for each selected item within the group dropdown
			 var itemselected = 0
			 var group_obj_array = new Array()
			$('#ui_input_computergrp > option:selected').each(function() {
				
				//parse the value of the option, which has a stringified JSON string
				var record = JSON.parse($(this).val())
				//pre process of group name , if need be
				var cust_group_name = js_replaceall( record.grp_name, "_", " " )
				//set header row columns
				 headerrow += '<th><span class="customtooltip_grp" data-original-title="Group Site:' + record.grp_site + ' Group Id:' + record.grp_id + ' Group Name:' + record.grp_name +  '">' + cust_group_name +'</span></th>'
				 //append our string for the group intersection query
				 group_string += ' & "(|!#$|" & (size of (intersection of (applicable computer set of it;member sets of bes computer groups whose ((id of it) as string = "'+ record.grp_id +'" AND name of it = "' + record.grp_name + '")))) as string'
				 group_obj_array.push(record)
				 itemselected++

			})

			var query = ''
			query += '((((name of it) as string) & "(|!#$|" & ((id of it) as string) & "(|!#$|" &  ((display name of site of it) as string)) of it '
			query += group_string
			query += ')'
			query += 'of bes fixlets ' 
			query += gbl_query_fixlet_whose

			js_debug('Group Query=' + query)
			
			//Fire call
			var htmltablecontents = ''
			js_debug('js_run_std_group_report Query Start')
			//var ret = js_relevance(query)
			
			var callback = function(ret){
				js_debug('js_run_std_group_report Query Complete')
				
				js_debug('ret len =' + ret.length)
				for (var i=0; i <ret.length; i++){
					//for every record returned from the array...
					var record = ret[i]
					//js_debug ('Processing: ' + record)
					var record_array = record.split("(|!#$|");
					//js_debug('record_array len =' + record_array.length)
					
					var fix_name = record_array[0]
					var fix_id = record_array[1]
					var fix_site_display_name = record_array[2]

					htmltablecontents += '<tr>'
					
					var anc = '<a href="javascript:void(0);" onclick="js_run_drill_fixlet_description(\''+ fix_site_display_name+ '\',\'' + fix_id + '\'); return false;"><span" class="customtooltip_std_grp" data-original-title="Click here to view details about this Fixlet as a drilldown report">' + fix_name + '</span></a>'									
					htmltablecontents += '<td>' + anc + '</td>'

					var cnter = 0
					//loop through all other counts...
					for (var k=3; k <record_array.length; k++){
						
						//js_debug(cnter + ' ' + record_array[k])
						var fix_cnt = record_array[k]
						var group_record = group_obj_array[cnter]
						//js_debug(group_record)
						if (fix_cnt > 0){
							var classdef = 'class="customtooltip_std_grp" data-original-title="Click here to view the ['+ fix_cnt +'] vulnerable machines within the ' + group_record.grp_name + ' group as a drill down report"'	
							var onclick = 'onclick="js_run_drill_group_applicable_computers(\''+ group_record.grp_name +'\',\'' + group_record.grp_id + '\',\'' +  fix_id  + '\',\'' + fix_site_display_name + '\')"'	
							htmltablecontents += '<td><a ' + classdef + ' ' + onclick +' >' + fix_cnt + '</a></td>'
						}
						else{
							htmltablecontents += '<td>0</td>'
						}
						//this keeps track of the arrays to throw in...
						cnter++
					}
					
					htmltablecontents += '</tr>' 

				}
				js_debug('Query Complete')
				
				//Build table
				var htmltoappend = ''
				htmltoappend += '<table  class="display dataTable hover row-border compact" id="returned_tbl_bureau">'
				htmltoappend += '<thead>'
				htmltoappend += headerrow								
				htmltoappend += '</thead>'
				htmltoappend += '<tbody id="tbl_body_bureau">'
				//Shove in our return
				htmltoappend += htmltablecontents
				htmltoappend += '</tbody>'
				htmltoappend += '<tfoot>'
				htmltoappend += '<tr>'
				htmltoappend += headerrow								
				htmltoappend += '</tr>'
				htmltoappend += '</tfoot>'
				htmltoappend += '</table>'
				//Insert into ui
				$('#div_result_bureau').html(htmltoappend)
				$('#div_result_bureau_title').html('')
				
				//Enable data tables 
				$('#returned_tbl_bureau').dataTable( {
				"order": [[ 0, "desc" ]],
				"iDisplayLength": 25,
				"sDom": 'Blfrtip',		
					 "bPaginate": true,
					 "bAutoWidth": true,
					 "bFilter": true,
					 "bSort": true, 
					 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']
				} );			
				
				//Set report title
				var reportname = gbl_report_def_object.name
				$('#div_result_bureau_title').html('<h4>' + reportname + '</h4>')
				
				//Enable tooltips
				$('.customtooltip_grp').tooltip();
				$('.customtooltip_std_grp').tooltip()	
												
				//hide modal								
				$('#modal_report_running').modal('hide')
				js_debug('FN Run Complete js_run_std_group_report')		
			}
			
			js_async_queue(query,callback)
}

function js_run_cve_shim_main_report(){
	js_debug('FN Run Start js_run_cve_shim_main_report')
	
			var itemselected = 0
		 
			//Checking how many Select Items have been Selected
			$('#ui_cve_select > option:selected').each(function() {
				itemselected++
			})

			//if we have more than 0, and more less than the global max, continue down the normal code path
			if ((itemselected > 0) && (itemselected <= global_cve_select_box_limit) ) {
					//Do nothing 
				
					var whoseclause = 'whose (exist cve id list whose (' 
					var report_title = 'CVE Common Vulnerability Enumeration ('
					$('#ui_cve_select > option:selected').each(function() {						
						//parse the value of the option, which has a stringified JSON string
						var record = JSON.parse($(this).val())
						whoseclause += ' (it  contains "' + record.cve +'")  OR'
						report_title += record.cve + ','
					})
					whoseclause += ' false)  of it   '
					if (typeof gbl_report_def_object.cve_whose_param !== "undefined"){
						whoseclause += gbl_report_def_object.cve_whose_param
					}
					whoseclause += ')'
					
					
					report_title = report_title.substring(0, report_title.length - 1);
					report_title += ')'

					js_debug('CVE String whose defined as :' + whoseclause)
					gbl_query_fixlet_whose = whoseclause
					
					gbl_report_def_object.name = report_title
					js_debug('FN passing to render gbl_report_main_render')
					js_run_std_main_report()			
					
			}
			//the number of item selected is greater than our max
			else if (itemselected > global_cve_select_box_limit) {
				alert('UI Validation Error\n\n Description: To many CVE\'s have been Selected... \n  The limit is set to: ' + global_cve_select_box_limit + '\n  You have selected: ' + itemselected + '\n The CVE Select box will be reset')
				$('#ui_cve_select').selectpicker('deselectAll');
				
			}
			//this is an error trap in the case no groups were selected, or an uncaught error condition was caught...
			else {
				alert('UI Validation Error\n\n Description: No CVE\'s have been Selected OR an untrapped error was encountered. You must select at least one CVE from the group selection dropdown...')
				return;
			}		
			js_debug('FN Run Complete js_run_cve_shim_main_report')		

}	

function js_run_msbull_shim_main_report(){
	js_debug('FN Run Start js_run_cve_shim_main_report')

			var itemselected = 0
		 
			//Checking how many Select Items have been Selected
			$('#ui_msbull_select > option:selected').each(function() {
				itemselected++
			})

			//if we have more than 0, and more less than the global max, continue down the normal code path
			if ((itemselected > 0) && (itemselected <= global_msbull_select_box_limit) ) {
					//Do nothing 
				
					var whoseclause = 'whose (exist name whose (' 
					var report_title = 'Microsoft Bulletin Report ('
					$('#ui_msbull_select > option:selected').each(function() {						
						//parse the value of the option, which has a stringified JSON string
						var record = JSON.parse($(this).val())
						whoseclause += ' (it  contains "' + record.msbull +'")  OR'
						report_title += record.msbull + ','
					})

					
					whoseclause += ' false)  of it   '
					if (typeof gbl_report_def_object.msbull_whose_param !== "undefined"){
			
						whoseclause += gbl_report_def_object.msbull_whose_param
					}
					whoseclause += ')'
					
					js_debug('msbull String whose defined as :' + whoseclause)
					gbl_query_fixlet_whose = whoseclause
					
					report_title = report_title.substring(0, report_title.length - 1);
					report_title += ')'				
					gbl_report_def_object.name = report_title
					
					js_debug('FN passing to render gbl_report_main_render')
					js_run_std_main_report()			
					
			}
			//the number of item selected is greater than our max
			else if (itemselected > global_msbull_select_box_limit) {
				alert('UI Validation Error\n\n Description: To many Bulletins\'s have been Selected... \n  The limit is set to: ' + global_msbull_select_box_limit + '\n  You have selected: ' + itemselected + '\n The Microsoft Bulletins Select box will be reset')
				$('#ui_msbull_select').selectpicker('deselectAll');
				return;
			}
			//this is an error trap in the case no groups were selected, or an uncaught error condition was caught...
			else {
				alert('UI Validation Error\n\n Description: No Microsoft Bulletins\'s have been Selected OR an untrapped error was encountered. You must select at least one Microsoft Bulletin from the group selection dropdown...')
				return;
			}		

			js_debug('FN Run Complete js_run_msbull_shim_main_report')		

}
	

function js_run_cve_shim_std_group_report(){
	js_debug('FN Run Start js_run_cve_shim_std_group_report')
	
			var itemselected = 0
		 
			//Checking how many Select Items have been Selected
			$('#ui_cve_select > option:selected').each(function() {
				itemselected++
			})

			//if we have more than 0, and more less than the global max, continue down the normal code path
			if ((itemselected > 0) && (itemselected <= global_cve_select_box_limit) ) {
					//Do nothing 
				
					var whoseclause = 'whose (exist cve id list whose (' 
					var report_title = 'CVE Common Vulnerability Enumeration ('
					$('#ui_cve_select > option:selected').each(function() {						
						//parse the value of the option, which has a stringified JSON string
						var record = JSON.parse($(this).val())
						whoseclause += ' (it  contains "' + record.cve +'")  OR'
						report_title += record.cve + ','
					})

					
					whoseclause += ' false)  of it   '
					if (typeof gbl_report_def_object.cve_whose_param !== "undefined"){
						whoseclause += gbl_report_def_object.cve_whose_param
					}
					whoseclause += ')'
	
					js_debug('CVE String whose defined as :' + whoseclause)
					gbl_query_fixlet_whose = whoseclause

					report_title = report_title.substring(0, report_title.length - 1);
					report_title += ')'					
					gbl_report_def_object.name = report_title
					js_debug('FN passing to render')
					js_run_std_group_report()			
			}
			//the number of item selected is greater than our max
			else if (itemselected > global_cve_select_box_limit) {
				alert('UI Validation Error\n\n Description: To many CVE\'s have been Selected... \n  The limit is set to: ' + global_cve_select_box_limit + '\n  You have selected: ' + itemselected + '\n The CVE Select box will be reset')
				$('#ui_cve_select').selectpicker('deselectAll');
				return;
			}
			//this is an error trap in the case no groups were selected, or an uncaught error condition was caught...
			else {
				alert('UI Validation Error\n\n Description: No CVE\'s have been Selected OR an untrapped error was encountered. You must select at least one CVE from the group selection dropdown...')
				return;
			}		
			js_debug('FN Run Complete js_run_cve_shim_std_group_report')		
}

function js_run_msbull_shim_std_group_report(){
	js_debug('FN Run Start js_run_msbull_shim_std_group_report')
	
			var itemselected = 0
		 
			//Checking how many Select Items have been Selected
			$('#ui_msbull_select > option:selected').each(function() {
				itemselected++
			})

			//if we have more than 0, and more less than the global max, continue down the normal code path
			if ((itemselected > 0) && (itemselected <= global_msbull_select_box_limit) ) {
					//Do nothing 
				
					var whoseclause = 'whose (exist name whose (' 
					var report_title = 'Microsoft Bulletin Report ('
					$('#ui_msbull_select > option:selected').each(function() {						
						//parse the value of the option, which has a stringified JSON string
						var record = JSON.parse($(this).val())
						whoseclause += ' (it  contains "' + record.msbull +'")  OR'
						report_title += record.msbull + ','
					})

					
					whoseclause += ' false)  of it   '
					if (typeof gbl_report_def_object.msbull_whose_param !== "undefined"){
			
						whoseclause += gbl_report_def_object.msbull_whose_param
					}
					whoseclause += ')'
					
					js_debug('msbull String whose defined as :' + whoseclause)
					gbl_query_fixlet_whose = whoseclause
					
					report_title = report_title.substring(0, report_title.length - 1);
					report_title += ')'				
					gbl_report_def_object.name = report_title
					
					js_debug('FN passing to render')	
					js_run_std_group_report()			
			}
			//the number of item selected is greater than our max
			else if (itemselected > global_msbull_select_box_limit) {
				alert('UI Validation Error\n\n Description: To many Microsoft bulletin\'s have been Selected... \n  The limit is set to: ' + global_msbull_select_box_limit + '\n  You have selected: ' + itemselected + '\n The Microsoft bulletin\'s Select box will be reset')
				$('#ui_msbull_select').selectpicker('deselectAll');
				return;
			}
			//this is an error trap in the case no groups were selected, or an uncaught error condition was caught...
			else {
				alert('UI Validation Error\n\n Description: No msbull\'s have been Selected OR an untrapped error was encountered. You must select at least one Microsoft bulletin from the group selection dropdown...')
				return;
			}		
			js_debug('FN Run Complete js_run_msbull_shim_std_group_report')		
}			
	
		
function js_load_group_dropdown(){
	

		js_debug('FN Run Start js_load_group_dropdown')
		//$('#modal_report_running').modal('show') 
		
		//if you want to limit the groups shown, alter this query
		var query = '("(" & ((number of members of it) as string) & " Members, Site:" & name of site of it &  ")<><><>" & ((id of it) as string) &  "<><><>" & ((name of site of it) as string)  &  "<><><>" & ((name of it) as string)) of bes computer groups whose ((number of members of it > 0 ))'
		//clear contents of select
		//js_clearselect('ui_input_computergrp')
		$('#ui_input_computergrp').empty()
				js_debug('Group Select Query Start')
				//var result = js_relevance(query)
				var callback = function(result){
					js_debug('Group Select Query Complete')
					
					//for every element within array returned, cut it up
					var payload = ''
					for(var i = 0; i < result.length; i++) {
						var tmp = result[i]
						var selectdisplay = tmp.split('<><><>')[0]
						var grpid = tmp.split('<><><>')[1]
						var grpsitename = tmp.split('<><><>')[2]
						var grpname = tmp.split('<><><>')[3]
						var json_val = new Object()
						json_val.grp_id = grpid
						json_val.grp_site = grpsitename
						json_val.grp_name = grpname
						var val = JSON.stringify(json_val)	
						payload += "<option data-subtext='" + selectdisplay + "' value='" + val + "'>"+grpname+"</option>"
					}
					$('#ui_input_computergrp').append(payload)
					
					//js_debug('Order Select Start')	
					//Order select object start	
					var my_options = $("#ui_input_computergrp option");
					var selected = $("#ui_input_computergrp").val();

					my_options.sort(function(a,b) {
						if (a.text > b.text) return 1;
						if (a.text < b.text) return -1;
						return 0
					})

					$("#ui_input_computergrp").empty().append( my_options );
					$("#ui_input_computergrp").val(selected);	
					$('#ui_input_computergrp').selectpicker('refresh');						
					
					//Order select object end
					//js_debug('Order Select End')	
					//$('#modal_report_running').modal('hide') 
					js_debug('FN Run Complete js_load_group_dropdown')		
				}
				js_async_queue(query,callback)

}	
	
function js_load_cve_dropdown(){
		js_debug('FN Run Start js_load_cve_dropdown')	
		
		if (global_cve_dropdown_loaded == true){
			js_debug('FN CVE Dropdown loaded , reload bypassed')	
			return;
		}
		
		$('#modal_report_running').modal('show') 
		var query = '(item 0 of it as string & "|!#$|" & item 1 of it as string) of  ((it, multiplicity of it) of unique values of ((substrings separated by " " of (substrings separated by ";" of ((substrings separated by "," of (cve id list of it) of bes fixlets whose (exists cve id list whose (it starts with "CVE-") of it)) whose (it starts with "CVE-")))) whose (it starts with "CVE-")))'
				//clear contents of select
				$('#ui_cve_select').empty()
				js_debug('CVE Select Query Start')
				
					var callback = function(result){
						
					js_debug('CVE Select Query Complete')
					
					//for every element within array returned, cut it up
					var payload = ''
					var cve_cnter = 0
					for(var i = 0; i < result.length; i++) {
						cve_cnter++
						var tmp = result[i]
						var cve = tmp.split('|!#$|')[0]
						var cntr =  tmp.split('|!#$|')[1]
						var json_val = new Object()
						json_val.cve = cve
						selectdisplay = '(Referenced within '+ cntr +' fixlets)'
						var val = JSON.stringify(json_val)	
						payload += "<option data-subtext='" + selectdisplay + "' value='" + val + "'>"+cve+"</option>"
					}
					
					$('#ui_cve_select').append(payload)				
					var my_options = $("#ui_cve_select option");
					var selected = $("#ui_cve_select").val();

					my_options.sort(function(a,b) {
						if (a.text < b.text) return 1;
						if (a.text > b.text) return -1;
						return 0
					})

					$("#ui_cve_select").empty().append( my_options );
					$("#ui_cve_select").val(selected);
					$('#ui_cve_select').selectpicker('refresh');					
					//populate cve count
					$('#lbl_cve_cnt').html(cve_cnter)	
					$('#modal_report_running').modal('hide') 
					global_cve_dropdown_loaded = true
					js_debug('FN Run Complete js_load_cve_dropdown')					
				}
				js_async_queue(query,callback)
			
}


function js_load_ms_bull_dropdown(){
		js_debug('FN Run Start js_load_msbull_dropdown')
		if (global_msbull_dropdown_loaded == true){
			js_debug('FN MS Bulletin Dropdown loaded , reload bypassed')	
			return;
		}
		$('#modal_report_running').modal('show') 
		var query = '(item 0 of it as string & "|!#$|" & item 1 of it as string) of  (it, multiplicity of it) of unique values of (firsts 8 of names of bes fixlets whose (name of site of it = "Enterprise Security" AND exists match (regex "MS[0-9][0-9]") of first 8 of name of it ))'
				//clear contents of select
				$('#ui_msbull_select').empty()
				js_debug('msbull Select Query Start')
				
				//var result = js_relevance(query)
				var callback = function(result){
					js_debug('msbull Select Query Complete')
					
					//for every element within array returned, cut it up
					var payload = ''
					var msbull_cnter = 0
					for(var i = 0; i < result.length; i++) {
						msbull_cnter++
						var tmp = result[i]
						var msbull = tmp.split('|!#$|')[0]
						var cntr =  tmp.split('|!#$|')[1]
						var json_val = new Object()
						json_val.msbull = msbull
						selectdisplay = '(Referenced within '+ cntr +' fixlets)'
						var val = JSON.stringify(json_val)	
						payload += "<option data-subtext='" + selectdisplay + "' value='" + val + "'>"+msbull+"</option>"
					}
					$('#ui_msbull_select').append(payload)

					var my_options = $("#ui_msbull_select option");
					var selected = $("#ui_msbull_select").val();

					my_options.sort(function(a,b) {
						if (a.text < b.text) return 1;
						if (a.text > b.text) return -1;
						return 0
					})
			
					$("#ui_msbull_select").empty().append( my_options );
					$("#ui_msbull_select").val(selected);
					$('#ui_msbull_select').selectpicker('refresh');
	
					//populate msbull count
					$('#lbl_msbull_cnt').html(msbull_cnter)	
					$('#modal_report_running').modal('hide') 	
					global_msbull_dropdown_loaded = true
					js_debug('FN Run Complete js_load_msbull_dropdown')							
				}
				js_async_queue(query,callback)
				
}


	
function js_load_bes_properties_dropdown(){
		js_debug('FN Run Start js_load_bes_properties_dropdown')	
		
		if (global_besproperty_dropdown_loaded == true){
			js_debug('FN BES Properties Dropdown loaded , reload bypassed')	
			return;
		}		
		$('#modal_report_running').modal('show') 	
		js_debug('Actionsite ID Query Start')
		var query2 = 'if (exist (bes sites whose (name of it as lowercase = "actionsite"))) then ((id of bes sites whose (name of it as lowercase = "actionsite")) as string) else ("no-value")'
		var actionsiteid = js_relevance(query2)
		js_debug('Actionsite ID Query Complete')			
			
		var query = '('
		query += '(id of it as string) & "|!#$|" & '
		query += '(name of it as string) & "|!#$|" & '
		query += '(if (exist source analysis of it) then ((name of it) of source analysis of it) else ("no-value")) & "|!#$|" & '
		query += '(if (exist source analysis of it) then ((name of site of it) of source analysis of it) else ("no-value")) & "|!#$|" & '
		query += '(memory usage of it) as string & "|!#$|" & '
		query += '(reserved flag of it) as string & "|!#$|" & '
		query += '(default flag of it) as string & "|!#$|" & '
		query += '((exist(source analysis of it)) as string) & "|!#$|" & '
		query += '(analysis flag of it) as string & "|!#$|" '
		query += ') of bes properties whose (exist memory usage whose (it > 0)of it)'
				//clear contents of select
				$('#ui_property_select').empty()
				js_debug('Property Select Query Start')
				//var result = js_relevance(query)
				var callback = function(result){
				js_debug('Property Select Query Complete')

					//for every element within array returned, cut it up
					var payload = ''
					var property_cnter = 0
					for(var i = 0; i < result.length; i++) {
						property_cnter++
						var tmp = result[i]
						var id = tmp.split('|!#$|')[0]
						var name = tmp.split('|!#$|')[1]
						var sa_name = tmp.split('|!#$|')[2]
						var sa_site = tmp.split('|!#$|')[3]
						var mem = tmp.split('|!#$|')[4]
						var res_flag = tmp.split('|!#$|')[5]
						var default_flag =  tmp.split('|!#$|')[6]
						var exist_sa =  tmp.split('|!#$|')[7]
						var analysis_flag =  tmp.split('|!#$|')[8]
						var json_val = new Object()
						json_val.id = id
						json_val.name = name
						json_val.sa_name = sa_name
						json_val.sa_site = sa_site
						json_val.mem = mem
						json_val.res_flag = res_flag
						json_val.default_flag = default_flag
						json_val.analysis_flag = analysis_flag
						
						
						if (analysis_flag == 'True'){
							selectdisplay = ' (Property source: '+ sa_name +' analysis within site: '+ sa_site + ')'
						}
						else{
							if (res_flag == 'True'){
								selectdisplay = ' (Referenced to reserved property ID: '+ id +')'	
							}
							else if (default_flag == 'True'){
								selectdisplay = ' (Referenced to default property ID: '+ id +')'
							}
							else {
								if (actionsiteid == "no-value"){
										selectdisplay = ' (Referenced to a non reserved and non default property ID:'+ id +')'	
								}
								else {
									var tmp = id.split(",")[0]
									if ( tmp.indexOf(actionsiteid.trim()) !== -1)
									{
										selectdisplay = ' (Referenced to a global property ID:'+ id +')'	
									}
								}
								
							}
						}
						
						var val = JSON.stringify(json_val)	
						payload += "<option data-subtext='" + selectdisplay + "' value='" + val + "'>"+ name +"</option>"
						
					}
					$('#ui_property_select').append(payload)
					
					var my_options = $("#ui_property_select option");
					var selected = $("#ui_property_select").val();

					my_options.sort(function(a,b) {
						if (a.text < b.text) return 1;
						if (a.text > b.text) return -1;
						return 0
					})

					$("#ui_property_select").empty().append( my_options );
					$("#ui_property_select").val(selected);
					$('#ui_property_select').selectpicker('refresh');
					
					
					//populate property count
					$('#lbl_prop_cnt').html(property_cnter)		
					global_besproperty_dropdown_loaded = true
					$('#modal_report_running').modal('hide') 
					js_debug('FN Run Complete js_load_bes_properties_dropdown')						
				}
				js_async_queue(query,callback)
}

//(name of it, memory usage of it, number of results of it) of bes properties whose (exist memory usage whose (it > 0)of it)	

function js_subreport_init(subreportdef){
js_debug('FN Run Start js_subreport_init')	

	var typein = js_randomint()
	var grp = js_randomint()

	
	//Close all open panels, if we got any
	$('.panel-collapse').each(function(){
		$(this).collapse('hide')
	})
		
	setTimeout(function(){
		var accordionmaindiv = 'subreport-frm-accordion' + grp
		if ($('#' + accordionmaindiv  ).length > 0 ) {} else {
			var parentdiv = '<div id="' + accordionmaindiv + '"></div>'
			$('#subreport-frm-accordion').prepend(parentdiv)
		}
		
		//show drilldown tab
		$('#tab3').show()
		//activate tab3
		js_activetab('tab3target')
		
		var type = grp + '_' + typein
		var tmpobj=new Object();
			tmpobj.type = type 
			tmpobj.table = 'sub_reporttable_' + type
			tmpobj.resultsdiv = 'subreport-results-' + type
			tmpobj.descdiv = 'subreport-desc-' + type
			tmpobj.panneldata = 'subreport-panel_data-'+type
			tmpobj.datawrapper = 'subreport-datawrapper-' + type
			tmpobj.pannelwrapper = 'panel_wrapper_sub_report-' + type
			tmpobj.collapse = 'collapse' + type
			tmpobj.showhidediv = 'subreport-showhide-' +type
			tmpobj.accordionmaindiv = 'subreport-frm-accordion' + grp //No Type this is the main div
			
			//clearing current contents
			$('#' + tmpobj.pannelwrapper).html('')
			
			var quoteddatawrapperdivname = "'" + tmpobj.datawrapper + "'"
			var title = '<span class="glyphicon glyphicon-list-alt">&nbsp</span><span>' + subreportdef.title + '</span>'
		   
		   var htmltoappend 	
			htmltoappend =  ' <div id="'+ tmpobj.pannelwrapper +'">'
			htmltoappend += '  <div class="panel panel-default">'
			htmltoappend += '	<div class="panel-heading">'
			htmltoappend += '	  <h5 class="panel-title">'
			htmltoappend += '		<a data-toggle="collapse" data-parent="#accordion" href="#' + tmpobj.collapse + '">'
			htmltoappend +=             title 
			htmltoappend += '       </a>'
			htmltoappend += '	  </h5>'
			htmltoappend += '	</div>'
			htmltoappend += '	  <div id="' + tmpobj.collapse + '" class="panel-collapse collapse">'
			htmltoappend += '	    <div class="panel-body" id="' + tmpobj.panneldata + '">'
			htmltoappend += '          <br>'
			htmltoappend += '          <div id="'+ tmpobj.datawrapper +'">'
			htmltoappend += '     	 	  <div id="'+tmpobj.descdiv +'"></div><br>'
			htmltoappend += '   	      <div id="'+ tmpobj.resultsdiv+'"></div>'
			htmltoappend += '	        </div>'
			htmltoappend += '	     </div>'
			htmltoappend += '	   </div>'
			htmltoappend += '    </div>'
			htmltoappend += '  </div>'
						
			var htmltable = ''       
			$('#' + tmpobj.accordionmaindiv).prepend(htmltoappend)
			$('#' + tmpobj.resultsdiv).html(subreportdef.result_table_html)
			$('#' + tmpobj.descdiv).html(subreportdef.desc_div_html)
			if (subreportdef.remove_action_class_boolean == true) {
					$('.actionLink').each(function(){
						$(this).parent().parent().hide()
					})
			}
			
			
			$('#' + tmpobj.collapse).collapse('show')
			
			//click tab
			$('#tab3').tab('show')
			
			if (subreportdef.enable_datatables_boolean == true) {
				//enable datatables on resulting table
				$('#' + subreportdef.result_table_id).dataTable( {
				"order": [[ 0, "desc" ]],
				"sDom": 'Blfrtip',		
					 "bPaginate": true,
					 "bAutoWidth": true,
					 "bFilter": true,
					 "bSort": true, 
					 "buttons":['copy', 'csv', 'excel', 'pdf', 'print']

				} );	
			}
		js_debug('FN Run Complete js_subreport_init')	
	},1000);
	
}

function js_run_drill_group_applicable_computers(grp_name,grp_id,fix_id,site_display_name){
		
js_debug('FN Run Start js_run_drill_group_applicable_computers')	
		//show modal
		$('#modal_report_running').modal('show')
			
				var metaquery = '((name of it) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (applicable computer count of it)) then ((applicable computer count of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (category of it)) then ((category of it) as string) else ("No Category Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source of it)) then ((source of it) as string) else ("No Source Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source id of it)) then ((source of it) as string) else ("No Source ID Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source release date of it)) then ((source release date of it) as string) else ("No Source Release Date Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (cve id list of it)) then ((cve id list of it) as string) else ("No CVE Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (open action count of it)) then ((open action count of it) as string) else ("No Open Actions") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (taken actions of it)) then ((number of taken actions of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (modification time of it)) then ((modification time of it) as string) else ("No Modification Time") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (creation time of it)) then ((creation time of it) as string) else ("No Creation Time Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (relevance of it)) then ((relevance of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (type of it)) then ((type of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'))'
				
				js_debug('Fixlet Description Meta Query Start')
				var metaret = js_relevance(metaquery)
				
				js_debug('Fixlet Description Meta Query Complete')
				
						var fix_name = metaret[0]
						var applicable_count = metaret[1]
						var fix_category = metaret[2]
						var fix_source = metaret[3]
						var fix_source_id = metaret[4]
						var fix_source_release_date = metaret[5]
						var fix_cve = metaret[6]
						var fix_open_action_count = metaret[7]
						var fix_taken_action_count = metaret[8]
						var fix_mod_time = metaret[9]
						var fix_creation_time = metaret[10]
						var fix_relevance = metaret[11]
						var fix_content_type = metaret[12]
				
				
						//define query we are going to fire
						var query = ''
						query += '  concatenation of trs of ' 
						query += '	( '
						query += '	td of (if (exist name of it) then (link of it) else (("no-val") as html)) '
						query += '	& td of (if (exist operating system of it) then (operating system of it) else ("no-val")) '
						query += '	& td of (if (exist last report time of it) then ((last report time of it) as string) else ("no-val")) '
						query += '	& td of (if (exist device type of it) then ((device type of it) as string) else ("no-val")) '
						query += '	& td of (if (exist relay server of it) then ((relay server of it) as string) else ("no-val")) '
						query += '	) of '
						query += ' elements of ( '
						query += ' intersection of  '
						query += '   ( '
						query += '     (applicable computer set of bes fixlet whose (display name of site of it = "'+ site_display_name +'" and id of it = ' + fix_id + '));(member sets of bes computer groups whose ((id of it) as string = "'+ grp_id +'")) '
						query += '   ) '
						query += ') '
						
						//fire the query
						js_debug('Applicable Computer Query Start')
						//var ret = js_relevance(query)
						var callback = function(ret){
								js_debug('Applicable Computer Query Complete ')
								
								var tblid =  fix_id  + '_grp_' + js_randomint()
										
								var headerrow = ''
								headerrow += "<th>Name</th>"
								headerrow += "<th>OS</th>"
								headerrow += "<th>Last report Time</th>"
								headerrow += "<th>Device Type</th>"
								headerrow += "<th>Relay Name</th>"
										
								var htmltoappend = ''
								htmltoappend += '<span><b>Important Note</b>: Clicking on the computer name will navigate to the computer details. Be sure to open the link in a new browser window or tab, otherwise it will nagivate the browser away from the current page.</span><br><br>'
								htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="'+ tblid +'" width="100%">'
								htmltoappend += '<thead>'
								htmltoappend += headerrow								
								htmltoappend += '</thead>'
								htmltoappend += '<tbody id="tbl_body_drilldown">'
								htmltoappend += ret
								htmltoappend += '</tbody>'
								htmltoappend += '<tfoot>'
								htmltoappend += '<tr>'
								htmltoappend += headerrow								
								htmltoappend += '</tr>'
								htmltoappend += '</tfoot>'
								htmltoappend += '</table>'
								
								//Generate Tile
								//Generate Tile
								var desc_htmltoappend = '<div class="well well-sm">'
									desc_htmltoappend += '<h4 class="text-left"><span class="label label-primary">'+applicable_count+'</span> Applicable Machines</h4>'
									desc_htmltoappend += '	<div class="container-fluid">'		
									desc_htmltoappend += '		<div class="well well-sm">'	
									desc_htmltoappend += '		<div class="row">'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Site Name: </b>'+site_display_name+'</div>'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Source: </b>'+fix_source+'</div>'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Release Date</b>'+ fix_source_release_date +'</div>'
									desc_htmltoappend += '		</div>'
									desc_htmltoappend += '		<div class="row">'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet ID: </b>'+fix_id+'</div>'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Source ID: </b>'+fix_source_id+'</div>'
									desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Creation Time: </b>'+fix_creation_time +'</div>'
									desc_htmltoappend += '		</div>'
									desc_htmltoappend += '		<div class="row">'
									desc_htmltoappend += '		  <div class="col-md-4"><b>CVE Associations: </b>'+fix_cve+'</div>'
									desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Category: </b>'+fix_category+'</div>'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Modification Time: </b>'+fix_mod_time+'</div>'
									desc_htmltoappend += '		</div>'	
									desc_htmltoappend += '		<div class="row">'
									desc_htmltoappend += '		  <div class="col-md-4"><b>Taken Action Count: </b>'+ fix_taken_action_count +'</div>'
									desc_htmltoappend += '	 	 <div class="col-md-4"><b>Open Action Count: </b>'+fix_open_action_count+'</div>'
									desc_htmltoappend += '	 	 <div class="col-md-4"><b>Content Type: </b>'+fix_content_type+'</div>'						
									desc_htmltoappend += '		  <div class="col-md-4"></div>'
									desc_htmltoappend += '		</div>'							
									desc_htmltoappend += '	   </div>'	
									desc_htmltoappend += '		<div class="row">'
									desc_htmltoappend += '			<div class="col-md-12"><p class="text-center"><span class="glyphicon glyphicon-zoom-out"></span><b> Applicable machines within the <font size="4"><u>['+ grp_name +']</u></font> computer group are listed below</b></p></div>'
									desc_htmltoappend += '		</div>'	
									desc_htmltoappend += '	</div>'
									desc_htmltoappend += '</div>'
								
								var subreportdef = new Object()
								subreportdef.title = '<span class="label label-info">Group Applicable Computers</label></span><span> ' +fix_name + '</span>'
								subreportdef.desc_div_html = desc_htmltoappend 
								subreportdef.result_table_html = htmltoappend
								subreportdef.result_table_id = tblid
								subreportdef.enable_datatables_boolean= true
								subreportdef.remove_action_class_boolean = true
															
								js_subreport_init(subreportdef)
						
								//hide modal
								$('#modal_report_running').modal('hide')
								js_debug('FN Run Complete js_run_drill_group_applicable_computers')	
						}
						js_async_queue(query,callback)
				
		
							
}
		
function js_run_drill_fixlet_description(site_display_name,fix_id){
js_debug('FN Run Start js_run_drill_fixlet_description')	
		//show modal
		$('#modal_report_running').modal('show')
			
				var metaquery = '((name of it) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (applicable computer count of it)) then ((applicable computer count of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (category of it)) then ((category of it) as string) else ("No Category Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source of it)) then ((source of it) as string) else ("No Source Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source id of it)) then ((source of it) as string) else ("No Source ID Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source release date of it)) then ((source release date of it) as string) else ("No Source Release Date Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (cve id list of it)) then ((cve id list of it) as string) else ("No CVE Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (open action count of it)) then ((open action count of it) as string) else ("No Open Actions") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (taken actions of it)) then ((number of taken actions of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (modification time of it)) then ((modification time of it) as string) else ("No Modification Time") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (creation time of it)) then ((creation time of it) as string) else ("No Creation Time Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (relevance of it)) then ((relevance of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (type of it)) then ((type of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'))'
				
				js_debug('Fixlet Description Meta Query Start')
				var metaret = js_relevance(metaquery)
				js_debug('Fixlet Description Meta Query Complete')
				var fix_name = metaret[0]
				var applicable_count = metaret[1]
				var fix_category = metaret[2]
				var fix_source = metaret[3]
				var fix_source_id = metaret[4]
				var fix_source_release_date = metaret[5]
				var fix_cve = metaret[6]
				var fix_open_action_count = metaret[7]
				var fix_taken_action_count = metaret[8]
				var fix_mod_time = metaret[9]
				var fix_creation_time = metaret[10]
				var fix_relevance = metaret[11]
				var fix_content_type = metaret[12]
				
				var bodyquery = '(if(exist (display message of it)) then (if ((display message of it as string as lowercase) contains "%3Cscript%3E") then first ((length of (substrings before "%3Cscript%3E" of ((it as string) as lowercase)) as string) as integer) of ((display message of it) as string) else ((display message of it as string))) else ("no body")) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +')'
				js_debug('Fixlet Description Body Query Start')
				//var fix_body = js_relevance(bodyquery) 
				var callback = function(fix_body){
					js_debug('Fixlet Description Body Query Complete')
					
					//Generate Tile
					var desc_htmltoappend = '<div class="well well-sm">'
						desc_htmltoappend += '<h4 class="text-left"><span class="label label-primary">'+applicable_count+'</span> Applicable Machines</h4>'
						desc_htmltoappend += '	<div class="container-fluid">'		
						desc_htmltoappend += '		<div class="well well-sm">'	
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Site Name: </b>'+site_display_name+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Source: </b>'+fix_source+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Release Date</b>'+ fix_source_release_date +'</div>'
						desc_htmltoappend += '		</div>'
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet ID: </b>'+fix_id+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Source ID: </b>'+fix_source_id+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Creation Time: </b>'+fix_creation_time +'</div>'
						desc_htmltoappend += '		</div>'
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>CVE Associations: </b>'+fix_cve+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Category: </b>'+fix_category+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Modification Time: </b>'+fix_mod_time+'</div>'
						desc_htmltoappend += '		</div>'	
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Taken Action Count: </b>'+ fix_taken_action_count +'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Open Action Count: </b>'+fix_open_action_count+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Content Type: </b>'+fix_content_type+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"></div>'
						desc_htmltoappend += '		</div>'							
						desc_htmltoappend += '	   </div>'	
						if (fix_body.length > 1) {
							desc_htmltoappend += '		<div class="row">'
							desc_htmltoappend += '			<div class="col-md-12"><p class="text-center"><span class="glyphicon glyphicon-pencil"></span><b> Fixlet Description Below</b></p></div>'
							desc_htmltoappend += '		</div>'	
							desc_htmltoappend += '		<div class="row">'						
							desc_htmltoappend += '			<div class="col-md-12"><div class="well well-sm" style="height:300px;overflow:scroll;padding:5px;font-size:10pt;">' + fix_body + '</div></div>'
							desc_htmltoappend += '		</div>'
						}
						else {
							desc_htmltoappend += '		<div class="row">'
							desc_htmltoappend += '			<div class="col-md-12"><p class="text-center"><span class="glyphicon glyphicon-pencil"></span><b> No Fixlet Description for this content type: '+ fix_content_type +'</b></p></div>'
							desc_htmltoappend += '		</div>'	
						}
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '			<div class="col-md-12"><p class="text-center"><span class="glyphicon glyphicon-zoom-out"></span><b> Relevance Below</b></p></div>'
						desc_htmltoappend += '		</div>'	
						desc_htmltoappend += '		<div class="row">'						
						desc_htmltoappend += '			<div class="col-md-12"><div class="well well-sm" style="height:200px;overflow:scroll;padding:5px;font-size:10pt;">' + fix_relevance + '</div></div>'
						desc_htmltoappend += '		</div>'											
						desc_htmltoappend += '	</div>'
						desc_htmltoappend += '</div>'
					
					var subreportdef = new Object()
						subreportdef.title = '<span class="label label-primary"> Fixlet Description</label></span><span> ' +fix_name + '</span>'
						subreportdef.desc_div_html = desc_htmltoappend 
						subreportdef.result_table_html = ''
						subreportdef.result_table_id = ''
						subreportdef.enable_datatables_boolean= false
						subreportdef.remove_action_class_boolean = true
													
						js_subreport_init(subreportdef)
				
						//hide modal
						$('#modal_report_running').modal('hide')
						js_debug('FN Run Complete js_run_drill_fixlet_description')	
				}
				js_async_queue(bodyquery,callback)
				
}

function js_run_drill_applicable_computers(site_display_name,fix_id){
js_debug('FN Run Start js_run_drill_applicable_computers')	
		//show modal
		$('#modal_report_running').modal('show')
			
				var metaquery = '((name of it) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (applicable computer count of it)) then ((applicable computer count of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (category of it)) then ((category of it) as string) else ("No Category Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source of it)) then ((source of it) as string) else ("No Source Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source id of it)) then ((source of it) as string) else ("No Source ID Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (source release date of it)) then ((source release date of it) as string) else ("No Source Release Date Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (cve id list of it)) then ((cve id list of it) as string) else ("No CVE Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (open action count of it)) then ((open action count of it) as string) else ("No Open Actions") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (taken actions of it)) then ((number of taken actions of it) as string) else ("0") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (modification time of it)) then ((modification time of it) as string) else ("No Modification Time") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (creation time of it)) then ((creation time of it) as string) else ("No Creation Time Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (relevance of it)) then ((relevance of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'));'
				metaquery += '(( if (exist (type of it)) then ((type of it) as string) else ("No Relevance Defined") ) of bes fixlet whose (display name of site of it = "'+ site_display_name + '" and id of it = '+ fix_id +'))'
				
				js_debug('Fixlet Description Meta Query Start')
				var metaret = js_relevance(metaquery)
				js_debug('Fixlet Description Meta Query Complete')
				
				var fix_name = metaret[0]
				var applicable_count = metaret[1]
				var fix_category = metaret[2]
				var fix_source = metaret[3]
				var fix_source_id = metaret[4]
				var fix_source_release_date = metaret[5]
				var fix_cve = metaret[6]
				var fix_open_action_count = metaret[7]
				var fix_taken_action_count = metaret[8]
				var fix_mod_time = metaret[9]
				var fix_creation_time = metaret[10]
				var fix_relevance = metaret[11]
				var fix_content_type = metaret[12]
				
				
				//define query we are going to fire
				var query = ''
				query += '  concatenation of trs of ' 
				query += '	( '
				query += '	td of (if (exist name of it) then (link of it) else (("no-val") as html)) '
				query += '	& td of (if (exist operating system of it) then (operating system of it) else ("no-val")) '
				query += '	& td of (if (exist last report time of it) then ((last report time of it) as string) else ("no-val")) '
				query += '	& td of (if (exist device type of it) then ((device type of it) as string) else ("no-val")) '
				query += '	& td of (if (exist relay server of it) then ((relay server of it) as string) else ("no-val")) '
				query += '	) of '
				query += '	elements of applicable computer set of bes fixlet whose (display name of site of it = "'+ site_display_name + '"  and id of it = '+ fix_id +')'
				
				var callback = function(ret){
					//fire the query
					js_debug('Applicable Computer Query Start')
					//var ret = js_relevance(query)
					js_debug('Applicable Computer Query Complete ')
					
					var tblid =  fix_id  + '_' + js_randomint()
							
					var headerrow = ''
					headerrow += "<th>Name</th>"
					headerrow += "<th>OS</th>"
					headerrow += "<th>Last report Time</th>"
					headerrow += "<th>Device Type</th>"
					headerrow += "<th>Relay Name</th>"
							
					var htmltoappend = ''
					htmltoappend += '<span><b>Important Note</b>: Clicking on the computer name will navigate to the computer details. Be sure to open the link in a new browser window or tab, otherwise it will nagivate the browser away from the current page.</span><br><br>'
					htmltoappend += '<table  class="display dataTable hover row-border compact" cellpadding="0" cellspacing="0" id="'+ tblid +'" width="100%">'
					htmltoappend += '<thead>'
					htmltoappend += headerrow								
					htmltoappend += '</thead>'
					htmltoappend += '<tbody id="tbl_body_drilldown">'
					htmltoappend += ret
					htmltoappend += '</tbody>'
					htmltoappend += '<tfoot>'
					htmltoappend += '<tr>'
					htmltoappend += headerrow								
					htmltoappend += '</tr>'
					htmltoappend += '</tfoot>'
					htmltoappend += '</table>'
					
					//Generate Tile
					//Generate Tile
					var desc_htmltoappend = '<div class="well well-sm">'
						desc_htmltoappend += '<h4 class="text-left"><span class="label label-primary">'+applicable_count+'</span> Applicable Machines</h4>'
						desc_htmltoappend += '	<div class="container-fluid">'		
						desc_htmltoappend += '		<div class="well well-sm">'	
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Site Name: </b>'+site_display_name+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Source: </b>'+fix_source+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Release Date</b>'+ fix_source_release_date +'</div>'
						desc_htmltoappend += '		</div>'
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet ID: </b>'+fix_id+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Source ID: </b>'+fix_source_id+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Creation Time: </b>'+fix_creation_time +'</div>'
						desc_htmltoappend += '		</div>'
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>CVE Associations: </b>'+fix_cve+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Fixlet Category: </b>'+fix_category+'</div>'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Fixlet Modification Time: </b>'+fix_mod_time+'</div>'
						desc_htmltoappend += '		</div>'	
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '		  <div class="col-md-4"><b>Taken Action Count: </b>'+ fix_taken_action_count +'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Open Action Count: </b>'+fix_open_action_count+'</div>'
						desc_htmltoappend += '	 	 <div class="col-md-4"><b>Content Type: </b>'+fix_content_type+'</div>'						
						desc_htmltoappend += '		  <div class="col-md-4"></div>'
						desc_htmltoappend += '		</div>'							
						desc_htmltoappend += '	   </div>'	
						desc_htmltoappend += '		<div class="row">'
						desc_htmltoappend += '			<div class="col-md-12"><p class="text-center"><span class="glyphicon glyphicon-zoom-out"></span><b> Applicable machines are listed below</b></p></div>'
						desc_htmltoappend += '		</div>'	
						desc_htmltoappend += '	</div>'
						desc_htmltoappend += '</div>'
					
				var subreportdef = new Object()
					subreportdef.title = '<span class="label label-default"> Applicable Computers</label></span><span> ' +fix_name + '</span>'
					subreportdef.desc_div_html = desc_htmltoappend 
					subreportdef.result_table_html = htmltoappend
					subreportdef.result_table_id = tblid
					subreportdef.enable_datatables_boolean= true
					subreportdef.remove_action_class_boolean = true
												
					js_subreport_init(subreportdef)
			
					//hide modal
					$('#modal_report_running').modal('hide')
					js_debug('FN Run Complete js_run_drill_applicable_computers')	
				}
				js_async_queue(query,callback)

}


function js_test(){
	var qstring = 'number of bes fixlets whose (name of it contains "Java")'
	var tmpobj = '123432432'
	var callback = js_test_callback
	js_async_queue (qstring, callback, tmpobj)
	
	var qstring = 'number of bes computers'
	var tmpobj = '123432432'
	var callback = js_test_callback
	js_async_queue (qstring, callback, tmpobj)

	var qstring = 'number of bes fixlets'
	var tmpobj = '123432432'
	var callback = js_test_callback
	js_async_queue (qstring, callback, tmpobj)
		
}
	
function js_test_callback(result,tmpobj){
	//alert(result)
	//alert(tmpobj)
	
}
	
/////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////[Async_Relevance START ]//////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
	//Global Vars
	var global_total_open_query_counter = 0							//Counter keeps tracks of calls in and out will be 0 if all returned
	var global_total_query_error_counter = 0						//Counter keeps track of total errors
	var global_query_queue_call_threshold = 2						//Global limiter to number of calls open...	
	var global_query_queue_instance_tracker 						//global_query_queue_instance_tracker keeps track of how many times the queue caller has called back to itself...
	var global_query_queue_call_multiplier = 20						//delay setting for calls
	var global_query_queue_call_delay_max_ms = 1500					//Maximum number of milliseconds to delay calls
	var global_query_queue_initialized = false						//Global for initializing Queue
	var global_query_queue_start_time = new Date()					//This sets the initial start time that the queue was created so we can calulate things like queries per sec
	var global_query_queue_total_batch_progress_counter = 0			//This is a running counter of calls that have called back to the call_back (ie. Completed Calls ran through queue)
	var global_total_batch_total_counter = 0						
	var global_total_batch_success_counter = 0 
	var global_query_queue_debug = false

function js_async_queue_reset(){
	global_query_queue_initialized = false
}
	
function js_async_queue(query,callback,tmpobj){
	if (global_query_queue_debug == true) {js_debug('caller=' + arguments.callee.caller.name)}
	//if the query queue has not been initialized... then lets set the instance tracker to sub one of the threshold initially 
	//and then set the global_query_queue_initialized variable to know we have the queue initialized, we also start the timer...
	//the critical piece is this code, should only run the first time the queue is initialized, NOT per query... but only the first time. 
	if (global_query_queue_initialized == false) {
		if (global_query_queue_debug == true) {js_debug('A Async Query Queue has been initialized')}
		global_query_queue_instance_tracker = global_query_queue_call_threshold -1 //global_query_queue_instance_tracker keeps track of how many times the queue caller has called back to itself...
		global_query_queue_initialized = true //by setting this breadcrumb we will not loop back into this if statement, until the initialization var is reset back to false, which should only occur if the same var was set to false		
		//Setting the defaults
		global_total_batch_total_counter = 0 //This is the total amount of queries throwm to the queue		
		global_total_batch_success_counter = 0 //This is the total amount of successful queries that have completed
		global_query_queue_total_batch_progress_counter = 0 //This is a running counter of calls that have called back to the call_back (ie. Completed Calls ran through queue)
		global_query_queue_start_time = new Date() //This sets the initial start time that the queue was created so we can calulate things like queries per sec
	}

	if (arguments.callee.caller.name == 'js_query_queue_sendbacktoqueue') {
		//the fn called itself
		//This statement should only run when the function been called byitself
		//This allows me to keep track of how many calls should be processed by the queue. 
		//If the function is called by itself it is being pushed back in the queue, if it is called by an external function that means we have a new call into the queue
		if (global_query_queue_debug == true) {js_debug('Caller=backtoque')}	
	} else {
		if (global_query_queue_debug == true) {js_debug('Caller=called externally')}
		global_total_batch_total_counter++
	}
	
	//global_query_queue_instance_tracker keeps track of how many times the queue caller has called back to itself...
	global_query_queue_instance_tracker ++

	 // so if the number of open calls is > the number of calls limited by the queue then lets sleep a bit, and multiply the instance tracker
	 if (global_total_open_query_counter > global_query_queue_call_threshold) { 
	 
		//Check in a few miliseconds * the ms multiplyer... So as more queue calls get behind, we should slow down
		//The name of this function is important, as this is how we know if the function called back to itself
		if (global_query_queue_call_delay_max_ms >  global_query_queue_call_multiplier * global_query_queue_instance_tracker )
			{var msdelay = global_query_queue_call_multiplier * global_query_queue_instance_tracker}
		else {
			var msdelay = global_query_queue_call_delay_max_ms
		}
		setTimeout(function js_query_queue_sendbacktoqueue(){
			js_async_queue(query,callback,tmpobj)
		 }, msdelay )
	  } 
	  
	  else {
		//there is some space in the queue - fire another query
		
		//So here we are defining the callback after when we recieve the call back from the async handler
		/////////////query_queue_wrapped_callback/////////////
		/////////////[         START            ]/////////////
		/////////////query_queue_wrapped_callback/////////////
		var query_queue_wrapped_callback = (function (result,tmpobj){
			if (global_query_queue_debug == true) {js_debug('In query_queue_wrapped_callback')}
			
			global_query_queue_total_batch_progress_counter ++	
			global_total_batch_success_counter ++
			//js_query_queue_ui_update_statistics()

				//Last Step, Call Passed in Callback
				if (global_query_queue_debug == true) {js_debug('Exiting Query Queues doublefire callback, calling passed in fn')}
				callback(result,tmpobj)
		});
		js_async_relevance(query, query_queue_wrapped_callback, tmpobj)
		global_query_queue_instance_tracker = 0 //this resets the queue instance tracker (which keeps track of how many times the queue has called itself)
	  }
}	

function js_async_relevance( query, callback, tmpobj ){
		global_query_aync_cnter++
		global_total_open_query_counter++
		var qtrack = new Object()
		var s0 = new Date()
		var s1 = s0.getTime()
		qtrack.start = s0
		qtrack.query = query
		qtrack.callnumber = global_query_aync_cnter	
		js_debug('Async Query Executing [ID=' + global_query_aync_cnter +'] Query= ' + query)

	 Relevance( query, { 
	   success: function ( result ) { 
			var e0 = new Date()
			var e1 = e0.getTime()
			qtrack.end = e1
			qtrack.mstime = ((e1 - s1).toString())
			js_debug('Returning Async Query: [ID=' + qtrack.callnumber + '] Query=' + query + ' Evaltime:' +  qtrack.mstime)
			global_total_open_query_counter = global_total_open_query_counter -1
			callback( result, tmpobj ); 
	   },  
	   failure: function ( error ) {
			global_total_query_error_counter++
			global_total_open_query_counter = global_total_open_query_counter -1
			alert('Returning Async Query Error: \n Query: ' + query + ' \n\n Error: ' + error);
				var errdesc = '<font color="red">Returning Async Query Error: [ID=' + qtrack.callnumber + '] </font>'
					errdesc += '<BR><font color="red"> Query=' + query + '</font>'
					errdesc += '<BR><font color="red">ERROR:' +  error+ '</font>'
				js_debug(errdesc)
	   } 
	 },qtrack, tmpobj);

}
/////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////[Async_Relevance END ]///////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

	

$(document).ready( function () {
		js_onload()
})	
		
//****************************************************************************************************
//**************************************[SUPPORTING FUNCTION]*****************************************
//****************************************************************************************************
//****************************************************************************************************
function js_randomint() {
  return Math.floor(Math.random() * (1000000000000 - 0 + 1)) + 0;
}

function js_activetab(tab){
    $('.nav-tabs a[href="#' + tab + '"]').tab('show');
};

function js_debug(varin){
	global_event_cnter++
	global_event_total_cnter++
	var dt = new Date();
	var utcDate = dt.toUTCString();	
	if (global_event_cnter > global_event_cnter_limit){
		global_event_cnter =0
		$('#div_debug').html('')
		$('#div_debug').append('<br><b><font size="2" color="black">+EVENT Log Rolled (' + utcDate + ')</font></b>')
	}
	
	$('#div_debug').append('<br><font size="2" color="blue">+EVENT ['+ global_event_total_cnter +'] - (' + utcDate + ')</font><br>')
	$('#div_debug').append( '<font size="2" color="black">  DESC: ' + varin + '</font>')		
}


function js_replaceall( text, invar, out ){
	//Replaces all text vars from a string (note will not work on an array, needs to be called per element in that case)
	var ret = text.split(invar).join(out);
	return ret;
}


function js_relevance(q){
	global_query_cnter++
	var a = Date.now();
	js_debug('Executing Query [ID=' + global_query_cnter +'] = ' + q)
	var ret = EvaluateRelevance(q)	
	var b = Date.now();
	var mscounter = (b-a)
	js_debug('Query [ID=' + global_query_cnter +'] Complete in: ' + mscounter + 'ms')
	return ret
}

</script>

<!--External Report Types Script Location Start-->
	<script type="text/javascript" src="/Custom/RF1/vpr_list.js"></script>
	<script type="text/javascript" src="/Custom/RF1/justice_external_loader.js"></script>
<!--External Report Types Script Location End-->

<!--External Report Types Script Location Start BAH-->
	<!--<script type="text/javascript" src="/Custom/RF1/bah_external_loader.js"></script>-->
<!--External Report Types Script Location End BAH-->